starting /Users/dolby/PycharmProjects/TurtleTest/indian-liver-disease-modeling.py
definers 1
definers 1
definers 1
definers 1
definers 1
definers 1
definers 1
definers 1
definers 1
definers 1
definers 1
definers 1
definers 1
definers 1
definers 1
looking at 41 = getfield < PythonLoader, LRoot, display, <PythonLoader,LRoot> > 43 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 43 = invokestatic < PythonLoader, LIPython, import()LIPython; > @21 exception:44 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
looking at 43 = invokestatic < PythonLoader, LIPython, import()LIPython; > @21 exception:44 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
skipping 44
looking at 45 = getfield < PythonLoader, LRoot, HTML, <PythonLoader,LRoot> > 41 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 46 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 45,47 @24 exception:48 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 46 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 45,47 @24 exception:48 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 48
looking at 50 = invokestatic < PythonLoader, Lpandas, import()Lpandas; > @25 exception:51 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
looking at 50 = invokestatic < PythonLoader, Lpandas, import()Lpandas; > @25 exception:51 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
skipping 51
looking at 52 = getfield < PythonLoader, LRoot, pyplot, <PythonLoader,LRoot> > 54 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 54 = invokestatic < PythonLoader, Lmatplotlib, import()Lmatplotlib; > @27 exception:55 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
looking at 54 = invokestatic < PythonLoader, Lmatplotlib, import()Lmatplotlib; > @27 exception:55 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
skipping 55
looking at 57 = invokestatic < PythonLoader, Lseaborn, import()Lseaborn; > @29 exception:58 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
looking at 57 = invokestatic < PythonLoader, Lseaborn, import()Lseaborn; > @29 exception:58 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
skipping 58
looking at 59 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 60 @34 exception:68 style:62 palette:65 color_codes:67 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 60 = getfield < PythonLoader, LRoot, set, <PythonLoader,LRoot> > 57 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 59 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 60 @34 exception:68 style:62 palette:65 color_codes:67 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 68
looking at 69 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 70,72 @38 exception:75 low_memory:74 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 70 = getfield < PythonLoader, LRoot, read_csv, <PythonLoader,LRoot> > 71 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 69 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 70,72 @38 exception:75 low_memory:74 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 75
looking at 77 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 78,79 @41 exception:80 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 78 = getfield < PythonLoader, LRoot, head, <PythonLoader,LRoot> > 69 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 77 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 78,79 @41 exception:80 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 80
looking at 85 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 83,69 @45 exception:86 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 85 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 83,69 @45 exception:86 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 86
looking at 87 = fieldref 88.89 class com.ibm.wala.cast.python.ssa.PythonPropertyRead
looking at 88 = getfield < PythonLoader, LRoot, loc, <PythonLoader,LRoot> > 69 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 89 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 90 @49 exception:92 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 90 = getfield < PythonLoader, LRoot, isnull, <PythonLoader,LRoot> > 91 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 91 = getfield < PythonLoader, LRoot, Albumin_and_Globulin_Ratio, <PythonLoader,LRoot> > 69 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 89 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 90 @49 exception:92 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 92
looking at 93 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 94 @52 exception:95 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 94 = getfield < PythonLoader, LRoot, describe, <PythonLoader,LRoot> > 69 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 93 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 94 @52 exception:95 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 95
looking at 96 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 97 @61 exception:108 name:107 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 97 = getfield < PythonLoader, LRoot, reset_index, <PythonLoader,LRoot> > 98 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 98 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 99 @58 exception:105 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 99 = getfield < PythonLoader, LRoot, size, <PythonLoader,LRoot> > 100 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 100 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 101,102 @56 exception:104 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 101 = getfield < PythonLoader, LRoot, groupby, <PythonLoader,LRoot> > 69 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 100 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 101,102 @56 exception:104 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 104
looking at 98 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 99 @58 exception:105 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 105
looking at 96 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 97 @61 exception:108 name:107 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 108
looking at 110 = binaryop(mul) 111 , 116 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$4
looking at 111 = binaryop(div) 112 , 113 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$4
looking at 112 = getfield < PythonLoader, LRoot, Counts, <PythonLoader,LRoot> > 96 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 113 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 12,114 @65 exception:115 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 113
looking at 114 = getfield < PythonLoader, LRoot, Counts, <PythonLoader,LRoot> > 96 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 113 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 12,114 @65 exception:115 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 115
looking at 117 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 118 @77 exception:127 name:107 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 118 = getfield < PythonLoader, LRoot, reset_index, <PythonLoader,LRoot> > 119 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 119 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 120 @74 exception:126 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 120 = getfield < PythonLoader, LRoot, size, <PythonLoader,LRoot> > 121 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 121 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 122,123 @72 exception:125 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 122 = getfield < PythonLoader, LRoot, groupby, <PythonLoader,LRoot> > 69 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 121 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 122,123 @72 exception:125 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 125
looking at 119 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 120 @74 exception:126 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 126
looking at 117 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 118 @77 exception:127 name:107 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 127
looking at 129 = binaryop(mul) 130 , 116 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$4
looking at 130 = binaryop(div) 131 , 132 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$4
looking at 131 = getfield < PythonLoader, LRoot, Counts, <PythonLoader,LRoot> > 117 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 132 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 12,133 @81 exception:134 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 132
looking at 133 = getfield < PythonLoader, LRoot, Counts, <PythonLoader,LRoot> > 117 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 132 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 12,133 @81 exception:134 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 134
looking at 135 = binaryop(add) 136 , 149 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$4
looking at 136 = binaryop(add) 137 , 140 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$4
looking at 137 = binaryop(add) 138 , 139 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$4
looking at 138 = getfield < PythonLoader, LRoot, Gender, <PythonLoader,LRoot> > 117 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 140 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 141,11 @91 exception:148 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 140
looking at 141 = getfield < PythonLoader, LRoot, astype, <PythonLoader,LRoot> > 142 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
skipping 141
looking at 142 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 144,145,146 @89 exception:147 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 142
looking at 145 = getfield < PythonLoader, LRoot, Percent, <PythonLoader,LRoot> > 117 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 142 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 144,145,146 @89 exception:147 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 147
looking at 140 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 141,11 @91 exception:148 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 148
looking at 150 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 151 @98 exception:154 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 151 = getfield < PythonLoader, LRoot, corr, <PythonLoader,LRoot> > 152 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 152 = fieldref 69.153 class com.ibm.wala.cast.python.ssa.PythonPropertyRead
looking at 153 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > 69 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 150 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 151 @98 exception:154 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 154
looking at 156 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 157,150 @102 exception:159 annot:67 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 157 = getfield < PythonLoader, LRoot, heatmap, <PythonLoader,LRoot> > 57 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 156 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 157,150 @102 exception:159 annot:67 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 159
looking at 160 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 161,162,166 @110 exception:171 axis:170 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 161 = getfield < PythonLoader, LRoot, where, <PythonLoader,LRoot> > 69 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 162 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 163,69 @106 exception:165 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 163 = getfield < PythonLoader, LRoot, notnull, <PythonLoader,LRoot> > 164 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 162 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 163,69 @106 exception:165 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 165
looking at 166 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 167 @108 exception:168 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 167 = getfield < PythonLoader, LRoot, median, <PythonLoader,LRoot> > 69 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 166 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 167 @108 exception:168 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 168
looking at 160 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 161,162,166 @110 exception:171 axis:170 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 171
looking at 172 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 173 @115 exception:177 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 173 = getfield < PythonLoader, LRoot, sum, <PythonLoader,LRoot> > 174 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 174 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 175 @113 exception:176 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 175 = getfield < PythonLoader, LRoot, isnull, <PythonLoader,LRoot> > 160 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 174 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 175 @113 exception:176 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 176
looking at 172 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 173 @115 exception:177 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 177
looking at 179 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @116 exception:180 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
looking at 179 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @116 exception:180 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
skipping 180
looking at 181 = getfield < PythonLoader, LRoot, preprocessing, <PythonLoader,LRoot> > 179 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 182 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 183 @121 exception:186 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 183 = getfield < PythonLoader, LRoot, tolist, <PythonLoader,LRoot> > 184 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 184 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > 185 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 185 = getfield < PythonLoader, LRoot, iloc, <PythonLoader,LRoot> > 160 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 182 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 183 @121 exception:186 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 186
looking at 188 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 189 @124 exception:190 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 189 = getfield < PythonLoader, LRoot, MinMaxScaler, <PythonLoader,LRoot> > 181 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 188 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 189 @124 exception:190 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 190
looking at 192 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 193,194 @128 exception:195 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 193 = getfield < PythonLoader, LRoot, fit_transform, <PythonLoader,LRoot> > 188 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 194 = getfield < PythonLoader, LRoot, iloc, <PythonLoader,LRoot> > 160 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 192 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 193,194 @128 exception:195 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 195
looking at 197 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 198,192 @132 exception:200 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 198 = getfield < PythonLoader, LRoot, DataFrame, <PythonLoader,LRoot> > 199 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 197 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 198,192 @132 exception:200 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 200
looking at 202 = getfield < PythonLoader, LRoot, iloc, <PythonLoader,LRoot> > 160 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 204 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 205,202 @141 exception:209 prefix:124 drop_first:67 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 205 = getfield < PythonLoader, LRoot, get_dummies, <PythonLoader,LRoot> > 206 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 204 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 205,202 @141 exception:209 prefix:124 drop_first:67 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 209
looking at 210 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 211,213 @153 exception:219 axis:146 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 211 = getfield < PythonLoader, LRoot, concat, <PythonLoader,LRoot> > 212 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 215 = getfield < PythonLoader, LRoot, iloc, <PythonLoader,LRoot> > 160 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 218 = getfield < PythonLoader, LRoot, iloc, <PythonLoader,LRoot> > 160 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 210 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 211,213 @153 exception:219 axis:146 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 219
looking at 221 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 222,79 @156 exception:223 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 222 = getfield < PythonLoader, LRoot, head, <PythonLoader,LRoot> > 210 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 221 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 222,79 @156 exception:223 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 223
looking at 224 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 225,226 @169 exception:241 annot:67 cmap:240 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 225 = getfield < PythonLoader, LRoot, heatmap, <PythonLoader,LRoot> > 57 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 226 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 227 @166 exception:238 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 227 = getfield < PythonLoader, LRoot, corr, <PythonLoader,LRoot> > 228 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 228 = fieldref 210.229 class com.ibm.wala.cast.python.ssa.PythonPropertyRead
looking at 229 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 15,230,231,232,231 @163 exception:237 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 230 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > 210 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 232 = binaryop(sub) 233 , 146 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$4
skipping 232
looking at 233 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 234,235 @161 exception:236 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 233
looking at 235 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > 210 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 233 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 234,235 @161 exception:236 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 236
looking at 229 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 15,230,231,232,231 @163 exception:237 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 237
looking at 226 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 227 @166 exception:238 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 238
looking at 224 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 225,226 @169 exception:241 annot:67 cmap:240 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 241
looking at 242 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 243 @171 exception:244 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 243 = getfield < PythonLoader, LRoot, gcf, <PythonLoader,LRoot> > 52 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 242 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 243 @171 exception:244 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 244
looking at 246 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 247,248,249 @174 exception:250 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 247 = getfield < PythonLoader, LRoot, set_size_inches, <PythonLoader,LRoot> > 242 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 246 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 247,248,249 @174 exception:250 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 250
looking at 251 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 252 @176 exception:253 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 252 = getfield < PythonLoader, LRoot, show, <PythonLoader,LRoot> > 52 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 251 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 252 @176 exception:253 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 253
looking at 254 = getfield < PythonLoader, LRoot, model_selection, <PythonLoader,LRoot> > 255 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 255 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @177 exception:256 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
looking at 255 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @177 exception:256 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
skipping 256
looking at 257 = getfield < PythonLoader, LRoot, train_test_split, <PythonLoader,LRoot> > 254 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 258 = getfield < PythonLoader, LRoot, KFold, <PythonLoader,LRoot> > 254 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 259 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @181 exception:260 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
looking at 259 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @181 exception:260 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
skipping 260
looking at 261 = getfield < PythonLoader, LRoot, svm, <PythonLoader,LRoot> > 259 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 262 = getfield < PythonLoader, LRoot, tree, <PythonLoader,LRoot> > 263 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 263 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @183 exception:264 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
looking at 263 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @183 exception:264 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
skipping 264
looking at 265 = getfield < PythonLoader, LRoot, DecisionTreeClassifier, <PythonLoader,LRoot> > 262 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 266 = getfield < PythonLoader, LRoot, linear_model, <PythonLoader,LRoot> > 267 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 267 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @186 exception:268 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
looking at 267 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @186 exception:268 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
skipping 268
looking at 269 = getfield < PythonLoader, LRoot, LogisticRegression, <PythonLoader,LRoot> > 266 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 270 = getfield < PythonLoader, LRoot, ensemble, <PythonLoader,LRoot> > 271 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 271 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @189 exception:272 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
looking at 271 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @189 exception:272 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
skipping 272
looking at 273 = getfield < PythonLoader, LRoot, RandomForestClassifier, <PythonLoader,LRoot> > 270 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 274 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @192 exception:275 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
looking at 274 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @192 exception:275 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$10
skipping 275
looking at 276 = getfield < PythonLoader, LRoot, metrics, <PythonLoader,LRoot> > 274 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 277 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 257,210 @198 exception:284 test_size:279 random_state:281 stratify:283 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 283 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 210 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 277 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 257,210 @198 exception:284 test_size:279 random_state:281 stratify:283 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 284
looking at 286 = fieldref 277.63 class com.ibm.wala.cast.python.ssa.PythonPropertyRead
looking at 288 = fieldref 277.214 class com.ibm.wala.cast.python.ssa.PythonPropertyRead
looking at 289 = fieldref 286.290 class com.ibm.wala.cast.python.ssa.PythonPropertyRead
looking at 290 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 15,291,231,292,231 @208 exception:297 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 291 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > 286 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 292 = binaryop(sub) 293 , 146 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$4
skipping 292
looking at 293 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 294,295 @206 exception:296 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 293
looking at 295 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > 286 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 293 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 294,295 @206 exception:296 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 296
looking at 290 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 15,291,231,292,231 @208 exception:297 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 297
looking at 299 = fieldref 288.300 class com.ibm.wala.cast.python.ssa.PythonPropertyRead
looking at 300 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 15,301,231,302,231 @216 exception:307 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 301 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > 288 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 302 = binaryop(sub) 303 , 146 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$4
skipping 302
looking at 303 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 304,305 @214 exception:306 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 303
looking at 305 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > 288 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 303 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 304,305 @214 exception:306 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 306
looking at 300 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 15,301,231,302,231 @216 exception:307 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 307
looking at 309 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 286 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 311 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 288 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 319 = binaryop(ne) 231 , 322 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$4
skipping 319
looking at 323 = fieldref 313.324 class com.ibm.wala.cast.python.ssa.PythonPropertyRead
skipping 323
looking at 325 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 326 @241 exception:329 kernel:328 random_state:281 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 326 = getfield < PythonLoader, LRoot, SVC, <PythonLoader,LRoot> > 261 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 325 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 326 @241 exception:329 kernel:328 random_state:281 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 329
looking at 331 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 332,289,309 @244 exception:333 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 332 = getfield < PythonLoader, LRoot, fit, <PythonLoader,LRoot> > 325 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 331 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 332,289,309 @244 exception:333 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 333
looking at 334 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 335,299 @246 exception:336 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 335 = getfield < PythonLoader, LRoot, predict, <PythonLoader,LRoot> > 325 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 334 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 335,299 @246 exception:336 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 336
looking at 338 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,339,340,341,342 @251 exception:345 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 342 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 343,334,311 @250 exception:344 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 343 = getfield < PythonLoader, LRoot, accuracy_score, <PythonLoader,LRoot> > 276 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 342 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 343,334,311 @250 exception:344 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 344
looking at 338 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,339,340,341,342 @251 exception:345 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 345
looking at 346 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,347,348,349,350 @255 exception:353 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 350 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 351,334,311 @254 exception:352 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 351 = getfield < PythonLoader, LRoot, f1_score, <PythonLoader,LRoot> > 276 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 350 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 351,334,311 @254 exception:352 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 352
looking at 346 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,347,348,349,350 @255 exception:353 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 353
looking at 356 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 269 @257 exception:357 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 356 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 269 @257 exception:357 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 357
looking at 358 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 359,289,309 @260 exception:360 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 359 = getfield < PythonLoader, LRoot, fit, <PythonLoader,LRoot> > 356 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 358 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 359,289,309 @260 exception:360 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 360
looking at 361 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 362,299 @262 exception:363 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 362 = getfield < PythonLoader, LRoot, predict, <PythonLoader,LRoot> > 356 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 361 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 362,299 @262 exception:363 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 363
looking at 364 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,365,366 @266 exception:369 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 366 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 367,361,311 @265 exception:368 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 367 = getfield < PythonLoader, LRoot, accuracy_score, <PythonLoader,LRoot> > 276 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 366 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 367,361,311 @265 exception:368 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 368
looking at 364 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,365,366 @266 exception:369 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 369
looking at 370 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,371,372 @269 exception:375 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 372 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 373,361,311 @268 exception:374 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 373 = getfield < PythonLoader, LRoot, f1_score, <PythonLoader,LRoot> > 276 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 372 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 373,361,311 @268 exception:374 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 374
looking at 370 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,371,372 @269 exception:375 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 375
looking at 376 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 265 @270 exception:377 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 376 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 265 @270 exception:377 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 377
looking at 378 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 379,289,309 @273 exception:380 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 379 = getfield < PythonLoader, LRoot, fit, <PythonLoader,LRoot> > 376 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 378 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 379,289,309 @273 exception:380 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 380
looking at 381 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 382,299 @275 exception:383 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 382 = getfield < PythonLoader, LRoot, predict, <PythonLoader,LRoot> > 376 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 381 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 382,299 @275 exception:383 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 383
looking at 384 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,385,386 @279 exception:389 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 386 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 387,381,311 @278 exception:388 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 387 = getfield < PythonLoader, LRoot, accuracy_score, <PythonLoader,LRoot> > 276 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 386 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 387,381,311 @278 exception:388 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 388
looking at 384 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,385,386 @279 exception:389 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 389
looking at 390 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,391,392 @282 exception:395 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 392 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 393,381,311 @281 exception:394 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 393 = getfield < PythonLoader, LRoot, f1_score, <PythonLoader,LRoot> > 276 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 392 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 393,381,311 @281 exception:394 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 394
looking at 390 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,391,392 @282 exception:395 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 395
looking at 396 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 273 @285 exception:398 n_estimators:116 random_state:281 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 396 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 273 @285 exception:398 n_estimators:116 random_state:281 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 398
looking at 399 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 400,289,309 @288 exception:401 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 400 = getfield < PythonLoader, LRoot, fit, <PythonLoader,LRoot> > 396 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 399 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 400,289,309 @288 exception:401 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 401
looking at 402 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 403,299 @290 exception:404 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 403 = getfield < PythonLoader, LRoot, predict, <PythonLoader,LRoot> > 396 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 402 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 403,299 @290 exception:404 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 404
looking at 405 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,406,407 @294 exception:410 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 407 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 408,402,311 @293 exception:409 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 408 = getfield < PythonLoader, LRoot, accuracy_score, <PythonLoader,LRoot> > 276 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 407 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 408,402,311 @293 exception:409 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 409
looking at 405 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,406,407 @294 exception:410 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 410
looking at 411 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,412,413 @297 exception:416 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 413 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 414,402,311 @296 exception:415 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 414 = getfield < PythonLoader, LRoot, f1_score, <PythonLoader,LRoot> > 276 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 413 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 414,402,311 @296 exception:415 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 415
looking at 411 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,412,413 @297 exception:416 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 416
looking at 417 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,418 @307 exception:429 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 418 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 419 @306 exception:428 ascending:74 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 419 = getfield < PythonLoader, LRoot, sort_values, <PythonLoader,LRoot> > 420 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 420 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 421,423 @303 exception:426 index:425 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 421 = getfield < PythonLoader, LRoot, Series, <PythonLoader,LRoot> > 422 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 423 = getfield < PythonLoader, LRoot, feature_importances_, <PythonLoader,LRoot> > 396 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 425 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > 289 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 420 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 421,423 @303 exception:426 index:425 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 426
looking at 418 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 419 @306 exception:428 ascending:74 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 428
looking at 417 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,418 @307 exception:429 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 429
looking at 3 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 4 @3 exception:8 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 4 = getfield < PythonLoader, LRoot, sum, <PythonLoader,LRoot> > 5 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 5 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 6 @1 exception:7 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 5 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 6 @1 exception:7 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 7
looking at 3 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 4 @3 exception:8 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 8
looking at 10 = binaryop(div) 11 , 19 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$4
looking at 11 = binaryop(mul) 12 , 13 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$4
looking at 13 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 14 @8 exception:18 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 14 = getfield < PythonLoader, LRoot, sum, <PythonLoader,LRoot> > 15 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 15 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 16 @6 exception:17 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 15 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 16 @6 exception:17 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 17
looking at 13 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 14 @8 exception:18 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 18
looking at 19 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,2 @11 exception:22 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 19
looking at 19 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,2 @11 exception:22 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 22
looking at 24 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 25,28 @20 exception:33 axis:32 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 25 = getfield < PythonLoader, LRoot, concat, <PythonLoader,LRoot> > 27 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 24 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 25,28 @20 exception:33 axis:32 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 33
looking at 35 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 36 @27 exception:42 columns:38 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 36 = getfield < PythonLoader, LRoot, rename, <PythonLoader,LRoot> > 24 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 35 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 36 @27 exception:42 columns:38 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 42
looking at 3 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 4 @3 exception:8 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 4 = getfield < PythonLoader, LRoot, sum, <PythonLoader,LRoot> > 5 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 5 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 6 @1 exception:7 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 5 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 6 @1 exception:7 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 7
looking at 3 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 4 @3 exception:8 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 8
looking at 10 = binaryop(div) 11 , 19 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$4
looking at 11 = binaryop(mul) 12 , 13 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$4
looking at 13 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 14 @8 exception:18 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 14 = getfield < PythonLoader, LRoot, sum, <PythonLoader,LRoot> > 15 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 15 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 16 @6 exception:17 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 15 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 16 @6 exception:17 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 17
looking at 13 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 14 @8 exception:18 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 18
looking at 19 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,2 @11 exception:22 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 19
looking at 19 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,2 @11 exception:22 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 22
looking at 24 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 25,28 @20 exception:33 axis:32 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 25 = getfield < PythonLoader, LRoot, concat, <PythonLoader,LRoot> > 27 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 24 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 25,28 @20 exception:33 axis:32 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 33
looking at 35 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 36 @27 exception:42 columns:38 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
looking at 36 = getfield < PythonLoader, LRoot, rename, <PythonLoader,LRoot> > 24 class com.ibm.wala.classLoader.JavaLanguage$JavaInstructionFactory$8
looking at 35 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 36 @27 exception:42 columns:38 class com.ibm.wala.cast.python.ssa.PythonInvokeInstruction
skipping 42
looking at uvn 43 43 = invokestatic < PythonLoader, LIPython, import()LIPython; > @21 exception:44 false
looking at uvn 41 41 = getfield < PythonLoader, LRoot, display, <PythonLoader,LRoot> > 43 false
looking at uvn 45 45 = getfield < PythonLoader, LRoot, HTML, <PythonLoader,LRoot> > 41 false
looking at uvn 47 null true
looking at uvn 54 54 = invokestatic < PythonLoader, Lmatplotlib, import()Lmatplotlib; > @27 exception:55 false
looking at uvn 60 60 = getfield < PythonLoader, LRoot, set, <PythonLoader,LRoot> > 57 false
looking at uvn 62 null true
looking at uvn 65 null true
looking at uvn 67 null true
looking at uvn 57 57 = invokestatic < PythonLoader, Lseaborn, import()Lseaborn; > @29 exception:58 false
looking at uvn 70 70 = getfield < PythonLoader, LRoot, read_csv, <PythonLoader,LRoot> > 71 false
looking at uvn 72 null true
looking at uvn 74 null true
looking at uvn 71 71 = lexical:pd@Lscript indian-liver-disease-modeling.py false
looking at uvn 78 78 = getfield < PythonLoader, LRoot, head, <PythonLoader,LRoot> > 69 false
looking at uvn 79 null true
looking at uvn 69 69 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 70,72 @38 exception:75 low_memory:74 false
looking at uvn 88 88 = getfield < PythonLoader, LRoot, loc, <PythonLoader,LRoot> > 69 false
looking at uvn 89 89 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 90 @49 exception:92 false
looking at uvn 69 69 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 70,72 @38 exception:75 low_memory:74 false
looking at uvn 90 90 = getfield < PythonLoader, LRoot, isnull, <PythonLoader,LRoot> > 91 false
looking at uvn 91 91 = getfield < PythonLoader, LRoot, Albumin_and_Globulin_Ratio, <PythonLoader,LRoot> > 69 false
looking at uvn 69 69 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 70,72 @38 exception:75 low_memory:74 false
looking at uvn 94 94 = getfield < PythonLoader, LRoot, describe, <PythonLoader,LRoot> > 69 false
looking at uvn 69 69 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 70,72 @38 exception:75 low_memory:74 false
looking at uvn 97 97 = getfield < PythonLoader, LRoot, reset_index, <PythonLoader,LRoot> > 98 false
looking at uvn 107 null true
looking at uvn 98 98 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 99 @58 exception:105 false
looking at uvn 99 99 = getfield < PythonLoader, LRoot, size, <PythonLoader,LRoot> > 100 false
looking at uvn 100 100 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 101,102 @56 exception:104 false
looking at uvn 101 101 = getfield < PythonLoader, LRoot, groupby, <PythonLoader,LRoot> > 69 false
looking at uvn 102 102 = new <PythonLoader,Llist>@54 false
looking at uvn 69 69 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 70,72 @38 exception:75 low_memory:74 false
looking at uvn 111 111 = binaryop(div) 112 , 113 false
looking at uvn 116 null true
looking at uvn 112 112 = getfield < PythonLoader, LRoot, Counts, <PythonLoader,LRoot> > 96 false
looking at uvn 113 113 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 12,114 @65 exception:115 false
looking at uvn 96 96 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 97 @61 exception:108 name:107 false
looking at uvn 96 96 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 97 @61 exception:108 name:107 false
looking at uvn 118 118 = getfield < PythonLoader, LRoot, reset_index, <PythonLoader,LRoot> > 119 false
looking at uvn 107 null true
looking at uvn 119 119 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 120 @74 exception:126 false
looking at uvn 120 120 = getfield < PythonLoader, LRoot, size, <PythonLoader,LRoot> > 121 false
looking at uvn 121 121 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 122,123 @72 exception:125 false
looking at uvn 122 122 = getfield < PythonLoader, LRoot, groupby, <PythonLoader,LRoot> > 69 false
looking at uvn 123 123 = new <PythonLoader,Llist>@70 false
looking at uvn 69 69 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 70,72 @38 exception:75 low_memory:74 false
looking at uvn 130 130 = binaryop(div) 131 , 132 false
looking at uvn 116 null true
looking at uvn 131 131 = getfield < PythonLoader, LRoot, Counts, <PythonLoader,LRoot> > 117 false
looking at uvn 132 132 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 12,133 @81 exception:134 false
looking at uvn 117 117 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 118 @77 exception:127 name:107 false
looking at uvn 117 117 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 118 @77 exception:127 name:107 false
looking at uvn 136 136 = binaryop(add) 137 , 140 false
looking at uvn 149 null true
looking at uvn 137 137 = binaryop(add) 138 , 139 false
looking at uvn 140 140 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 141,11 @91 exception:148 false
looking at uvn 138 138 = getfield < PythonLoader, LRoot, Gender, <PythonLoader,LRoot> > 117 false
looking at uvn 139 null true
looking at uvn 117 117 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 118 @77 exception:127 name:107 false
looking at uvn 117 117 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 118 @77 exception:127 name:107 false
looking at uvn 151 151 = getfield < PythonLoader, LRoot, corr, <PythonLoader,LRoot> > 152 false
looking at uvn 152 152 = fieldref 69.153 false
looking at uvn 69 69 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 70,72 @38 exception:75 low_memory:74 false
looking at uvn 153 153 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > 69 false
looking at uvn 69 69 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 70,72 @38 exception:75 low_memory:74 false
looking at uvn 157 157 = getfield < PythonLoader, LRoot, heatmap, <PythonLoader,LRoot> > 57 false
looking at uvn 150 150 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 151 @98 exception:154 false
looking at uvn 67 null true
looking at uvn 57 57 = invokestatic < PythonLoader, Lseaborn, import()Lseaborn; > @29 exception:58 false
looking at uvn 161 161 = getfield < PythonLoader, LRoot, where, <PythonLoader,LRoot> > 69 false
looking at uvn 162 162 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 163,69 @106 exception:165 false
looking at uvn 166 166 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 167 @108 exception:168 false
looking at uvn 170 null true
looking at uvn 69 69 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 70,72 @38 exception:75 low_memory:74 false
looking at uvn 163 163 = getfield < PythonLoader, LRoot, notnull, <PythonLoader,LRoot> > 164 false
looking at uvn 69 69 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 70,72 @38 exception:75 low_memory:74 false
looking at uvn 164 164 = lexical:pd@Lscript indian-liver-disease-modeling.py false
looking at uvn 167 167 = getfield < PythonLoader, LRoot, median, <PythonLoader,LRoot> > 69 false
looking at uvn 69 69 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 70,72 @38 exception:75 low_memory:74 false
looking at uvn 173 173 = getfield < PythonLoader, LRoot, sum, <PythonLoader,LRoot> > 174 false
looking at uvn 174 174 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 175 @113 exception:176 false
looking at uvn 175 175 = getfield < PythonLoader, LRoot, isnull, <PythonLoader,LRoot> > 160 false
looking at uvn 160 160 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 161,162,166 @110 exception:171 axis:170 false
looking at uvn 179 179 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @116 exception:180 false
looking at uvn 183 183 = getfield < PythonLoader, LRoot, tolist, <PythonLoader,LRoot> > 184 false
looking at uvn 184 184 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > 185 false
looking at uvn 185 185 = getfield < PythonLoader, LRoot, iloc, <PythonLoader,LRoot> > 160 false
looking at uvn 160 160 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 161,162,166 @110 exception:171 axis:170 false
looking at uvn 189 189 = getfield < PythonLoader, LRoot, MinMaxScaler, <PythonLoader,LRoot> > 181 false
looking at uvn 181 181 = getfield < PythonLoader, LRoot, preprocessing, <PythonLoader,LRoot> > 179 false
looking at uvn 193 193 = getfield < PythonLoader, LRoot, fit_transform, <PythonLoader,LRoot> > 188 false
looking at uvn 194 194 = getfield < PythonLoader, LRoot, iloc, <PythonLoader,LRoot> > 160 false
looking at uvn 188 188 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 189 @124 exception:190 false
looking at uvn 160 160 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 161,162,166 @110 exception:171 axis:170 false
looking at uvn 198 198 = getfield < PythonLoader, LRoot, DataFrame, <PythonLoader,LRoot> > 199 false
looking at uvn 192 192 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 193,194 @128 exception:195 false
looking at uvn 199 199 = lexical:pd@Lscript indian-liver-disease-modeling.py false
looking at uvn 160 160 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 161,162,166 @110 exception:171 axis:170 false
looking at uvn 205 205 = getfield < PythonLoader, LRoot, get_dummies, <PythonLoader,LRoot> > 206 false
looking at uvn 202 202 = getfield < PythonLoader, LRoot, iloc, <PythonLoader,LRoot> > 160 false
looking at uvn 124 null true
looking at uvn 67 null true
looking at uvn 206 206 = lexical:pd@Lscript indian-liver-disease-modeling.py false
looking at uvn 211 211 = getfield < PythonLoader, LRoot, concat, <PythonLoader,LRoot> > 212 false
looking at uvn 213 213 = new <PythonLoader,Llist>@145 false
looking at uvn 146 null true
looking at uvn 212 212 = lexical:pd@Lscript indian-liver-disease-modeling.py false
looking at uvn 160 160 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 161,162,166 @110 exception:171 axis:170 false
looking at uvn 160 160 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 161,162,166 @110 exception:171 axis:170 false
looking at uvn 222 222 = getfield < PythonLoader, LRoot, head, <PythonLoader,LRoot> > 210 false
looking at uvn 79 null true
looking at uvn 210 210 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 211,213 @153 exception:219 axis:146 false
looking at uvn 225 225 = getfield < PythonLoader, LRoot, heatmap, <PythonLoader,LRoot> > 57 false
looking at uvn 226 226 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 227 @166 exception:238 false
looking at uvn 67 null true
looking at uvn 240 null true
looking at uvn 57 57 = invokestatic < PythonLoader, Lseaborn, import()Lseaborn; > @29 exception:58 false
looking at uvn 227 227 = getfield < PythonLoader, LRoot, corr, <PythonLoader,LRoot> > 228 false
looking at uvn 228 228 = fieldref 210.229 false
looking at uvn 210 210 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 211,213 @153 exception:219 axis:146 false
looking at uvn 229 229 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 15,230,231,232,231 @163 exception:237 false
looking at uvn 15 15 = new <PythonLoader,Lwala/builtin/slice>@12 false
looking at uvn 230 230 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > 210 false
looking at uvn 231 null true
looking at uvn 232 232 = binaryop(sub) 233 , 146 false
looking at uvn 231 null true
looking at uvn 210 210 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 211,213 @153 exception:219 axis:146 false
looking at uvn 210 210 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 211,213 @153 exception:219 axis:146 false
looking at uvn 243 243 = getfield < PythonLoader, LRoot, gcf, <PythonLoader,LRoot> > 52 false
looking at uvn 52 52 = getfield < PythonLoader, LRoot, pyplot, <PythonLoader,LRoot> > 54 false
looking at uvn 247 247 = getfield < PythonLoader, LRoot, set_size_inches, <PythonLoader,LRoot> > 242 false
looking at uvn 248 null true
looking at uvn 249 null true
looking at uvn 242 242 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 243 @171 exception:244 false
looking at uvn 252 252 = getfield < PythonLoader, LRoot, show, <PythonLoader,LRoot> > 52 false
looking at uvn 52 52 = getfield < PythonLoader, LRoot, pyplot, <PythonLoader,LRoot> > 54 false
looking at uvn 255 255 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @177 exception:256 false
looking at uvn 254 254 = getfield < PythonLoader, LRoot, model_selection, <PythonLoader,LRoot> > 255 false
looking at uvn 254 254 = getfield < PythonLoader, LRoot, model_selection, <PythonLoader,LRoot> > 255 false
looking at uvn 259 259 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @181 exception:260 false
looking at uvn 263 263 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @183 exception:264 false
looking at uvn 262 262 = getfield < PythonLoader, LRoot, tree, <PythonLoader,LRoot> > 263 false
looking at uvn 267 267 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @186 exception:268 false
looking at uvn 266 266 = getfield < PythonLoader, LRoot, linear_model, <PythonLoader,LRoot> > 267 false
looking at uvn 271 271 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @189 exception:272 false
looking at uvn 270 270 = getfield < PythonLoader, LRoot, ensemble, <PythonLoader,LRoot> > 271 false
looking at uvn 274 274 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @192 exception:275 false
looking at uvn 257 257 = getfield < PythonLoader, LRoot, train_test_split, <PythonLoader,LRoot> > 254 false
looking at uvn 210 210 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 211,213 @153 exception:219 axis:146 false
looking at uvn 279 null true
looking at uvn 281 null true
looking at uvn 283 283 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 210 false
looking at uvn 210 210 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 211,213 @153 exception:219 axis:146 false
looking at uvn 277 277 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 257,210 @198 exception:284 test_size:279 random_state:281 stratify:283 false
looking at uvn 63 null true
looking at uvn 277 277 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 257,210 @198 exception:284 test_size:279 random_state:281 stratify:283 false
looking at uvn 214 null true
looking at uvn 286 286 = fieldref 277.63 false
looking at uvn 290 290 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 15,291,231,292,231 @208 exception:297 false
looking at uvn 15 15 = new <PythonLoader,Lwala/builtin/slice>@12 false
looking at uvn 291 291 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > 286 false
looking at uvn 231 null true
looking at uvn 292 292 = binaryop(sub) 293 , 146 false
looking at uvn 231 null true
looking at uvn 286 286 = fieldref 277.63 false
looking at uvn 286 286 = fieldref 277.63 false
looking at uvn 288 288 = fieldref 277.214 false
looking at uvn 300 300 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 15,301,231,302,231 @216 exception:307 false
looking at uvn 15 15 = new <PythonLoader,Lwala/builtin/slice>@12 false
looking at uvn 301 301 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > 288 false
looking at uvn 231 null true
looking at uvn 302 302 = binaryop(sub) 303 , 146 false
looking at uvn 231 null true
looking at uvn 288 288 = fieldref 277.214 false
looking at uvn 288 288 = fieldref 277.214 false
looking at uvn 286 286 = fieldref 277.63 false
looking at uvn 288 288 = fieldref 277.214 false
looking at uvn 326 326 = getfield < PythonLoader, LRoot, SVC, <PythonLoader,LRoot> > 261 false
looking at uvn 328 328 = global:global i false
looking at uvn 281 null true
looking at uvn 261 261 = getfield < PythonLoader, LRoot, svm, <PythonLoader,LRoot> > 259 false
looking at uvn 332 332 = getfield < PythonLoader, LRoot, fit, <PythonLoader,LRoot> > 325 false
looking at uvn 289 289 = fieldref 286.290 false
looking at uvn 309 309 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 286 false
looking at uvn 325 325 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 326 @241 exception:329 kernel:328 random_state:281 false
looking at uvn 335 335 = getfield < PythonLoader, LRoot, predict, <PythonLoader,LRoot> > 325 false
looking at uvn 299 299 = fieldref 288.300 false
looking at uvn 325 325 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 326 @241 exception:329 kernel:328 random_state:281 false
looking at uvn 343 343 = getfield < PythonLoader, LRoot, accuracy_score, <PythonLoader,LRoot> > 276 false
looking at uvn 334 334 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 335,299 @246 exception:336 false
looking at uvn 311 311 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 288 false
looking at uvn 276 276 = getfield < PythonLoader, LRoot, metrics, <PythonLoader,LRoot> > 274 false
looking at uvn 351 351 = getfield < PythonLoader, LRoot, f1_score, <PythonLoader,LRoot> > 276 false
looking at uvn 334 334 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 335,299 @246 exception:336 false
looking at uvn 311 311 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 288 false
looking at uvn 276 276 = getfield < PythonLoader, LRoot, metrics, <PythonLoader,LRoot> > 274 false
looking at uvn 269 269 = getfield < PythonLoader, LRoot, LogisticRegression, <PythonLoader,LRoot> > 266 false
looking at uvn 359 359 = getfield < PythonLoader, LRoot, fit, <PythonLoader,LRoot> > 356 false
looking at uvn 289 289 = fieldref 286.290 false
looking at uvn 309 309 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 286 false
looking at uvn 356 356 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 269 @257 exception:357 false
looking at uvn 362 362 = getfield < PythonLoader, LRoot, predict, <PythonLoader,LRoot> > 356 false
looking at uvn 299 299 = fieldref 288.300 false
looking at uvn 356 356 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 269 @257 exception:357 false
looking at uvn 367 367 = getfield < PythonLoader, LRoot, accuracy_score, <PythonLoader,LRoot> > 276 false
looking at uvn 361 361 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 362,299 @262 exception:363 false
looking at uvn 311 311 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 288 false
looking at uvn 276 276 = getfield < PythonLoader, LRoot, metrics, <PythonLoader,LRoot> > 274 false
looking at uvn 373 373 = getfield < PythonLoader, LRoot, f1_score, <PythonLoader,LRoot> > 276 false
looking at uvn 361 361 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 362,299 @262 exception:363 false
looking at uvn 311 311 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 288 false
looking at uvn 276 276 = getfield < PythonLoader, LRoot, metrics, <PythonLoader,LRoot> > 274 false
looking at uvn 265 265 = getfield < PythonLoader, LRoot, DecisionTreeClassifier, <PythonLoader,LRoot> > 262 false
looking at uvn 379 379 = getfield < PythonLoader, LRoot, fit, <PythonLoader,LRoot> > 376 false
looking at uvn 289 289 = fieldref 286.290 false
looking at uvn 309 309 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 286 false
looking at uvn 376 376 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 265 @270 exception:377 false
looking at uvn 382 382 = getfield < PythonLoader, LRoot, predict, <PythonLoader,LRoot> > 376 false
looking at uvn 299 299 = fieldref 288.300 false
looking at uvn 376 376 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 265 @270 exception:377 false
looking at uvn 387 387 = getfield < PythonLoader, LRoot, accuracy_score, <PythonLoader,LRoot> > 276 false
looking at uvn 381 381 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 382,299 @275 exception:383 false
looking at uvn 311 311 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 288 false
looking at uvn 276 276 = getfield < PythonLoader, LRoot, metrics, <PythonLoader,LRoot> > 274 false
looking at uvn 393 393 = getfield < PythonLoader, LRoot, f1_score, <PythonLoader,LRoot> > 276 false
looking at uvn 381 381 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 382,299 @275 exception:383 false
looking at uvn 311 311 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 288 false
looking at uvn 276 276 = getfield < PythonLoader, LRoot, metrics, <PythonLoader,LRoot> > 274 false
looking at uvn 273 273 = getfield < PythonLoader, LRoot, RandomForestClassifier, <PythonLoader,LRoot> > 270 false
looking at uvn 116 null true
looking at uvn 281 null true
looking at uvn 400 400 = getfield < PythonLoader, LRoot, fit, <PythonLoader,LRoot> > 396 false
looking at uvn 289 289 = fieldref 286.290 false
looking at uvn 309 309 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 286 false
looking at uvn 396 396 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 273 @285 exception:398 n_estimators:116 random_state:281 false
looking at uvn 403 403 = getfield < PythonLoader, LRoot, predict, <PythonLoader,LRoot> > 396 false
looking at uvn 299 299 = fieldref 288.300 false
looking at uvn 396 396 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 273 @285 exception:398 n_estimators:116 random_state:281 false
looking at uvn 408 408 = getfield < PythonLoader, LRoot, accuracy_score, <PythonLoader,LRoot> > 276 false
looking at uvn 402 402 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 403,299 @290 exception:404 false
looking at uvn 311 311 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 288 false
looking at uvn 276 276 = getfield < PythonLoader, LRoot, metrics, <PythonLoader,LRoot> > 274 false
looking at uvn 414 414 = getfield < PythonLoader, LRoot, f1_score, <PythonLoader,LRoot> > 276 false
looking at uvn 402 402 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 403,299 @290 exception:404 false
looking at uvn 311 311 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > 288 false
looking at uvn 276 276 = getfield < PythonLoader, LRoot, metrics, <PythonLoader,LRoot> > 274 false
looking at uvn 419 419 = getfield < PythonLoader, LRoot, sort_values, <PythonLoader,LRoot> > 420 false
looking at uvn 74 null true
looking at uvn 420 420 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 421,423 @303 exception:426 index:425 false
looking at uvn 421 421 = getfield < PythonLoader, LRoot, Series, <PythonLoader,LRoot> > 422 false
looking at uvn 423 423 = getfield < PythonLoader, LRoot, feature_importances_, <PythonLoader,LRoot> > 396 false
looking at uvn 425 425 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > 289 false
looking at uvn 422 422 = lexical:pd@Lscript indian-liver-disease-modeling.py false
looking at uvn 396 396 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 273 @285 exception:398 n_estimators:116 random_state:281 false
looking at uvn 289 289 = fieldref 286.290 false
looking at uvn 4 4 = getfield < PythonLoader, LRoot, sum, <PythonLoader,LRoot> > 5 false
looking at uvn 5 5 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 6 @1 exception:7 false
looking at uvn 6 6 = getfield < PythonLoader, LRoot, isnull, <PythonLoader,LRoot> > 2 false
looking at uvn 11 11 = binaryop(mul) 12 , 13 false
looking at uvn 19 19 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 21,2 @11 exception:22 false
looking at uvn 12 null true
looking at uvn 13 13 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 14 @8 exception:18 false
looking at uvn 14 14 = getfield < PythonLoader, LRoot, sum, <PythonLoader,LRoot> > 15 false
looking at uvn 15 15 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 16 @6 exception:17 false
looking at uvn 16 16 = getfield < PythonLoader, LRoot, isnull, <PythonLoader,LRoot> > 2 false
looking at uvn 25 25 = getfield < PythonLoader, LRoot, concat, <PythonLoader,LRoot> > 27 false
looking at uvn 28 28 = new <PythonLoader,Llist>@16 false
looking at uvn 32 null true
looking at uvn 27 27 = lexical:pd@Lscript indian-liver-disease-modeling.py false
looking at uvn 36 36 = getfield < PythonLoader, LRoot, rename, <PythonLoader,LRoot> > 24 false
looking at uvn 38 38 = new <PythonLoader,Ldict>@23 false
looking at uvn 24 24 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 25,28 @20 exception:33 axis:32 false
looking at uvn 25 25 = getfield < PythonLoader, LRoot, concat, <PythonLoader,LRoot> > 27 false
looking at uvn 28 28 = new <PythonLoader,Llist>@16 false
looking at uvn 32 null true
looking at uvn 27 27 = lexical:pd@Lscript indian-liver-disease-modeling.py false
looking at uvn 36 36 = getfield < PythonLoader, LRoot, rename, <PythonLoader,LRoot> > 24 false
looking at uvn 38 38 = new <PythonLoader,Ldict>@23 false
looking at uvn 24 24 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > 25,28 @20 exception:33 axis:32 false
callees of node fakeRootMethod : [fakeWorldClinit, Lscript indian-liver-disease-modeling.py, missing_values_table]

IR of node 0, context Everywhere
synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >
CFG:
BB0[0..0]
    -> BB1
    -> BB6
BB1[1..1]
    -> BB2
    -> BB6
BB2[2..2]
    -> BB3
    -> BB6
BB3[3..4]
    -> BB4
    -> BB6
BB4[5..5]
    -> BB5
    -> BB6
BB5[6..6]
    -> BB6
BB6[-1..-2]
Instructions:
BB0
0   invokestatic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeWorldClinit()V > @0 exception:v2
BB1
1   v3 = new <PythonLoader,Lscript indian-liver-disease-modeling.py>@1
BB2
2   v4 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v3 @2 exception:v5
BB3
3   v6 = global:global script indian-liver-disease-modeling.py/missing_values_table
4   v7 = new <PythonLoader,Lturtle>@4        
BB4
5   putfield v7.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v7
BB5
6   v8 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v6,v7 @6 exception:v9
BB6

callees of node fakeWorldClinit : []

IR of node 1, context Everywhere
synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeWorldClinit()V >
CFG:
BB0[-1..-2]
Instructions:
BB0

callees of node Lscript indian-liver-disease-modeling.py : [turtle, turtle, turtle, turtle, turtle, turtle, turtle, import, import, import, import, import, import, import, import, import, import, import, import, missing_values_table, sum, sum, import, len, slice, import, import, import, import, import, import, len, slice, len, slice, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle, turtle]

IR of node 2, context CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]
<Code body of function Lscript indian-liver-disease-modeling.py>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..24]
    -> BB2
    -> BB78
BB2[25..34]
    -> BB3
    -> BB78
BB3[35..38]
    -> BB4
    -> BB78
BB4[39..41]
    -> BB5
    -> BB78
BB5[42..45]
    -> BB6
    -> BB78
BB6[46..49]
    -> BB7
    -> BB78
BB7[50..52]
    -> BB8
    -> BB78
BB8[53..56]
    -> BB9
    -> BB78
BB9[57..58]
    -> BB10
    -> BB78
BB10[59..61]
    -> BB11
    -> BB78
BB11[62..65]
    -> BB12
    -> BB78
BB12[66..72]
    -> BB13
    -> BB78
BB13[73..74]
    -> BB14
    -> BB78
BB14[75..77]
    -> BB15
    -> BB78
BB15[78..81]
    -> BB16
    -> BB78
BB16[82..89]
    -> BB17
    -> BB78
BB17[90..91]
    -> BB18
    -> BB78
BB18[92..98]
    -> BB19
    -> BB78
BB19[99..102]
    -> BB20
    -> BB78
BB20[103..106]
    -> BB21
    -> BB78
BB21[107..108]
    -> BB22
    -> BB78
BB22[109..110]
    -> BB23
    -> BB78
BB23[111..113]
    -> BB24
    -> BB78
BB24[114..115]
    -> BB25
    -> BB78
BB25[116..121]
    -> BB26
    -> BB78
BB26[122..124]
    -> BB27
    -> BB78
BB27[125..128]
    -> BB28
    -> BB78
BB28[129..132]
    -> BB29
    -> BB78
BB29[133..141]
    -> BB30
    -> BB78
BB30[142..153]
    -> BB31
    -> BB78
BB31[154..156]
    -> BB32
    -> BB78
BB32[157..161]
    -> BB33
    -> BB78
BB33[162..163]
    -> BB34
    -> BB78
BB34[164..166]
    -> BB35
    -> BB78
BB35[167..169]
    -> BB36
    -> BB78
BB36[170..171]
    -> BB37
    -> BB78
BB37[172..174]
    -> BB38
    -> BB78
BB38[175..176]
    -> BB39
    -> BB78
BB39[177..198]
    -> BB40
    -> BB78
BB40[199..206]
    -> BB41
    -> BB78
BB41[207..208]
    -> BB42
    -> BB78
BB42[209..214]
    -> BB43
    -> BB78
BB43[215..216]
    -> BB44
    -> BB78
BB44[217..228]
    -> BB45
BB45[229..233]
    -> BB54
    -> BB46
BB46[234..241]
    -> BB47
    -> BB78
BB47[242..244]
    -> BB48
    -> BB78
BB48[245..246]
    -> BB49
    -> BB78
BB49[247..250]
    -> BB50
    -> BB78
BB50[251..251]
    -> BB51
    -> BB78
BB51[252..254]
    -> BB52
    -> BB78
BB52[255..255]
    -> BB53
    -> BB78
BB53[256..256]
    -> BB45
BB54[257..257]
    -> BB55
    -> BB78
BB55[258..260]
    -> BB56
    -> BB78
BB56[261..262]
    -> BB57
    -> BB78
BB57[263..265]
    -> BB58
    -> BB78
BB58[266..266]
    -> BB59
    -> BB78
BB59[267..268]
    -> BB60
    -> BB78
BB60[269..269]
    -> BB61
    -> BB78
BB61[270..270]
    -> BB62
    -> BB78
BB62[271..273]
    -> BB63
    -> BB78
BB63[274..275]
    -> BB64
    -> BB78
BB64[276..278]
    -> BB65
    -> BB78
BB65[279..279]
    -> BB66
    -> BB78
BB66[280..281]
    -> BB67
    -> BB78
BB67[282..282]
    -> BB68
    -> BB78
BB68[283..285]
    -> BB69
    -> BB78
BB69[286..288]
    -> BB70
    -> BB78
BB70[289..290]
    -> BB71
    -> BB78
BB71[291..293]
    -> BB72
    -> BB78
BB72[294..294]
    -> BB73
    -> BB78
BB73[295..296]
    -> BB74
    -> BB78
BB74[297..297]
    -> BB75
    -> BB78
BB75[298..303]
    -> BB76
    -> BB78
BB76[304..306]
    -> BB77
    -> BB78
BB77[307..307]
    -> BB78
BB78[-1..-2]
Instructions:
BB0
BB1
0   global:global script indian-liver-disease-modeling.py = v1indian-liver-disease-modeling.py [22:0] -> [248:96]
1   v5 = new <PythonLoader,Lwala/builtin/enumerate>@1<no information> [5=[enumerate]]
2   v6 = new <PythonLoader,Lwala/builtin/int>@2<no information> [6=[int]]
3   v7 = new <PythonLoader,Lwala/builtin/len>@3<no information>
4   lexical:len@Lscript indian-liver-disease-modeling.py = v7<no information>
5   v8 = new <PythonLoader,Lwala/builtin/list>@5<no information> [8=[list]]
6   v9 = new <PythonLoader,Lwala/builtin/range>@6<no information> [9=[range]]
7   v10 = new <PythonLoader,Lwala/builtin/sorted>@7<no information> [10=[sorted]]
8   v11 = new <PythonLoader,Lwala/builtin/str>@8<no information> [11=[str]]
9   v12 = new <PythonLoader,Lwala/builtin/sum>@9<no information> [12=[sum]]
10   v13 = new <PythonLoader,Lwala/builtin/type>@10<no information> [13=[type]]
11   v14 = new <PythonLoader,Lwala/builtin/zip>@11<no information> [14=[zip]]
12   v15 = new <PythonLoader,Lwala/builtin/slice>@12<no information> [15=[slice]]
13   v18 = invokestatic < PythonLoader, L__name__, import()L__name__; > @13 exception:v19<no information> [18=[__name__]]
14   v21 = invokestatic < PythonLoader, Lprint, import()Lprint; > @14 exception:v22<no information> [21=[print]]
15   v24 = invokestatic < PythonLoader, Lsuper, import()Lsuper; > @15 exception:v25<no information> [24=[super]]
16   v27 = invokestatic < PythonLoader, Lopen, import()Lopen; > @16 exception:v28<no information> [27=[open]]
17   v30 = invokestatic < PythonLoader, Lhasattr, import()Lhasattr; > @17 exception:v31<no information> [30=[hasattr]]
18   v33 = invokestatic < PythonLoader, LBaseException, import()LBaseException; > @18 exception:v34<no information> [33=[BaseException]]
19   v36 = invokestatic < PythonLoader, Labs, import()Labs; > @19 exception:v37<no information> [36=[abs]]
20   v39 = invokestatic < PythonLoader, Ldel, import()Ldel; > @20 exception:v40<no information> [39=[del]]
21   v43 = invokestatic < PythonLoader, LIPython, import()LIPython; > @21 exception:v44indian-liver-disease-modeling.py [22:5] -> [22:12]
22   v41 = getfield < PythonLoader, LRoot, display, <PythonLoader,LRoot> > v43indian-liver-disease-modeling.py [22:13] -> [22:20] [41=[importTree1]]
23   v45 = getfield < PythonLoader, LRoot, HTML, <PythonLoader,LRoot> > v41indian-liver-disease-modeling.py [1:0] -> [1:0] [45=[HTML]41=[importTree1]]
24   v46 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v45,v47:#<script>
code_show=true;
function code_toggle() {
 if (code_show){
 $('div.input').hide();
 } else {
 $('div.input').show();
 }
 code_show = !code_show
}
$( document ).ready(code_toggle);
</script>
<form action="javascript:code_toggle()"><input type="submit" value="Toggle on/off the raw code."></form> @24 exception:v48indian-liver-disease-modeling.py [24:0] -> [36:108] [45=[HTML]]
BB2
25   v50 = invokestatic < PythonLoader, Lpandas, import()Lpandas; > @25 exception:v51indian-liver-disease-modeling.py [38:7] -> [38:13]
26   lexical:pd@Lscript indian-liver-disease-modeling.py = v50indian-liver-disease-modeling.py [1:0] -> [1:0]
27   v54 = invokestatic < PythonLoader, Lmatplotlib, import()Lmatplotlib; > @27 exception:v55indian-liver-disease-modeling.py [39:7] -> [39:17]
28   v52 = getfield < PythonLoader, LRoot, pyplot, <PythonLoader,LRoot> > v54indian-liver-disease-modeling.py [39:18] -> [39:24] [52=[plt]]
29   v57 = invokestatic < PythonLoader, Lseaborn, import()Lseaborn; > @29 exception:v58indian-liver-disease-modeling.py [41:7] -> [41:14] [57=[sns]]
30   v60 = getfield < PythonLoader, LRoot, set, <PythonLoader,LRoot> > v57indian-liver-disease-modeling.py [43:0] -> [43:7] [57=[sns]]
31   fieldref v61:#style.v63:#0 = v62:#white = v62:#whiteindian-liver-disease-modeling.py [43:8] -> [43:13]
32   fieldref v64:#palette.v63:#0 = v65:#muted = v65:#mutedindian-liver-disease-modeling.py [43:23] -> [43:30]
33   fieldref v66:#color_codes.v63:#0 = v67:#true = v67:#trueindian-liver-disease-modeling.py [43:40] -> [43:51]
34   v59 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v60 @34 exception:v68 style:62 palette:65 color_codes:67indian-liver-disease-modeling.py [43:0] -> [43:57]
BB3
35   v71 = lexical:pd@Lscript indian-liver-disease-modeling.pyindian-liver-disease-modeling.py [52:7] -> [52:9]
36   v70 = getfield < PythonLoader, LRoot, read_csv, <PythonLoader,LRoot> > v71indian-liver-disease-modeling.py [52:7] -> [52:18]
37   fieldref v73:#low_memory.v63:#0 = v74:#false = v74:#falseindian-liver-disease-modeling.py [52:56] -> [52:66]
38   v69 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v70,v72:#../input/indian_liver_patient.csv @38 exception:v75 low_memory:74indian-liver-disease-modeling.py [52:7] -> [52:73] [69=[data]]
BB4
40   v78 = getfield < PythonLoader, LRoot, head, <PythonLoader,LRoot> > v69indian-liver-disease-modeling.py [53:0] -> [53:9] [69=[data]]
41   v77 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v78,v79:#2 @41 exception:v80indian-liver-disease-modeling.py [53:0] -> [53:12]
BB5
42   v83 = new <PythonLoader,Lscript indian-liver-disease-modeling.py/missing_values_table>@42indian-liver-disease-modeling.py [22:0] -> [248:96] [83=[missing_values_table]]
43   global:global script indian-liver-disease-modeling.py/missing_values_table = v83indian-liver-disease-modeling.py [22:0] -> [248:96] [83=[missing_values_table]]
44   putfield v1.< PythonLoader, LRoot, missing_values_table, <PythonLoader,LRoot> > = v83indian-liver-disease-modeling.py [22:0] -> [248:96] [83=[missing_values_table]]
45   v85 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v83,v69 @45 exception:v86indian-liver-disease-modeling.py [69:0] -> [69:26] [83=[missing_values_table]69=[data]]
BB6
46   v88 = getfield < PythonLoader, LRoot, loc, <PythonLoader,LRoot> > v69indian-liver-disease-modeling.py [77:0] -> [77:8] [69=[data]]
47   v91 = getfield < PythonLoader, LRoot, Albumin_and_Globulin_Ratio, <PythonLoader,LRoot> > v69indian-liver-disease-modeling.py [77:9] -> [77:43] [69=[data]]
48   v90 = getfield < PythonLoader, LRoot, isnull, <PythonLoader,LRoot> > v91indian-liver-disease-modeling.py [77:9] -> [77:50]
49   v89 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v90 @49 exception:v92indian-liver-disease-modeling.py [77:9] -> [77:52]
BB7
50   v87 = fieldref v88.v89                  indian-liver-disease-modeling.py [77:0] -> [77:53]
51   v94 = getfield < PythonLoader, LRoot, describe, <PythonLoader,LRoot> > v69indian-liver-disease-modeling.py [84:0] -> [84:13] [69=[data]]
52   v93 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v94 @52 exception:v95indian-liver-disease-modeling.py [84:0] -> [84:15]
BB8
53   v101 = getfield < PythonLoader, LRoot, groupby, <PythonLoader,LRoot> > v69indian-liver-disease-modeling.py [91:9] -> [91:21] [69=[data]]
54   v102 = new <PythonLoader,Llist>@54      indian-liver-disease-modeling.py [91:22] -> [91:33]
55   fieldref v102.v63:#0 = v103:#Dataset = v103:#Datasetindian-liver-disease-modeling.py [91:22] -> [91:33]
56   v100 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v101,v102 @56 exception:v104indian-liver-disease-modeling.py [91:9] -> [91:13]
BB9
57   v99 = getfield < PythonLoader, LRoot, size, <PythonLoader,LRoot> > v100indian-liver-disease-modeling.py [91:9] -> [91:39]
58   v98 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v99 @58 exception:v105indian-liver-disease-modeling.py [91:9] -> [91:13]
BB10
59   v97 = getfield < PythonLoader, LRoot, reset_index, <PythonLoader,LRoot> > v98indian-liver-disease-modeling.py [91:9] -> [91:53]
60   fieldref v106:#name.v63:#0 = v107:#Counts = v107:#Countsindian-liver-disease-modeling.py [91:54] -> [91:58]
61   v96 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v97 @61 exception:v108 name:107indian-liver-disease-modeling.py [91:9] -> [91:68] [96=[sizing]]
BB11
63   v112 = getfield < PythonLoader, LRoot, Counts, <PythonLoader,LRoot> > v96indian-liver-disease-modeling.py [92:20] -> [92:36] [96=[sizing]]
64   v114 = getfield < PythonLoader, LRoot, Counts, <PythonLoader,LRoot> > v96indian-liver-disease-modeling.py [92:43] -> [92:59] [96=[sizing]]
65   v113 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v12,v114 @65 exception:v115indian-liver-disease-modeling.py [92:39] -> [92:60] [12=[sum]]
BB12
66   v111 = binaryop(div) v112 , v113        indian-liver-disease-modeling.py [92:20] -> [92:26]
67   v110 = binaryop(mul) v111 , v116:#100   indian-liver-disease-modeling.py [92:61] -> [92:107]
68   putfield v96.< PythonLoader, LRoot, Percent, <PythonLoader,LRoot> > = v110indian-liver-disease-modeling.py [92:0] -> [92:17] [96=[sizing]]
69   v122 = getfield < PythonLoader, LRoot, groupby, <PythonLoader,LRoot> > v69indian-liver-disease-modeling.py [103:16] -> [103:28] [69=[data]]
70   v123 = new <PythonLoader,Llist>@70      indian-liver-disease-modeling.py [103:29] -> [103:39]
71   fieldref v123.v63:#0 = v124:#Gender = v124:#Genderindian-liver-disease-modeling.py [103:29] -> [103:39]
72   v121 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v122,v123 @72 exception:v125indian-liver-disease-modeling.py [103:16] -> [103:20]
BB13
73   v120 = getfield < PythonLoader, LRoot, size, <PythonLoader,LRoot> > v121indian-liver-disease-modeling.py [103:16] -> [103:45]
74   v119 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v120 @74 exception:v126indian-liver-disease-modeling.py [103:16] -> [103:20]
BB14
75   v118 = getfield < PythonLoader, LRoot, reset_index, <PythonLoader,LRoot> > v119indian-liver-disease-modeling.py [103:16] -> [103:59]
76   fieldref v106:#name.v63:#0 = v107:#Counts = v107:#Countsindian-liver-disease-modeling.py [103:60] -> [103:64]
77   v117 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v118 @77 exception:v127 name:107indian-liver-disease-modeling.py [103:16] -> [103:74] [117=[gender_sizing]]
BB15
79   v131 = getfield < PythonLoader, LRoot, Counts, <PythonLoader,LRoot> > v117indian-liver-disease-modeling.py [104:27] -> [104:50] [117=[gender_sizing]]
80   v133 = getfield < PythonLoader, LRoot, Counts, <PythonLoader,LRoot> > v117indian-liver-disease-modeling.py [104:57] -> [104:80] [117=[gender_sizing]]
81   v132 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v12,v133 @81 exception:v134indian-liver-disease-modeling.py [104:53] -> [104:81] [12=[sum]]
BB16
82   v130 = binaryop(div) v131 , v132        indian-liver-disease-modeling.py [104:27] -> [104:40]
83   v129 = binaryop(mul) v130 , v116:#100   indian-liver-disease-modeling.py [104:82] -> [104:142]
84   putfield v117.< PythonLoader, LRoot, Percent, <PythonLoader,LRoot> > = v129indian-liver-disease-modeling.py [104:0] -> [104:24] [117=[gender_sizing]]
85   v138 = getfield < PythonLoader, LRoot, Gender, <PythonLoader,LRoot> > v117indian-liver-disease-modeling.py [105:24] -> [105:47] [117=[gender_sizing]]
86   v137 = binaryop(add) v138 , v139:#:     indian-liver-disease-modeling.py [105:24] -> [105:37]
87   v144 = global:global round              indian-liver-disease-modeling.py [105:57] -> [105:62]
88   v145 = getfield < PythonLoader, LRoot, Percent, <PythonLoader,LRoot> > v117indian-liver-disease-modeling.py [105:63] -> [105:87] [117=[gender_sizing]]
89   v142 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v144,v145,v146:#1 @89 exception:v147indian-liver-disease-modeling.py [105:57] -> [105:62]
BB17
90   v141 = getfield < PythonLoader, LRoot, astype, <PythonLoader,LRoot> > v142indian-liver-disease-modeling.py [105:57] -> [105:98]
91   v140 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v141,v11 @91 exception:v148indian-liver-disease-modeling.py [105:57] -> [105:103] [11=[str]]
BB18
92   v136 = binaryop(add) v137 , v140        indian-liver-disease-modeling.py [105:55] -> [105:56]
93   v135 = binaryop(add) v136 , v149:#%     indian-liver-disease-modeling.py [105:104] -> [105:189]
94   putfield v117.< PythonLoader, LRoot, Text, <PythonLoader,LRoot> > = v135indian-liver-disease-modeling.py [105:0] -> [105:21] [117=[gender_sizing]]
95   v153 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > v69indian-liver-disease-modeling.py [115:12] -> [115:24] [69=[data]]
96   v152 = fieldref v69.v153                indian-liver-disease-modeling.py [115:7] -> [115:25] [69=[data]]
97   v151 = getfield < PythonLoader, LRoot, corr, <PythonLoader,LRoot> > v152indian-liver-disease-modeling.py [115:7] -> [115:30]
98   v150 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v151 @98 exception:v154indian-liver-disease-modeling.py [115:7] -> [115:32] [150=[corr]]
BB19
100   v157 = getfield < PythonLoader, LRoot, heatmap, <PythonLoader,LRoot> > v57indian-liver-disease-modeling.py [120:0] -> [120:11] [57=[sns]]
101   fieldref v158:#annot.v63:#0 = v67:#true = v67:#trueindian-liver-disease-modeling.py [120:18] -> [120:23]
102   v156 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v157,v150 @102 exception:v159 annot:67indian-liver-disease-modeling.py [120:0] -> [120:29] [150=[corr]]
BB20
103   v161 = getfield < PythonLoader, LRoot, where, <PythonLoader,LRoot> > v69indian-liver-disease-modeling.py [133:7] -> [133:17] [69=[data]]
104   v164 = lexical:pd@Lscript indian-liver-disease-modeling.pyindian-liver-disease-modeling.py [133:18] -> [133:20]
105   v163 = getfield < PythonLoader, LRoot, notnull, <PythonLoader,LRoot> > v164indian-liver-disease-modeling.py [133:18] -> [133:28]
106   v162 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v163,v69 @106 exception:v165indian-liver-disease-modeling.py [133:18] -> [133:34] [69=[data]]
BB21
107   v167 = getfield < PythonLoader, LRoot, median, <PythonLoader,LRoot> > v69indian-liver-disease-modeling.py [133:36] -> [133:47] [69=[data]]
108   v166 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v167 @108 exception:v168indian-liver-disease-modeling.py [133:36] -> [133:49]
BB22
109   fieldref v169:#axis.v63:#0 = v170:#columns = v170:#columnsindian-liver-disease-modeling.py [133:51] -> [133:55]
110   v160 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v161,v162,v166 @110 exception:v171 axis:170indian-liver-disease-modeling.py [133:7] -> [133:66] [160=[data]]
BB23
112   v175 = getfield < PythonLoader, LRoot, isnull, <PythonLoader,LRoot> > v160indian-liver-disease-modeling.py [134:0] -> [134:11] [160=[data]]
113   v174 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v175 @113 exception:v176indian-liver-disease-modeling.py [134:0] -> [134:4]
BB24
114   v173 = getfield < PythonLoader, LRoot, sum, <PythonLoader,LRoot> > v174indian-liver-disease-modeling.py [134:0] -> [134:17]
115   v172 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v173 @115 exception:v177indian-liver-disease-modeling.py [134:0] -> [134:19]
BB25
116   v179 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @116 exception:v180indian-liver-disease-modeling.py [143:5] -> [143:12] [179=[importTree2]]
117   v181 = getfield < PythonLoader, LRoot, preprocessing, <PythonLoader,LRoot> > v179indian-liver-disease-modeling.py [1:0] -> [1:0] [181=[preprocessing]179=[importTree2]]
118   v185 = getfield < PythonLoader, LRoot, iloc, <PythonLoader,LRoot> > v160indian-liver-disease-modeling.py [145:11] -> [145:20] [160=[data]]
119   v184 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > v185indian-liver-disease-modeling.py [145:11] -> [145:56]
120   v183 = getfield < PythonLoader, LRoot, tolist, <PythonLoader,LRoot> > v184indian-liver-disease-modeling.py [145:11] -> [145:63]
121   v182 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v183 @121 exception:v186indian-liver-disease-modeling.py [145:11] -> [145:65] [182=[col_name]]
BB26
123   v189 = getfield < PythonLoader, LRoot, MinMaxScaler, <PythonLoader,LRoot> > v181indian-liver-disease-modeling.py [146:17] -> [146:43] [181=[preprocessing]]
124   v188 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v189 @124 exception:v190indian-liver-disease-modeling.py [146:17] -> [146:45] [188=[min_max_scaler]]
BB27
126   v193 = getfield < PythonLoader, LRoot, fit_transform, <PythonLoader,LRoot> > v188indian-liver-disease-modeling.py [147:12] -> [147:40] [188=[min_max_scaler]]
127   v194 = getfield < PythonLoader, LRoot, iloc, <PythonLoader,LRoot> > v160indian-liver-disease-modeling.py [147:41] -> [147:50] [160=[data]]
128   v192 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v193,v194 @128 exception:v195indian-liver-disease-modeling.py [147:12] -> [147:79] [192=[np_scaled]]
BB28
130   v199 = lexical:pd@Lscript indian-liver-disease-modeling.pyindian-liver-disease-modeling.py [148:16] -> [148:18]
131   v198 = getfield < PythonLoader, LRoot, DataFrame, <PythonLoader,LRoot> > v199indian-liver-disease-modeling.py [148:16] -> [148:28]
132   v197 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v198,v192 @132 exception:v200indian-liver-disease-modeling.py [148:16] -> [148:39] [197=[df_normalized]192=[np_scaled]]
BB29
134   putfield v197.< PythonLoader, LRoot, columns, <PythonLoader,LRoot> > = v182indian-liver-disease-modeling.py [149:0] -> [149:21] [197=[df_normalized]182=[col_name]]
135   v202 = getfield < PythonLoader, LRoot, iloc, <PythonLoader,LRoot> > v160indian-liver-disease-modeling.py [152:12] -> [152:21] [202=[gender_df]160=[data]]
137   v206 = lexical:pd@Lscript indian-liver-disease-modeling.pyindian-liver-disease-modeling.py [153:12] -> [153:14]
138   v205 = getfield < PythonLoader, LRoot, get_dummies, <PythonLoader,LRoot> > v206indian-liver-disease-modeling.py [153:12] -> [153:26]
139   fieldref v207:#prefix.v63:#0 = v124:#Gender = v124:#Genderindian-liver-disease-modeling.py [153:38] -> [153:44]
140   fieldref v208:#drop_first.v63:#0 = v67:#true = v67:#trueindian-liver-disease-modeling.py [153:55] -> [153:65]
141   v204 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v205,v202 @141 exception:v209 prefix:124 drop_first:67indian-liver-disease-modeling.py [153:12] -> [153:71] [204=[gender_df]202=[gender_df]]
BB30
143   v212 = lexical:pd@Lscript indian-liver-disease-modeling.pyindian-liver-disease-modeling.py [160:8] -> [160:10]
144   v211 = getfield < PythonLoader, LRoot, concat, <PythonLoader,LRoot> > v212indian-liver-disease-modeling.py [160:8] -> [160:17]
145   v213 = new <PythonLoader,Llist>@145    indian-liver-disease-modeling.py [160:18] -> [160:98]
146   fieldref v213.v63:#0 = v204 = v204     indian-liver-disease-modeling.py [160:18] -> [160:98] [204=[gender_df]]
147   v215 = getfield < PythonLoader, LRoot, iloc, <PythonLoader,LRoot> > v160indian-liver-disease-modeling.py [160:30] -> [160:39] [160=[data]]
148   fieldref v213.v214:#1 = v215 = v215    indian-liver-disease-modeling.py [160:18] -> [160:98]
149   fieldref v213.v216:#2 = v197 = v197    indian-liver-disease-modeling.py [160:18] -> [160:98] [197=[df_normalized]]
150   v218 = getfield < PythonLoader, LRoot, iloc, <PythonLoader,LRoot> > v160indian-liver-disease-modeling.py [160:62] -> [160:71] [160=[data]]
151   fieldref v213.v217:#3 = v218 = v218    indian-liver-disease-modeling.py [160:18] -> [160:98]
152   fieldref v169:#axis.v63:#0 = v146:#1 = v146:#1indian-liver-disease-modeling.py [160:100] -> [160:104]
153   v210 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v211,v213 @153 exception:v219 axis:146indian-liver-disease-modeling.py [160:8] -> [160:107] [210=[my_df]]
BB31
155   v222 = getfield < PythonLoader, LRoot, head, <PythonLoader,LRoot> > v210indian-liver-disease-modeling.py [171:0] -> [171:10] [210=[my_df]]
156   v221 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v222,v79:#2 @156 exception:v223indian-liver-disease-modeling.py [171:0] -> [171:13]
BB32
157   v225 = getfield < PythonLoader, LRoot, heatmap, <PythonLoader,LRoot> > v57indian-liver-disease-modeling.py [178:0] -> [178:11] [57=[sns]]
158   v230 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > v210indian-liver-disease-modeling.py [178:18] -> [178:31] [210=[my_df]]
159   v234 = lexical:len@Lscript indian-liver-disease-modeling.pyindian-liver-disease-modeling.py [178:33] -> [178:36]
160   v235 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > v210indian-liver-disease-modeling.py [178:37] -> [178:50] [210=[my_df]]
161   v233 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v234,v235 @161 exception:v236indian-liver-disease-modeling.py [178:33] -> [178:51]
BB33
162   v232 = binaryop(sub) v233 , v146:#1    indian-liver-disease-modeling.py [178:33] -> [178:55]
163   v229 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v15,v230,v231:#null,v232,v231:#null @163 exception:v237indian-liver-disease-modeling.py [178:18] -> [178:56] [15=[slice]]
BB34
164   v228 = fieldref v210.v229              indian-liver-disease-modeling.py [178:12] -> [178:57] [210=[my_df]]
165   v227 = getfield < PythonLoader, LRoot, corr, <PythonLoader,LRoot> > v228indian-liver-disease-modeling.py [178:12] -> [178:62]
166   v226 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v227 @166 exception:v238indian-liver-disease-modeling.py [178:12] -> [178:64]
BB35
167   fieldref v158:#annot.v63:#0 = v67:#true = v67:#trueindian-liver-disease-modeling.py [178:66] -> [178:71]
168   fieldref v239:#cmap.v63:#0 = v240:#RdYlGn = v240:#RdYlGnindian-liver-disease-modeling.py [178:78] -> [178:82]
169   v224 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v225,v226 @169 exception:v241 annot:67 cmap:240indian-liver-disease-modeling.py [178:0] -> [178:92]
BB36
170   v243 = getfield < PythonLoader, LRoot, gcf, <PythonLoader,LRoot> > v52indian-liver-disease-modeling.py [179:6] -> [179:13] [52=[plt]]
171   v242 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v243 @171 exception:v244indian-liver-disease-modeling.py [179:6] -> [179:15] [242=[fig]]
BB37
173   v247 = getfield < PythonLoader, LRoot, set_size_inches, <PythonLoader,LRoot> > v242indian-liver-disease-modeling.py [180:0] -> [180:19] [242=[fig]]
174   v246 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v247,v248:#10,v249:#8 @174 exception:v250indian-liver-disease-modeling.py [180:0] -> [180:26]
BB38
175   v252 = getfield < PythonLoader, LRoot, show, <PythonLoader,LRoot> > v52indian-liver-disease-modeling.py [181:0] -> [181:8] [52=[plt]]
176   v251 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v252 @176 exception:v253indian-liver-disease-modeling.py [181:0] -> [181:10]
BB39
177   v255 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @177 exception:v256indian-liver-disease-modeling.py [191:5] -> [191:12]
178   v254 = getfield < PythonLoader, LRoot, model_selection, <PythonLoader,LRoot> > v255indian-liver-disease-modeling.py [191:13] -> [191:28] [254=[importTree3]]
179   v257 = getfield < PythonLoader, LRoot, train_test_split, <PythonLoader,LRoot> > v254indian-liver-disease-modeling.py [1:0] -> [1:0] [257=[train_test_split]254=[importTree3]]
180   v258 = getfield < PythonLoader, LRoot, KFold, <PythonLoader,LRoot> > v254indian-liver-disease-modeling.py [1:0] -> [1:0] [258=[KFold]254=[importTree3]]
181   v259 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @181 exception:v260indian-liver-disease-modeling.py [192:5] -> [192:12] [259=[importTree4]]
182   v261 = getfield < PythonLoader, LRoot, svm, <PythonLoader,LRoot> > v259indian-liver-disease-modeling.py [1:0] -> [1:0] [261=[svm]259=[importTree4]]
183   v263 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @183 exception:v264indian-liver-disease-modeling.py [193:5] -> [193:12]
184   v262 = getfield < PythonLoader, LRoot, tree, <PythonLoader,LRoot> > v263indian-liver-disease-modeling.py [193:13] -> [193:17] [262=[importTree5]]
185   v265 = getfield < PythonLoader, LRoot, DecisionTreeClassifier, <PythonLoader,LRoot> > v262indian-liver-disease-modeling.py [1:0] -> [1:0] [265=[DecisionTreeClassifier]262=[importTree5]]
186   v267 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @186 exception:v268indian-liver-disease-modeling.py [194:5] -> [194:12]
187   v266 = getfield < PythonLoader, LRoot, linear_model, <PythonLoader,LRoot> > v267indian-liver-disease-modeling.py [194:13] -> [194:25] [266=[importTree6]]
188   v269 = getfield < PythonLoader, LRoot, LogisticRegression, <PythonLoader,LRoot> > v266indian-liver-disease-modeling.py [1:0] -> [1:0] [269=[LogisticRegression]266=[importTree6]]
189   v271 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @189 exception:v272indian-liver-disease-modeling.py [195:5] -> [195:12]
190   v270 = getfield < PythonLoader, LRoot, ensemble, <PythonLoader,LRoot> > v271indian-liver-disease-modeling.py [195:13] -> [195:21] [270=[importTree7]]
191   v273 = getfield < PythonLoader, LRoot, RandomForestClassifier, <PythonLoader,LRoot> > v270indian-liver-disease-modeling.py [1:0] -> [1:0] [273=[RandomForestClassifier]270=[importTree7]]
192   v274 = invokestatic < PythonLoader, Lsklearn, import()Lsklearn; > @192 exception:v275indian-liver-disease-modeling.py [196:5] -> [196:12] [274=[importTree8]]
193   v276 = getfield < PythonLoader, LRoot, metrics, <PythonLoader,LRoot> > v274indian-liver-disease-modeling.py [1:0] -> [1:0] [276=[metrics]274=[importTree8]]
194   fieldref v278:#test_size.v63:#0 = v279:#0.3 = v279:#0.3indian-liver-disease-modeling.py [202:31] -> [202:40]
195   fieldref v280:#random_state.v63:#0 = v281:#0 = v281:#0indian-liver-disease-modeling.py [203:31] -> [203:43]
196   v283 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > v210indian-liver-disease-modeling.py [204:40] -> [204:56] [210=[my_df]]
197   fieldref v282:#stratify.v63:#0 = v283 = v283indian-liver-disease-modeling.py [204:31] -> [204:39]
198   v277 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v257,v210 @198 exception:v284 test_size:279 random_state:281 stratify:283indian-liver-disease-modeling.py [201:14] -> [204:57] [257=[train_test_split]210=[my_df]]
BB40
199   v286 = fieldref v277.v63:#0            indian-liver-disease-modeling.py [201:0] -> [201:5] [286=[train]]
201   v288 = fieldref v277.v214:#1           indian-liver-disease-modeling.py [201:0] -> [201:5] [288=[test]]
203   v291 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > v286indian-liver-disease-modeling.py [205:16] -> [205:29] [286=[train]]
204   v294 = lexical:len@Lscript indian-liver-disease-modeling.pyindian-liver-disease-modeling.py [205:31] -> [205:34]
205   v295 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > v286indian-liver-disease-modeling.py [205:35] -> [205:48] [286=[train]]
206   v293 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v294,v295 @206 exception:v296indian-liver-disease-modeling.py [205:31] -> [205:49]
BB41
207   v292 = binaryop(sub) v293 , v146:#1    indian-liver-disease-modeling.py [205:31] -> [205:53]
208   v290 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v15,v291,v231:#null,v292,v231:#null @208 exception:v297indian-liver-disease-modeling.py [205:16] -> [205:54] [15=[slice]]
BB42
209   v289 = fieldref v286.v290              indian-liver-disease-modeling.py [205:10] -> [205:55] [289=[train_X]286=[train]]
211   v301 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > v288indian-liver-disease-modeling.py [206:14] -> [206:26] [288=[test]]
212   v304 = lexical:len@Lscript indian-liver-disease-modeling.pyindian-liver-disease-modeling.py [206:28] -> [206:31]
213   v305 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > v288indian-liver-disease-modeling.py [206:32] -> [206:44] [288=[test]]
214   v303 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v304,v305 @214 exception:v306indian-liver-disease-modeling.py [206:28] -> [206:45]
BB43
215   v302 = binaryop(sub) v303 , v146:#1    indian-liver-disease-modeling.py [206:28] -> [206:49]
216   v300 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v15,v301,v231:#null,v302,v231:#null @216 exception:v307indian-liver-disease-modeling.py [206:14] -> [206:50] [15=[slice]]
BB44
217   v299 = fieldref v288.v300              indian-liver-disease-modeling.py [206:9] -> [206:51] [299=[test_X]288=[test]]
219   v309 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > v286indian-liver-disease-modeling.py [207:10] -> [207:26] [309=[train_Y]286=[train]]
221   v311 = getfield < PythonLoader, LRoot, Dataset, <PythonLoader,LRoot> > v288indian-liver-disease-modeling.py [208:9] -> [208:24] [311=[test_Y]288=[test]]
223   v313 = new <PythonLoader,Llist>@223    indian-liver-disease-modeling.py [213:8] -> [213:36] [313=[types, temp 11]]
224   fieldref v313.v63:#0 = v314:#rbf = v314:#rbfindian-liver-disease-modeling.py [213:8] -> [213:36] [313=[types, temp 11]]
225   fieldref v313.v214:#1 = v315:#linear = v315:#linearindian-liver-disease-modeling.py [213:8] -> [213:36] [313=[types, temp 11]]
226   fieldref v313.v216:#2 = v316:#sigmoid = v316:#sigmoidindian-liver-disease-modeling.py [213:8] -> [213:36] [313=[types, temp 11]]
BB45
229   v321 = global:global i                 indian-liver-disease-modeling.py [214:4] -> [214:5]
230   v322 = a property name of v313         indian-liver-disease-modeling.py [22:0] -> [248:96] [313=[types, temp 11]]
231   global:global i = v322                 indian-liver-disease-modeling.py [22:0] -> [248:96]
232   v319 = binaryop(ne) v231:#null , v322  indian-liver-disease-modeling.py [22:0] -> [248:96]
233   conditional branch(eq, to iindex=257) v319,v63:#0indian-liver-disease-modeling.py [22:0] -> [248:96]
BB46
234   v324 = global:global i                 indian-liver-disease-modeling.py [214:4] -> [214:5]
235   v323 = fieldref v313.v324              indian-liver-disease-modeling.py [22:0] -> [248:96] [313=[types, temp 11]]
236   global:global i = v323                 indian-liver-disease-modeling.py [22:0] -> [248:96]
237   v326 = getfield < PythonLoader, LRoot, SVC, <PythonLoader,LRoot> > v261indian-liver-disease-modeling.py [215:12] -> [215:19] [261=[svm]]
238   v328 = global:global i                 indian-liver-disease-modeling.py [215:27] -> [215:28]
239   fieldref v327:#kernel.v63:#0 = v328 = v328indian-liver-disease-modeling.py [215:20] -> [215:26]
240   fieldref v280:#random_state.v63:#0 = v281:#0 = v281:#0indian-liver-disease-modeling.py [215:30] -> [215:42]
241   v325 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v326 @241 exception:v329 kernel:328 random_state:281indian-liver-disease-modeling.py [215:12] -> [215:45] [325=[model]]
BB47
243   v332 = getfield < PythonLoader, LRoot, fit, <PythonLoader,LRoot> > v325indian-liver-disease-modeling.py [216:4] -> [216:13] [325=[model]]
244   v331 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v332,v289,v309 @244 exception:v333indian-liver-disease-modeling.py [216:4] -> [216:31] [289=[train_X]309=[train_Y]]
BB48
245   v335 = getfield < PythonLoader, LRoot, predict, <PythonLoader,LRoot> > v325indian-liver-disease-modeling.py [217:17] -> [217:30] [325=[model]]
246   v334 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v335,v299 @246 exception:v336indian-liver-disease-modeling.py [217:17] -> [217:38] [334=[prediction]299=[test_X]]
BB49
248   v340 = global:global i                 indian-liver-disease-modeling.py [218:39] -> [218:40]
249   v343 = getfield < PythonLoader, LRoot, accuracy_score, <PythonLoader,LRoot> > v276indian-liver-disease-modeling.py [218:48] -> [218:70] [276=[metrics]]
250   v342 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v343,v334,v311 @250 exception:v344indian-liver-disease-modeling.py [218:48] -> [218:90] [334=[prediction]311=[test_Y]]
BB50
251   v338 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v21,v339:#Accuracy for SVM kernel =,v340,v341:#is,v342 @251 exception:v345indian-liver-disease-modeling.py [218:4] -> [218:91] [21=[print]]
BB51
252   v348 = global:global i                 indian-liver-disease-modeling.py [219:39] -> [219:40]
253   v351 = getfield < PythonLoader, LRoot, f1_score, <PythonLoader,LRoot> > v276indian-liver-disease-modeling.py [219:50] -> [219:66] [276=[metrics]]
254   v350 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v351,v334,v311 @254 exception:v352indian-liver-disease-modeling.py [219:50] -> [219:86] [334=[prediction]311=[test_Y]]
BB52
255   v346 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v21,v347:#F1 score for SVM kernel =,v348,v349:# is ,v350 @255 exception:v353indian-liver-disease-modeling.py [219:4] -> [219:87] [21=[print]]
BB53
256   goto (from iindex= 256 to iindex = 229)indian-liver-disease-modeling.py [22:0] -> [248:96]
BB54
257   v356 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v269 @257 exception:v357indian-liver-disease-modeling.py [224:8] -> [224:28] [356=[model]269=[LogisticRegression]]
BB55
259   v359 = getfield < PythonLoader, LRoot, fit, <PythonLoader,LRoot> > v356indian-liver-disease-modeling.py [225:0] -> [225:9] [356=[model]]
260   v358 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v359,v289,v309 @260 exception:v360indian-liver-disease-modeling.py [225:0] -> [225:27] [289=[train_X]309=[train_Y]]
BB56
261   v362 = getfield < PythonLoader, LRoot, predict, <PythonLoader,LRoot> > v356indian-liver-disease-modeling.py [226:13] -> [226:26] [356=[model]]
262   v361 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v362,v299 @262 exception:v363indian-liver-disease-modeling.py [226:13] -> [226:34] [361=[prediction]299=[test_X]]
BB57
264   v367 = getfield < PythonLoader, LRoot, accuracy_score, <PythonLoader,LRoot> > v276indian-liver-disease-modeling.py [227:52] -> [227:74] [276=[metrics]]
265   v366 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v367,v361,v311 @265 exception:v368indian-liver-disease-modeling.py [227:52] -> [227:94] [361=[prediction]311=[test_Y]]
BB58
266   v364 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v21,v365:#The accuracy of the Logistic Regression is,v366 @266 exception:v369indian-liver-disease-modeling.py [227:0] -> [227:95] [21=[print]]
BB59
267   v373 = getfield < PythonLoader, LRoot, f1_score, <PythonLoader,LRoot> > v276indian-liver-disease-modeling.py [228:52] -> [228:68] [276=[metrics]]
268   v372 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v373,v361,v311 @268 exception:v374indian-liver-disease-modeling.py [228:52] -> [228:88] [361=[prediction]311=[test_Y]]
BB60
269   v370 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v21,v371:#The F1 score of the Logistic Regression is,v372 @269 exception:v375indian-liver-disease-modeling.py [228:0] -> [228:89] [21=[print]]
BB61
270   v376 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v265 @270 exception:v377indian-liver-disease-modeling.py [233:8] -> [233:32] [376=[model]265=[DecisionTreeClassifier]]
BB62
272   v379 = getfield < PythonLoader, LRoot, fit, <PythonLoader,LRoot> > v376indian-liver-disease-modeling.py [234:0] -> [234:9] [376=[model]]
273   v378 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v379,v289,v309 @273 exception:v380indian-liver-disease-modeling.py [234:0] -> [234:27] [289=[train_X]309=[train_Y]]
BB63
274   v382 = getfield < PythonLoader, LRoot, predict, <PythonLoader,LRoot> > v376indian-liver-disease-modeling.py [235:13] -> [235:26] [376=[model]]
275   v381 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v382,v299 @275 exception:v383indian-liver-disease-modeling.py [235:13] -> [235:34] [381=[prediction]299=[test_X]]
BB64
277   v387 = getfield < PythonLoader, LRoot, accuracy_score, <PythonLoader,LRoot> > v276indian-liver-disease-modeling.py [236:46] -> [236:68] [276=[metrics]]
278   v386 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v387,v381,v311 @278 exception:v388indian-liver-disease-modeling.py [236:46] -> [236:88] [381=[prediction]311=[test_Y]]
BB65
279   v384 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v21,v385:#The accuracy of the Decision Tree is,v386 @279 exception:v389indian-liver-disease-modeling.py [236:0] -> [236:89] [21=[print]]
BB66
280   v393 = getfield < PythonLoader, LRoot, f1_score, <PythonLoader,LRoot> > v276indian-liver-disease-modeling.py [237:46] -> [237:62] [276=[metrics]]
281   v392 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v393,v381,v311 @281 exception:v394indian-liver-disease-modeling.py [237:46] -> [237:82] [381=[prediction]311=[test_Y]]
BB67
282   v390 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v21,v391:#The F1 score of the Decision Tree is,v392 @282 exception:v395indian-liver-disease-modeling.py [237:0] -> [237:83] [21=[print]]
BB68
283   fieldref v397:#n_estimators.v63:#0 = v116:#100 = v116:#100indian-liver-disease-modeling.py [242:31] -> [242:43]
284   fieldref v280:#random_state.v63:#0 = v281:#0 = v281:#0indian-liver-disease-modeling.py [242:49] -> [242:61]
285   v396 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v273 @285 exception:v398 n_estimators:116 random_state:281indian-liver-disease-modeling.py [242:8] -> [242:64] [396=[model]273=[RandomForestClassifier]]
BB69
287   v400 = getfield < PythonLoader, LRoot, fit, <PythonLoader,LRoot> > v396indian-liver-disease-modeling.py [243:0] -> [243:9] [396=[model]]
288   v399 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v400,v289,v309 @288 exception:v401indian-liver-disease-modeling.py [243:0] -> [243:27] [289=[train_X]309=[train_Y]]
BB70
289   v403 = getfield < PythonLoader, LRoot, predict, <PythonLoader,LRoot> > v396indian-liver-disease-modeling.py [244:13] -> [244:26] [396=[model]]
290   v402 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v403,v299 @290 exception:v404indian-liver-disease-modeling.py [244:13] -> [244:34] [402=[prediction]299=[test_X]]
BB71
292   v408 = getfield < PythonLoader, LRoot, accuracy_score, <PythonLoader,LRoot> > v276indian-liver-disease-modeling.py [245:46] -> [245:68] [276=[metrics]]
293   v407 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v408,v402,v311 @293 exception:v409indian-liver-disease-modeling.py [245:46] -> [245:88] [402=[prediction]311=[test_Y]]
BB72
294   v405 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v21,v406:#The accuracy of the Random Forest is,v407 @294 exception:v410indian-liver-disease-modeling.py [245:0] -> [245:89] [21=[print]]
BB73
295   v414 = getfield < PythonLoader, LRoot, f1_score, <PythonLoader,LRoot> > v276indian-liver-disease-modeling.py [246:46] -> [246:62] [276=[metrics]]
296   v413 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v414,v402,v311 @296 exception:v415indian-liver-disease-modeling.py [246:46] -> [246:82] [402=[prediction]311=[test_Y]]
BB74
297   v411 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v21,v412:#The F1 score of the Random Forest is,v413 @297 exception:v416indian-liver-disease-modeling.py [246:0] -> [246:83] [21=[print]]
BB75
298   v422 = lexical:pd@Lscript indian-liver-disease-modeling.pyindian-liver-disease-modeling.py [248:6] -> [248:8]
299   v421 = getfield < PythonLoader, LRoot, Series, <PythonLoader,LRoot> > v422indian-liver-disease-modeling.py [248:6] -> [248:15]
300   v423 = getfield < PythonLoader, LRoot, feature_importances_, <PythonLoader,LRoot> > v396indian-liver-disease-modeling.py [248:16] -> [248:42] [396=[model]]
301   v425 = getfield < PythonLoader, LRoot, columns, <PythonLoader,LRoot> > v289indian-liver-disease-modeling.py [248:50] -> [248:65] [289=[train_X]]
302   fieldref v424:#index.v63:#0 = v425 = v425indian-liver-disease-modeling.py [248:44] -> [248:49]
303   v420 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v421,v423 @303 exception:v426 index:425indian-liver-disease-modeling.py [248:6] -> [248:8]
BB76
304   v419 = getfield < PythonLoader, LRoot, sort_values, <PythonLoader,LRoot> > v420indian-liver-disease-modeling.py [248:6] -> [248:78]
305   fieldref v427:#ascending.v63:#0 = v74:#false = v74:#falseindian-liver-disease-modeling.py [248:79] -> [248:88]
306   v418 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v419 @306 exception:v428 ascending:74indian-liver-disease-modeling.py [248:6] -> [248:95]
BB77
307   v417 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v21,v418 @307 exception:v429indian-liver-disease-modeling.py [248:0] -> [248:96] [21=[print]]
BB78

callees of node import : []

IR of node 3, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@13 ]
synthetic < PythonLoader, L__name__, import()L__name__; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 4, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]
synthetic < PythonLoader, Lprint, import()Lprint; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 5, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@15 ]
synthetic < PythonLoader, Lsuper, import()Lsuper; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 6, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@16 ]
synthetic < PythonLoader, Lopen, import()Lopen; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 7, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@17 ]
synthetic < PythonLoader, Lhasattr, import()Lhasattr; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 8, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@18 ]
synthetic < PythonLoader, LBaseException, import()LBaseException; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 9, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@19 ]
synthetic < PythonLoader, Labs, import()Labs; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 10, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@20 ]
synthetic < PythonLoader, Ldel, import()Ldel; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 11, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@21 ]
synthetic < PythonLoader, LIPython, import()LIPython; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 12, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]
synthetic < PythonLoader, Lpandas, import()Lpandas; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 13, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]
synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 14, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]
synthetic < PythonLoader, Lseaborn, import()Lseaborn; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node missing_values_table : [len, turtle, turtle, turtle, turtle, turtle, turtle]

IR of node 15, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]
<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..1]
    -> BB2
    -> BB9
BB2[2..3]
    -> BB3
    -> BB9
BB3[4..6]
    -> BB4
    -> BB9
BB4[7..8]
    -> BB5
    -> BB9
BB5[9..11]
    -> BB6
    -> BB9
BB6[12..20]
    -> BB7
    -> BB9
BB7[21..27]
    -> BB8
    -> BB9
BB8[28..29]
    -> BB9
BB9[-1..-2]
Instructions:
BB0
BB1
0   v6 = getfield < PythonLoader, LRoot, isnull, <PythonLoader,LRoot> > v2indian-liver-disease-modeling.py [62:14] -> [62:23] [2=[df]]
1   v5 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v6 @1 exception:v7indian-liver-disease-modeling.py [62:14] -> [62:16]
BB2
2   v4 = getfield < PythonLoader, LRoot, sum, <PythonLoader,LRoot> > v5indian-liver-disease-modeling.py [62:14] -> [62:29]
3   v3 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v4 @3 exception:v8indian-liver-disease-modeling.py [62:14] -> [62:31] [3=[mis_val]]
BB3
5   v16 = getfield < PythonLoader, LRoot, isnull, <PythonLoader,LRoot> > v2indian-liver-disease-modeling.py [63:28] -> [63:37] [2=[df]]
6   v15 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v16 @6 exception:v17indian-liver-disease-modeling.py [63:28] -> [63:30]
BB4
7   v14 = getfield < PythonLoader, LRoot, sum, <PythonLoader,LRoot> > v15indian-liver-disease-modeling.py [63:28] -> [63:43]
8   v13 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v14 @8 exception:v18indian-liver-disease-modeling.py [63:28] -> [63:45]
BB5
9   v11 = binaryop(mul) v12:#100 , v13       indian-liver-disease-modeling.py [63:22] -> [63:25]
10   v21 = lexical:len@Lscript indian-liver-disease-modeling.pyindian-liver-disease-modeling.py [63:48] -> [63:51]
11   v19 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v21,v2 @11 exception:v22indian-liver-disease-modeling.py [63:48] -> [63:55] [2=[df]]
BB6
12   v10 = binaryop(div) v11 , v19           indian-liver-disease-modeling.py [63:46] -> [63:79] [10=[mis_val_percent]]
14   v27 = lexical:pd@Lscript indian-liver-disease-modeling.pyindian-liver-disease-modeling.py [64:20] -> [64:22]
15   v25 = getfield < PythonLoader, LRoot, concat, <PythonLoader,LRoot> > v27indian-liver-disease-modeling.py [64:20] -> [64:29]
16   v28 = new <PythonLoader,Llist>@16       indian-liver-disease-modeling.py [64:30] -> [64:56]
17   fieldref v28.v29:#0 = v3 = v3           indian-liver-disease-modeling.py [64:30] -> [64:56] [3=[mis_val]]
18   fieldref v28.v30:#1 = v10 = v10         indian-liver-disease-modeling.py [64:30] -> [64:56] [10=[mis_val_percent]]
19   fieldref v31:#axis.v29:#0 = v32:#1 = v32:#1indian-liver-disease-modeling.py [64:58] -> [64:62]
20   v24 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v25,v28 @20 exception:v33 axis:32indian-liver-disease-modeling.py [64:20] -> [64:65] [24=[mis_val_table]]
BB7
22   v36 = getfield < PythonLoader, LRoot, rename, <PythonLoader,LRoot> > v24indian-liver-disease-modeling.py [65:32] -> [65:52] [24=[mis_val_table]]
23   v38 = new <PythonLoader,Ldict>@23       indian-liver-disease-modeling.py [65:61] -> [65:106]
24   fieldref v38.v39:#0 = v40:#Missing Values = v40:#Missing Valuesindian-liver-disease-modeling.py [65:61] -> [65:106]
25   fieldref v38.v32:#1 = v41:#% of Total Values = v41:#% of Total Valuesindian-liver-disease-modeling.py [65:61] -> [65:106]
26   fieldref v37:#columns.v29:#0 = v38 = v38indian-liver-disease-modeling.py [65:53] -> [65:60]
27   v35 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v36 @27 exception:v42 columns:38indian-liver-disease-modeling.py [65:32] -> [65:107] [35=[mis_val_table_ren_columns]]
BB8
29   return v35                              indian-liver-disease-modeling.py [61:0] -> [66:36] [35=[mis_val_table_ren_columns]]
BB9

callees of node sum : []

IR of node 16, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@65 ]
synthetic < PythonLoader, Lwala/builtin/sum, do()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB2
BB1[1..1]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
0   v11 = new <Primordial,I>@0               
BB1
1   return v11                               
BB2

callees of node sum : []

IR of node 17, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@81 ]
synthetic < PythonLoader, Lwala/builtin/sum, do()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB2
BB1[1..1]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
0   v11 = new <Primordial,I>@0               
BB1
1   return v11                               
BB2

callees of node import : []

IR of node 18, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@116 ]
synthetic < PythonLoader, Lsklearn, import()Lsklearn; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node len : []

IR of node 19, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@161 ]
synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB2
BB1[1..1]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
0   v11 = new <Primordial,I>@0               
BB1
1   return v11                               
BB2

callees of node slice : []

IR of node 20, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@163 ]
synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; >
CFG:
BB0[0..0]
    -> BB1
BB1[-1..-2]
Instructions:
BB0
0   return v2                                
BB1

callees of node import : []

IR of node 21, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ]
synthetic < PythonLoader, Lsklearn, import()Lsklearn; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 22, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@181 ]
synthetic < PythonLoader, Lsklearn, import()Lsklearn; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 23, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@183 ]
synthetic < PythonLoader, Lsklearn, import()Lsklearn; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 24, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@186 ]
synthetic < PythonLoader, Lsklearn, import()Lsklearn; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 25, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@189 ]
synthetic < PythonLoader, Lsklearn, import()Lsklearn; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node import : []

IR of node 26, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]
synthetic < PythonLoader, Lsklearn, import()Lsklearn; >
CFG:
BB0[0..0]
    -> BB1
    -> BB3
BB1[1..1]
    -> BB2
    -> BB3
BB2[2..2]
    -> BB3
BB3[-1..-2]
Instructions:
BB0
0   v1 = new <PythonLoader,Lturtle>@0        
BB1
1   putfield v1.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v1
BB2
2   return v1                                
BB3

callees of node len : []

IR of node 27, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@206 ]
synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB2
BB1[1..1]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
0   v11 = new <Primordial,I>@0               
BB1
1   return v11                               
BB2

callees of node slice : []

IR of node 28, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@208 ]
synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; >
CFG:
BB0[0..0]
    -> BB1
BB1[-1..-2]
Instructions:
BB0
0   return v2                                
BB1

callees of node len : []

IR of node 29, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@214 ]
synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB2
BB1[1..1]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
0   v11 = new <Primordial,I>@0               
BB1
1   return v11                               
BB2

callees of node slice : []

IR of node 30, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@216 ]
synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; >
CFG:
BB0[0..0]
    -> BB1
BB1[-1..-2]
Instructions:
BB0
0   return v2                                
BB1

callees of node len : []

IR of node 31, context CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@11 ]
synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB2
BB1[1..1]
    -> BB2
BB2[-1..-2]
Instructions:
BB0
0   v11 = new <Primordial,I>@0               
BB1
1   return v11                               
BB2

callees of node turtle : []

IR of node 32, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@296 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 33, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@268 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 34, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@250 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 35, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@293 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 36, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@281 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 37, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@278 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 38, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@265 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 39, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@254 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 40, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 41, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 42, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 43, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 44, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 45, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 46, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@176 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 47, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 48, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@24 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 49, context CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 50, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 51, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 52, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 53, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 54, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 55, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 56, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@307 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 57, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@297 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 58, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@294 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 59, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@282 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 60, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@279 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 61, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@269 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 62, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@266 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 63, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@255 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 64, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@251 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 65, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@169 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 66, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@102 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 67, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@34 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node missing_values_table : [len, turtle, turtle, turtle, turtle, turtle, turtle]

IR of node 68, context CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]
<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>
CFG:
BB0[-1..-2]
    -> BB1
BB1[0..1]
    -> BB2
    -> BB9
BB2[2..3]
    -> BB3
    -> BB9
BB3[4..6]
    -> BB4
    -> BB9
BB4[7..8]
    -> BB5
    -> BB9
BB5[9..11]
    -> BB6
    -> BB9
BB6[12..20]
    -> BB7
    -> BB9
BB7[21..27]
    -> BB8
    -> BB9
BB8[28..29]
    -> BB9
BB9[-1..-2]
Instructions:
BB0
BB1
0   v6 = getfield < PythonLoader, LRoot, isnull, <PythonLoader,LRoot> > v2indian-liver-disease-modeling.py [62:14] -> [62:23] [2=[df]]
1   v5 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v6 @1 exception:v7indian-liver-disease-modeling.py [62:14] -> [62:16]
BB2
2   v4 = getfield < PythonLoader, LRoot, sum, <PythonLoader,LRoot> > v5indian-liver-disease-modeling.py [62:14] -> [62:29]
3   v3 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v4 @3 exception:v8indian-liver-disease-modeling.py [62:14] -> [62:31] [3=[mis_val]]
BB3
5   v16 = getfield < PythonLoader, LRoot, isnull, <PythonLoader,LRoot> > v2indian-liver-disease-modeling.py [63:28] -> [63:37] [2=[df]]
6   v15 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v16 @6 exception:v17indian-liver-disease-modeling.py [63:28] -> [63:30]
BB4
7   v14 = getfield < PythonLoader, LRoot, sum, <PythonLoader,LRoot> > v15indian-liver-disease-modeling.py [63:28] -> [63:43]
8   v13 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v14 @8 exception:v18indian-liver-disease-modeling.py [63:28] -> [63:45]
BB5
9   v11 = binaryop(mul) v12:#100 , v13       indian-liver-disease-modeling.py [63:22] -> [63:25]
10   v21 = lexical:len@Lscript indian-liver-disease-modeling.pyindian-liver-disease-modeling.py [63:48] -> [63:51]
11   v19 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v21,v2 @11 exception:v22indian-liver-disease-modeling.py [63:48] -> [63:55] [2=[df]]
BB6
12   v10 = binaryop(div) v11 , v19           indian-liver-disease-modeling.py [63:46] -> [63:79] [10=[mis_val_percent]]
14   v27 = lexical:pd@Lscript indian-liver-disease-modeling.pyindian-liver-disease-modeling.py [64:20] -> [64:22]
15   v25 = getfield < PythonLoader, LRoot, concat, <PythonLoader,LRoot> > v27indian-liver-disease-modeling.py [64:20] -> [64:29]
16   v28 = new <PythonLoader,Llist>@16       indian-liver-disease-modeling.py [64:30] -> [64:56]
17   fieldref v28.v29:#0 = v3 = v3           indian-liver-disease-modeling.py [64:30] -> [64:56] [3=[mis_val]]
18   fieldref v28.v30:#1 = v10 = v10         indian-liver-disease-modeling.py [64:30] -> [64:56] [10=[mis_val_percent]]
19   fieldref v31:#axis.v29:#0 = v32:#1 = v32:#1indian-liver-disease-modeling.py [64:58] -> [64:62]
20   v24 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v25,v28 @20 exception:v33 axis:32indian-liver-disease-modeling.py [64:20] -> [64:65] [24=[mis_val_table]]
BB7
22   v36 = getfield < PythonLoader, LRoot, rename, <PythonLoader,LRoot> > v24indian-liver-disease-modeling.py [65:32] -> [65:52] [24=[mis_val_table]]
23   v38 = new <PythonLoader,Ldict>@23       indian-liver-disease-modeling.py [65:61] -> [65:106]
24   fieldref v38.v39:#0 = v40:#Missing Values = v40:#Missing Valuesindian-liver-disease-modeling.py [65:61] -> [65:106]
25   fieldref v38.v32:#1 = v41:#% of Total Values = v41:#% of Total Valuesindian-liver-disease-modeling.py [65:61] -> [65:106]
26   fieldref v37:#columns.v29:#0 = v38 = v38indian-liver-disease-modeling.py [65:53] -> [65:60]
27   v35 = invokeFunction < PythonLoader, LCodeBody, do()LRoot; > v36 @27 exception:v42 columns:38indian-liver-disease-modeling.py [65:32] -> [65:107] [35=[mis_val_table_ren_columns]]
BB8
29   return v35                              indian-liver-disease-modeling.py [61:0] -> [66:36] [35=[mis_val_table_ren_columns]]
BB9

callees of node turtle : []

IR of node 69, context CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 70, context CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 71, context CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 72, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 73, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@273 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 74, context CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 75, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 76, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@244 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 77, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 78, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@288 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 79, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 80, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 81, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@260 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 82, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@156 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 83, context CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 84, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 85, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@108 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 86, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@52 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 87, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 88, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@41 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 89, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 90, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 91, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 92, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@174 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 93, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 94, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 95, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 96, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 97, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 98, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 99, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 100, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@115 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

callees of node turtle : []

IR of node 101, context CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]
synthetic < PythonLoader, Lturtle, turtle()LRoot; >
CFG:
BB0[0..0]
    -> BB1
    -> BB4
BB1[1..1]
    -> BB2
    -> BB4
BB2[2..2]
    -> BB3
    -> BB4
BB3[3..3]
    -> BB4
BB4[-1..-2]
Instructions:
BB0
0   v10 = new <PythonLoader,Lturtle>@0       
BB1
1   putfield v10.< PythonLoader, Lturtle, turtle, <PythonLoader,LRoot> > = v10
BB2
2   v11 = invokevirtual < PythonLoader, Lturtle, callback()LRoot; > v2 @2 exception:v12
BB3
3   return v10                               
BB4

pointer analysis
[Node: synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V > Context: Everywhere, v3] --> [SITE_IN_NODE{synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >:NEW <PythonLoader,Lscript indian-liver-disease-modeling.py>@1 in Everywhere}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >:NEW <PythonLoader,Lscript indian-liver-disease-modeling.py>@1 in Everywhere}]
[Node: synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V > Context: Everywhere, v4] --> []
[Ret-V:Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]] --> []
[Node: synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V > Context: Everywhere, v6] --> [SMIK:SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Lscript indian-liver-disease-modeling.py/missing_values_table>@42 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}@creator:Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]]
[<field global script indian-liver-disease-modeling.py/missing_values_table>] --> [SMIK:SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Lscript indian-liver-disease-modeling.py/missing_values_table>@42 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}@creator:Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]]
[Node: synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V > Context: Everywhere, v7] --> [SITE_IN_NODE{synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >:NEW <PythonLoader,Lturtle>@4 in Everywhere}]
[SITE_IN_NODE{synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >:NEW <PythonLoader,Lturtle>@4 in Everywhere},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >:NEW <PythonLoader,Lturtle>@4 in Everywhere}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >:NEW <PythonLoader,Lturtle>@4 in Everywhere}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V > Context: Everywhere] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V > Context: Everywhere, v5] --> []
[Node: synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V > Context: Everywhere, v9] --> []
[<field global script indian-liver-disease-modeling.py>] --> [SITE_IN_NODE{synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >:NEW <PythonLoader,Lscript indian-liver-disease-modeling.py>@1 in Everywhere}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v5] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@245d6744]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v6] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@142fc2e7]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v7] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@4b7d6b27]]
[upward:len:Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@4b7d6b27]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v3] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v8] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@54e44004]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v9] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@5ae38232]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v10] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@2844f478]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v11] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@59ab9ed9]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v12] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@2fb90188]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v13] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@698de45f]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v14] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@66e52a22]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v15] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@633d2d71]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v18] --> [SITE_IN_NODE{synthetic < PythonLoader, L__name__, import()L__name__; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@13 ]}]
[Ret-V:Node: synthetic < PythonLoader, L__name__, import()L__name__; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@13 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, L__name__, import()L__name__; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@13 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v19] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, L__name__, import()L__name__; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@13 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v21] --> [SITE_IN_NODE{synthetic < PythonLoader, Lprint, import()Lprint; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lprint, import()Lprint; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lprint, import()Lprint; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v22] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lprint, import()Lprint; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v24] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsuper, import()Lsuper; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@15 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lsuper, import()Lsuper; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@15 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsuper, import()Lsuper; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@15 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v25] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lsuper, import()Lsuper; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@15 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v27] --> [SITE_IN_NODE{synthetic < PythonLoader, Lopen, import()Lopen; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@16 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lopen, import()Lopen; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@16 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lopen, import()Lopen; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@16 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v28] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lopen, import()Lopen; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@16 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v30] --> [SITE_IN_NODE{synthetic < PythonLoader, Lhasattr, import()Lhasattr; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@17 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lhasattr, import()Lhasattr; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@17 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lhasattr, import()Lhasattr; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@17 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v31] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lhasattr, import()Lhasattr; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@17 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v33] --> [SITE_IN_NODE{synthetic < PythonLoader, LBaseException, import()LBaseException; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@18 ]}]
[Ret-V:Node: synthetic < PythonLoader, LBaseException, import()LBaseException; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@18 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, LBaseException, import()LBaseException; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@18 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v34] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, LBaseException, import()LBaseException; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@18 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v36] --> [SITE_IN_NODE{synthetic < PythonLoader, Labs, import()Labs; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@19 ]}]
[Ret-V:Node: synthetic < PythonLoader, Labs, import()Labs; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@19 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Labs, import()Labs; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@19 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v37] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Labs, import()Labs; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@19 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v39] --> [SITE_IN_NODE{synthetic < PythonLoader, Ldel, import()Ldel; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@20 ]}]
[Ret-V:Node: synthetic < PythonLoader, Ldel, import()Ldel; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@20 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Ldel, import()Ldel; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@20 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v40] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Ldel, import()Ldel; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@20 ]] --> []
[Ret-V:Node: synthetic < PythonLoader, LIPython, import()LIPython; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@21 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, LIPython, import()LIPython; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@21 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v44] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, LIPython, import()LIPython; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@21 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v43] --> [SITE_IN_NODE{synthetic < PythonLoader, LIPython, import()LIPython; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@21 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v45] --> [SITE_IN_NODE{synthetic < PythonLoader, LIPython, import()LIPython; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@21 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v41] --> [SITE_IN_NODE{synthetic < PythonLoader, LIPython, import()LIPython; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@21 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v47] --> [[ConstantKey:<script>
code_show=true;
function code_toggle() {
 if (code_show){
 $('div.input').hide();
 } else {
 $('div.input').show();
 }
 code_show = !code_show
}
$( document ).ready(code_toggle);
</script>
<form action="javascript:code_toggle()"><input type="submit" value="Toggle on/off the raw code."></form>:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v50] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lpandas, import()Lpandas; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v51] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lpandas, import()Lpandas; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]] --> []
[upward:pd:Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v4] --> []
[Ret-V:Node: synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v55] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v54] --> [SITE_IN_NODE{synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lseaborn, import()Lseaborn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lseaborn, import()Lseaborn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v58] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lseaborn, import()Lseaborn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v60] --> [SITE_IN_NODE{synthetic < PythonLoader, Lseaborn, import()Lseaborn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v57] --> [SITE_IN_NODE{synthetic < PythonLoader, Lseaborn, import()Lseaborn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v62] --> [[ConstantKey:white:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v61] --> [[ConstantKey:style:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v63] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[catalog of [ConstantKey:style:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:style:<PythonLoader,Lstring>],<field 0>] --> [[ConstantKey:white:<PythonLoader,Lstring>]]
[[ConstantKey:style:<PythonLoader,Lstring>]; [Core[Root]]] --> [[ConstantKey:white:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v65] --> [[ConstantKey:muted:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v64] --> [[ConstantKey:palette:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:palette:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:palette:<PythonLoader,Lstring>],<field 0>] --> [[ConstantKey:muted:<PythonLoader,Lstring>]]
[[ConstantKey:palette:<PythonLoader,Lstring>]; [Core[Root]]] --> [[ConstantKey:muted:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v67] --> [[ConstantKey:true:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v66] --> [[ConstantKey:color_codes:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:color_codes:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:color_codes:<PythonLoader,Lstring>],<field 0>] --> [[ConstantKey:true:<PythonLoader,LRoot>]]
[[ConstantKey:color_codes:<PythonLoader,Lstring>]; [Core[Root]]] --> [[ConstantKey:true:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v70] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v71] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v74] --> [[ConstantKey:false:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v73] --> [[ConstantKey:low_memory:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:low_memory:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:low_memory:<PythonLoader,Lstring>],<field 0>] --> [[ConstantKey:false:<PythonLoader,LRoot>]]
[[ConstantKey:low_memory:<PythonLoader,Lstring>]; [Core[Root]]] --> [[ConstantKey:false:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v72] --> [[ConstantKey:../input/indian_liver_patient.csv:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v78] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v69] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v79] --> [[ConstantKey:2:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v83] --> [SMIK:SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Lscript indian-liver-disease-modeling.py/missing_values_table>@42 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}@creator:Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]]
[SITE_IN_NODE{synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >:NEW <PythonLoader,Lscript indian-liver-disease-modeling.py>@1 in Everywhere},<field missing_values_table>] --> [SMIK:SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Lscript indian-liver-disease-modeling.py/missing_values_table>@42 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}@creator:Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >:NEW <PythonLoader,Lscript indian-liver-disease-modeling.py>@1 in Everywhere}] --> [[ConstantKey:missing_values_table:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v1] --> [SMIK:SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Lscript indian-liver-disease-modeling.py/missing_values_table>@42 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}@creator:Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v85] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]}]
[Ret-V:Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v90] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v91] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v87] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}, SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v88] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v89] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v94] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v101] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v102] --> [SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@54 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v103] --> [[ConstantKey:Dataset:<PythonLoader,Lstring>]]
[catalog of SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@54 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@54 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]},<field 0>] --> [[ConstantKey:Dataset:<PythonLoader,Lstring>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@54 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}; [Core[Root]]] --> [[ConstantKey:Dataset:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v99] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v100] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v97] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v98] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v107] --> [[ConstantKey:Counts:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v106] --> [[ConstantKey:name:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:name:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:name:<PythonLoader,Lstring>],<field 0>] --> [[ConstantKey:Counts:<PythonLoader,Lstring>]]
[[ConstantKey:name:<PythonLoader,Lstring>]; [Core[Root]]] --> [[ConstantKey:Counts:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v96] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v114] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]}]
[Node: synthetic < PythonLoader, Lwala/builtin/sum, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@65 ], v1] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@2fb90188]]
[Node: synthetic < PythonLoader, Lwala/builtin/sum, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@65 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lwala/builtin/sum, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@65 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v112] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v113] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v110] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v111] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v116] --> [[ConstantKey:100:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v122] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v123] --> [SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@70 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v124] --> [[ConstantKey:Gender:<PythonLoader,Lstring>]]
[catalog of SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@70 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@70 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]},<field 0>] --> [[ConstantKey:Gender:<PythonLoader,Lstring>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@70 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}; [Core[Root]]] --> [[ConstantKey:Gender:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v120] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v121] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v118] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v119] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v117] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v133] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]}]
[Node: synthetic < PythonLoader, Lwala/builtin/sum, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@81 ], v1] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@2fb90188]]
[Node: synthetic < PythonLoader, Lwala/builtin/sum, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@81 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lwala/builtin/sum, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@81 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v131] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v132] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v129] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v130] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v138] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v139] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v144] --> []
[<field global round>] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v145] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v146] --> [[ConstantKey:1:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v141] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v142] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v137] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v140] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v135] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v136] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v149] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v153] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v151] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v152] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v157] --> [SITE_IN_NODE{synthetic < PythonLoader, Lseaborn, import()Lseaborn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v158] --> [[ConstantKey:annot:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:annot:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:annot:<PythonLoader,Lstring>],<field 0>] --> [[ConstantKey:true:<PythonLoader,LRoot>]]
[[ConstantKey:annot:<PythonLoader,Lstring>]; [Core[Root]]] --> [[ConstantKey:true:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v161] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v163] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v164] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v167] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v170] --> [[ConstantKey:columns:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v169] --> [[ConstantKey:axis:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:axis:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:axis:<PythonLoader,Lstring>],<field 0>] --> [[ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:columns:<PythonLoader,Lstring>]]
[[ConstantKey:axis:<PythonLoader,Lstring>]; [Core[Root]]] --> [[ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:columns:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v175] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v160] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v173] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v174] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@116 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@116 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v180] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@116 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v179] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@116 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v185] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v183] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v184] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v189] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@116 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v181] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@116 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v193] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v188] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v194] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v198] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v199] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v182] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v197] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v202] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v205] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v206] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v207] --> [[ConstantKey:prefix:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:prefix:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:prefix:<PythonLoader,Lstring>],<field 0>] --> [[ConstantKey:Gender:<PythonLoader,Lstring>]]
[[ConstantKey:prefix:<PythonLoader,Lstring>]; [Core[Root]]] --> [[ConstantKey:Gender:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v208] --> [[ConstantKey:drop_first:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:drop_first:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:drop_first:<PythonLoader,Lstring>],<field 0>] --> [[ConstantKey:true:<PythonLoader,LRoot>]]
[[ConstantKey:drop_first:<PythonLoader,Lstring>]; [Core[Root]]] --> [[ConstantKey:true:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v211] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v212] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v213] --> [SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@145 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}]
[catalog of SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@145 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}] --> [[ConstantKey:0:<PythonLoader,LRoot>], [ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:2:<PythonLoader,LRoot>], [ConstantKey:3:<PythonLoader,LRoot>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@145 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]},<field 0>] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v204] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ]}]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@145 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}; [Core[Root]]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ]}, SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ]}, SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v215] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v214] --> [[ConstantKey:1:<PythonLoader,LRoot>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@145 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]},<field 1>] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v216] --> [[ConstantKey:2:<PythonLoader,LRoot>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@145 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]},<field 2>] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v218] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v217] --> [[ConstantKey:3:<PythonLoader,LRoot>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@145 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]},<field 3>] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v222] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v210] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v225] --> [SITE_IN_NODE{synthetic < PythonLoader, Lseaborn, import()Lseaborn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v230] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v234] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@4b7d6b27]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v235] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@161 ], v1] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@4b7d6b27]]
[Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@161 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@161 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v232] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v233] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v231] --> [[ConstantKey:null]]
[Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@163 ], v1] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@633d2d71]]
[Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@163 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@163 ], v3] --> [[ConstantKey:null]]
[Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@163 ], v4] --> []
[Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@163 ], v5] --> [[ConstantKey:null]]
[Ret-V:Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@163 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v229] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v227] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v228] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v240] --> [[ConstantKey:RdYlGn:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v239] --> [[ConstantKey:cmap:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:cmap:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:cmap:<PythonLoader,Lstring>],<field 0>] --> [[ConstantKey:RdYlGn:<PythonLoader,Lstring>]]
[[ConstantKey:cmap:<PythonLoader,Lstring>]; [Core[Root]]] --> [[ConstantKey:RdYlGn:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v243] --> [SITE_IN_NODE{synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v52] --> [SITE_IN_NODE{synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v247] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v242] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v248] --> [[ConstantKey:10:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v249] --> [[ConstantKey:8:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v252] --> [SITE_IN_NODE{synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v256] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v255] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v257] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v254] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v258] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@181 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@181 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v260] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@181 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v259] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@181 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@183 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@183 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v264] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@183 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v263] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@183 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v265] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@183 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v262] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@183 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@186 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@186 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v268] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@186 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v267] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@186 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v269] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@186 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v266] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@186 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@189 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@189 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v272] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@189 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v271] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@189 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v273] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@189 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v270] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@189 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v275] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v274] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v279] --> [[ConstantKey:0.3:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v278] --> [[ConstantKey:test_size:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:test_size:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:test_size:<PythonLoader,Lstring>],<field 0>] --> [[ConstantKey:0.3:<PythonLoader,LRoot>]]
[[ConstantKey:test_size:<PythonLoader,Lstring>]; [Core[Root]]] --> [[ConstantKey:0.3:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v281] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v280] --> [[ConstantKey:random_state:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:random_state:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:random_state:<PythonLoader,Lstring>],<field 0>] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:random_state:<PythonLoader,Lstring>]; [Core[Root]]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v283] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v282] --> [[ConstantKey:stratify:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:stratify:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:stratify:<PythonLoader,Lstring>],<field 0>] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[[ConstantKey:stratify:<PythonLoader,Lstring>]; [Core[Root]]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v277] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v291] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v286] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v294] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@4b7d6b27]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v295] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@206 ], v1] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@4b7d6b27]]
[Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@206 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@206 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v292] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v293] --> []
[Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@208 ], v1] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@633d2d71]]
[Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@208 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@208 ], v3] --> [[ConstantKey:null]]
[Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@208 ], v4] --> []
[Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@208 ], v5] --> [[ConstantKey:null]]
[Ret-V:Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@208 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v290] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v301] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v288] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v304] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@4b7d6b27]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v305] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@214 ], v1] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@4b7d6b27]]
[Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@214 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@214 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v302] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v303] --> []
[Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@216 ], v1] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@633d2d71]]
[Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@216 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@216 ], v3] --> [[ConstantKey:null]]
[Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@216 ], v4] --> []
[Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@216 ], v5] --> [[ConstantKey:null]]
[Ret-V:Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@216 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v299] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v300] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v309] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v311] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v313] --> [SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@223 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v314] --> [[ConstantKey:rbf:<PythonLoader,Lstring>]]
[catalog of SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@223 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}] --> [[ConstantKey:0:<PythonLoader,LRoot>], [ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:2:<PythonLoader,LRoot>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@223 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]},<field 0>] --> [[ConstantKey:rbf:<PythonLoader,Lstring>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@223 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}; [Core[Root]]] --> [[ConstantKey:rbf:<PythonLoader,Lstring>], [ConstantKey:linear:<PythonLoader,Lstring>], [ConstantKey:sigmoid:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v315] --> [[ConstantKey:linear:<PythonLoader,Lstring>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@223 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]},<field 1>] --> [[ConstantKey:linear:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v316] --> [[ConstantKey:sigmoid:<PythonLoader,Lstring>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@223 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]},<field 2>] --> [[ConstantKey:sigmoid:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v321] --> [[ConstantKey:0:<PythonLoader,LRoot>], [ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:2:<PythonLoader,LRoot>], [ConstantKey:rbf:<PythonLoader,Lstring>], [ConstantKey:linear:<PythonLoader,Lstring>], [ConstantKey:sigmoid:<PythonLoader,Lstring>]]
[<field global i>] --> [[ConstantKey:0:<PythonLoader,LRoot>], [ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:2:<PythonLoader,LRoot>], [ConstantKey:rbf:<PythonLoader,Lstring>], [ConstantKey:linear:<PythonLoader,Lstring>], [ConstantKey:sigmoid:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v319] --> [[ConstantKey:0:<PythonLoader,LRoot>], [ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:2:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v322] --> [[ConstantKey:0:<PythonLoader,LRoot>], [ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:2:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v323] --> [[ConstantKey:0:<PythonLoader,LRoot>], [ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:2:<PythonLoader,LRoot>], [ConstantKey:rbf:<PythonLoader,Lstring>], [ConstantKey:linear:<PythonLoader,Lstring>], [ConstantKey:sigmoid:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v324] --> [[ConstantKey:0:<PythonLoader,LRoot>], [ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:2:<PythonLoader,LRoot>], [ConstantKey:rbf:<PythonLoader,Lstring>], [ConstantKey:linear:<PythonLoader,Lstring>], [ConstantKey:sigmoid:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v326] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@181 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v261] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@181 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v328] --> [[ConstantKey:0:<PythonLoader,LRoot>], [ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:2:<PythonLoader,LRoot>], [ConstantKey:rbf:<PythonLoader,Lstring>], [ConstantKey:linear:<PythonLoader,Lstring>], [ConstantKey:sigmoid:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v327] --> [[ConstantKey:kernel:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:kernel:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:kernel:<PythonLoader,Lstring>],<field 0>] --> [[ConstantKey:0:<PythonLoader,LRoot>], [ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:2:<PythonLoader,LRoot>], [ConstantKey:rbf:<PythonLoader,Lstring>], [ConstantKey:linear:<PythonLoader,Lstring>], [ConstantKey:sigmoid:<PythonLoader,Lstring>]]
[[ConstantKey:kernel:<PythonLoader,Lstring>]; [Core[Root]]] --> [[ConstantKey:0:<PythonLoader,LRoot>], [ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:2:<PythonLoader,LRoot>], [ConstantKey:rbf:<PythonLoader,Lstring>], [ConstantKey:linear:<PythonLoader,Lstring>], [ConstantKey:sigmoid:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v332] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v325] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v335] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v340] --> [[ConstantKey:0:<PythonLoader,LRoot>], [ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:2:<PythonLoader,LRoot>], [ConstantKey:rbf:<PythonLoader,Lstring>], [ConstantKey:linear:<PythonLoader,Lstring>], [ConstantKey:sigmoid:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v343] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v276] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v339] --> [[ConstantKey:Accuracy for SVM kernel =:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v341] --> [[ConstantKey:is:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v348] --> [[ConstantKey:0:<PythonLoader,LRoot>], [ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:2:<PythonLoader,LRoot>], [ConstantKey:rbf:<PythonLoader,Lstring>], [ConstantKey:linear:<PythonLoader,Lstring>], [ConstantKey:sigmoid:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v351] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v347] --> [[ConstantKey:F1 score for SVM kernel =:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v349] --> [[ConstantKey: is :<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v359] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v356] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v362] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v367] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v365] --> [[ConstantKey:The accuracy of the Logistic Regression is:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v373] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v371] --> [[ConstantKey:The F1 score of the Logistic Regression is:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v379] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v376] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v382] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v387] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v385] --> [[ConstantKey:The accuracy of the Decision Tree is:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v393] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v391] --> [[ConstantKey:The F1 score of the Decision Tree is:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v397] --> [[ConstantKey:n_estimators:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:n_estimators:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:n_estimators:<PythonLoader,Lstring>],<field 0>] --> [[ConstantKey:100:<PythonLoader,LRoot>]]
[[ConstantKey:n_estimators:<PythonLoader,Lstring>]; [Core[Root]]] --> [[ConstantKey:100:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v400] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v396] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v403] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v408] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v406] --> [[ConstantKey:The accuracy of the Random Forest is:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v414] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v412] --> [[ConstantKey:The F1 score of the Random Forest is:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v421] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v422] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v423] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v425] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v289] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v424] --> [[ConstantKey:index:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:index:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:index:<PythonLoader,Lstring>],<field 0>] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[[ConstantKey:index:<PythonLoader,Lstring>]; [Core[Root]]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v419] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v420] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v427] --> [[ConstantKey:ascending:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:ascending:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:ascending:<PythonLoader,Lstring>],<field 0>] --> [[ConstantKey:false:<PythonLoader,LRoot>]]
[[ConstantKey:ascending:<PythonLoader,Lstring>]; [Core[Root]]] --> [[ConstantKey:false:<PythonLoader,LRoot>]]
[Exc-Ret-V:Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]] --> [[Core[Exception]]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v48] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v68] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v75] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v80] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v86] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v92] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v95] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v104] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v105] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v108] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v115] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v125] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v126] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v127] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v134] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v147] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v148] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v154] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v159] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v165] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v168] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v171] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v176] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v177] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v186] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v190] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v195] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v200] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v209] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v219] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v223] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v236] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v237] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v238] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v241] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v244] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v250] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v253] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v284] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v296] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v297] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v306] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v307] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v329] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v333] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v336] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v344] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v345] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v352] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v353] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v357] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v360] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v363] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v368] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v369] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v374] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v375] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v377] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v380] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v383] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v388] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v389] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v394] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v395] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v398] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v401] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v404] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v409] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v410] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v415] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v416] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v426] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v428] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v429] --> []
[Node: synthetic < PythonLoader, L__name__, import()L__name__; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@13 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, L__name__, import()L__name__; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@13 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, L__name__, import()L__name__; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@13 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, L__name__, import()L__name__; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@13 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, L__name__, import()L__name__; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@13 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lprint, import()Lprint; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lprint, import()Lprint; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lprint, import()Lprint; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lprint, import()Lprint; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lprint, import()Lprint; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lsuper, import()Lsuper; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@15 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsuper, import()Lsuper; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@15 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lsuper, import()Lsuper; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@15 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsuper, import()Lsuper; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@15 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lsuper, import()Lsuper; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@15 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lopen, import()Lopen; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@16 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lopen, import()Lopen; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@16 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lopen, import()Lopen; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@16 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lopen, import()Lopen; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@16 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lopen, import()Lopen; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@16 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lhasattr, import()Lhasattr; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@17 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lhasattr, import()Lhasattr; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@17 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lhasattr, import()Lhasattr; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@17 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lhasattr, import()Lhasattr; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@17 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lhasattr, import()Lhasattr; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@17 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, LBaseException, import()LBaseException; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@18 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, LBaseException, import()LBaseException; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@18 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, LBaseException, import()LBaseException; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@18 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, LBaseException, import()LBaseException; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@18 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, LBaseException, import()LBaseException; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@18 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Labs, import()Labs; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@19 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Labs, import()Labs; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@19 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Labs, import()Labs; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@19 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Labs, import()Labs; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@19 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Labs, import()Labs; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@19 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Ldel, import()Ldel; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@20 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Ldel, import()Ldel; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@20 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Ldel, import()Ldel; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@20 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Ldel, import()Ldel; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@20 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Ldel, import()Ldel; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@20 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, LIPython, import()LIPython; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@21 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, LIPython, import()LIPython; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@21 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, LIPython, import()LIPython; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@21 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, LIPython, import()LIPython; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@21 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, LIPython, import()LIPython; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@21 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lpandas, import()Lpandas; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lseaborn, import()Lseaborn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lseaborn, import()Lseaborn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lseaborn, import()Lseaborn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lseaborn, import()Lseaborn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lseaborn, import()Lseaborn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v6] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v4] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v5] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v16] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v14] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v15] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v12] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v13] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v21] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@4b7d6b27]]
[Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@11 ], v1] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@4b7d6b27]]
[Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@11 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >:NEW <PythonLoader,Lturtle>@4 in Everywhere}, SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@11 ]] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v11] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v19] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v25] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v27] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v28] --> [SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Llist>@16 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v29] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[catalog of SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Llist>@16 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]}] --> [[ConstantKey:0:<PythonLoader,LRoot>], [ConstantKey:1:<PythonLoader,LRoot>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Llist>@16 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]},<field 0>] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v3] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]}]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Llist>@16 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]}; [Core[Root]]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]}, SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v30] --> [[ConstantKey:1:<PythonLoader,LRoot>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Llist>@16 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]},<field 1>] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v32] --> [[ConstantKey:1:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v31] --> [[ConstantKey:axis:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v36] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v24] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v38] --> [SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Ldict>@23 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v40] --> [[ConstantKey:Missing Values:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v39] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[catalog of SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Ldict>@23 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]}] --> [[ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:0:<PythonLoader,LRoot>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Ldict>@23 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]},<field 0>] --> [[ConstantKey:Missing Values:<PythonLoader,Lstring>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Ldict>@23 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]}; [Core[Root]]] --> [[ConstantKey:Missing Values:<PythonLoader,Lstring>], [ConstantKey:% of Total Values:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v41] --> [[ConstantKey:% of Total Values:<PythonLoader,Lstring>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Ldict>@23 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]},<field 1>] --> [[ConstantKey:% of Total Values:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v37] --> [[ConstantKey:columns:<PythonLoader,Lstring>]]
[catalog of [ConstantKey:columns:<PythonLoader,Lstring>]] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[[ConstantKey:columns:<PythonLoader,Lstring>],<field 0>] --> [SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Ldict>@23 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]}, SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Ldict>@23 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]}]
[[ConstantKey:columns:<PythonLoader,Lstring>]; [Core[Root]]] --> [SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Ldict>@23 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]}, SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Ldict>@23 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v35] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]}]
[Exc-Ret-V:Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]] --> [[Core[Exception]]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v7] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v8] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v17] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v18] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v22] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v33] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ], v42] --> []
[Node: synthetic < PythonLoader, Lwala/builtin/sum, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@65 ], v11] --> []
[Node: synthetic < PythonLoader, Lwala/builtin/sum, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@81 ], v11] --> []
[Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@116 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@116 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@116 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@116 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@116 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@161 ], v11] --> []
[Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@181 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@181 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@181 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@181 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@181 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@183 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@183 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@183 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@183 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@183 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@186 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@186 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@186 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@186 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@186 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@189 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@189 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@189 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@189 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@189 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@206 ], v11] --> []
[Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@214 ], v11] --> []
[Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@11 ], v11] --> []
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@223 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]},<field rbf>] --> []
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@223 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]},<field linear>] --> []
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@223 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]},<field sigmoid>] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@296 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@296 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v402] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v413] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@296 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@296 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@296 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@268 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@268 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v361] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v372] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@268 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@268 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@268 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@250 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@250 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v334] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v342] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@250 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@250 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@250 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@293 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@293 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v407] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@293 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@293 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@293 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@281 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@281 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v381] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v392] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@281 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@281 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@281 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@278 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@278 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v386] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@278 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@278 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@278 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@265 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@265 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v366] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@265 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@265 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@265 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@254 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@254 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v350] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@254 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@254 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@254 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@183 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@181 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@186 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@189 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lsklearn, import()Lsklearn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@116 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@176 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v251] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@176 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@176 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@176 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@24 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, LIPython, import()LIPython; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@21 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@24 ], v2] --> [[ConstantKey:<script>
code_show=true;
function code_toggle() {
 if (code_show){
 $('div.input').hide();
 } else {
 $('div.input').show();
 }
 code_show = !code_show
}
$( document ).ready(code_toggle);
</script>
<form action="javascript:code_toggle()"><input type="submit" value="Toggle on/off the raw code."></form>:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v46] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@24 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@24 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@24 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ], v2] --> [SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Llist>@16 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]}, SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Llist>@16 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ], v2] --> [SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@145 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v192] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v162] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ], v2] --> [[ConstantKey:../input/indian_liver_patient.csv:<PythonLoader,Lstring>]]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@307 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lprint, import()Lprint; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@307 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v418] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v417] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@307 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@307 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@307 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@297 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lprint, import()Lprint; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@297 ], v2] --> [[ConstantKey:The F1 score of the Random Forest is:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v411] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@297 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@297 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@297 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@294 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lprint, import()Lprint; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@294 ], v2] --> [[ConstantKey:The accuracy of the Random Forest is:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v405] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@294 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@294 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@294 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@282 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lprint, import()Lprint; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@282 ], v2] --> [[ConstantKey:The F1 score of the Decision Tree is:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v390] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@282 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@282 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@282 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@279 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lprint, import()Lprint; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@279 ], v2] --> [[ConstantKey:The accuracy of the Decision Tree is:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v384] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@279 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@279 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@279 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@269 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lprint, import()Lprint; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@269 ], v2] --> [[ConstantKey:The F1 score of the Logistic Regression is:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v370] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@269 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@269 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@269 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@266 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lprint, import()Lprint; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@266 ], v2] --> [[ConstantKey:The accuracy of the Logistic Regression is:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v364] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@266 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@266 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@266 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@255 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lprint, import()Lprint; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@255 ], v2] --> [[ConstantKey:F1 score for SVM kernel =:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v346] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@255 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@255 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@255 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@251 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lprint, import()Lprint; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@251 ], v2] --> [[ConstantKey:Accuracy for SVM kernel =:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v338] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@251 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@251 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@251 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@169 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lseaborn, import()Lseaborn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@169 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v226] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v224] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@169 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@169 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@169 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@102 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lseaborn, import()Lseaborn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@102 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v150] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v156] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@102 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@102 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@102 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@34 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lseaborn, import()Lseaborn; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v59] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@34 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@34 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@34 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v1] --> [SMIK:SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Lscript indian-liver-disease-modeling.py/missing_values_table>@42 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}@creator:Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]]
[Node: synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V > Context: Everywhere, v8] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]}]
[Ret-V:Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@296 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@296 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@296 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@296 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@296 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@296 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@296 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@268 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@268 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@268 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@268 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@268 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@268 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@268 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@250 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@250 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@250 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@250 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@250 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@250 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@250 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@293 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@293 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@293 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@293 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@293 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@293 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@293 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@281 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@281 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@281 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@281 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@281 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@281 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@281 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@278 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@278 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@278 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@278 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@278 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@278 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@278 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@265 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@265 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@265 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@265 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@265 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@265 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@265 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@254 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@254 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@254 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@254 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@254 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@254 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@254 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@176 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@176 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@176 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@176 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@176 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@176 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@176 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@176 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@24 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@24 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@24 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@24 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@24 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@24 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@24 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ]}, SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>], [ConstantKey:columns:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@307 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@307 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@307 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@307 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@307 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@307 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@307 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@297 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@297 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@297 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@297 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@297 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@297 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@297 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@294 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@294 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@294 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@294 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@294 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@294 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@294 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@282 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@282 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@282 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@282 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@282 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@282 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@282 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@279 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@279 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@279 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@279 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@279 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@279 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@279 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@269 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@269 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@269 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@269 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@269 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@269 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@269 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@266 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@266 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@266 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@266 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@266 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@266 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@266 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@255 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@255 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@255 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@255 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@255 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@255 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@255 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@251 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@251 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@251 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@251 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@251 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@251 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@251 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@169 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@169 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@169 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@169 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@169 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@169 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@169 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@102 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@102 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@102 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@102 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@102 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@102 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@102 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@34 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@34 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@34 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@34 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@34 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@34 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@34 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@34 ], v12] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v6] --> [SITE_IN_NODE{synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >:NEW <PythonLoader,Lturtle>@4 in Everywhere}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >:NEW <PythonLoader,Lturtle>@4 in Everywhere}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >:NEW <PythonLoader,Lturtle>@4 in Everywhere}, SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v4] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v5] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v16] --> [SITE_IN_NODE{synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >:NEW <PythonLoader,Lturtle>@4 in Everywhere}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V >:NEW <PythonLoader,Lturtle>@4 in Everywhere}, SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v14] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v15] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v12] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v13] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v21] --> [[com.ibm.wala.cast.python.ipa.summaries.BuiltinFunctions$BuiltinFunction@4b7d6b27]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v11] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v19] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v25] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v27] --> [SITE_IN_NODE{synthetic < PythonLoader, Lpandas, import()Lpandas; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v28] --> [SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Llist>@16 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v29] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[catalog of SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Llist>@16 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]}] --> [[ConstantKey:0:<PythonLoader,LRoot>], [ConstantKey:1:<PythonLoader,LRoot>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Llist>@16 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]},<field 0>] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v3] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]}]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Llist>@16 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]}; [Core[Root]]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]}, SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v30] --> [[ConstantKey:1:<PythonLoader,LRoot>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Llist>@16 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]},<field 1>] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v32] --> [[ConstantKey:1:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v31] --> [[ConstantKey:axis:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v36] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v24] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v38] --> [SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Ldict>@23 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v40] --> [[ConstantKey:Missing Values:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v39] --> [[ConstantKey:0:<PythonLoader,LRoot>]]
[catalog of SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Ldict>@23 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]}] --> [[ConstantKey:1:<PythonLoader,LRoot>], [ConstantKey:0:<PythonLoader,LRoot>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Ldict>@23 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]},<field 0>] --> [[ConstantKey:Missing Values:<PythonLoader,Lstring>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Ldict>@23 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]}; [Core[Root]]] --> [[ConstantKey:Missing Values:<PythonLoader,Lstring>], [ConstantKey:% of Total Values:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v41] --> [[ConstantKey:% of Total Values:<PythonLoader,Lstring>]]
[SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table>:NEW <PythonLoader,Ldict>@23 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]},<field 1>] --> [[ConstantKey:% of Total Values:<PythonLoader,Lstring>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v37] --> [[ConstantKey:columns:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v35] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]}]
[Exc-Ret-V:Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]] --> [[Core[Exception]]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v7] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v8] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v17] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v18] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v22] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v33] --> []
[Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ], v42] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@273 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@273 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v378] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@273 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@273 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@273 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@244 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@244 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v331] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@244 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@244 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@244 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}; [com.ibm.wala.codeBreaker.turtle.TurtleSummary$3@5972bfde]] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@288 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@288 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v399] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@288 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@288 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@288 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@260 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@260 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v358] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@260 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@260 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@260 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@156 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@156 ], v2] --> [[ConstantKey:2:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v221] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@156 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@156 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@156 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}; [com.ibm.wala.codeBreaker.turtle.TurtleSummary$3@5972bfde]] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@108 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v166] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@108 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@108 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@108 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@52 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v93] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@52 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@52 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@52 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@41 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@41 ], v2] --> [[ConstantKey:2:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v77] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@41 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@41 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@41 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ], v2] --> [SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@70 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}; [com.ibm.wala.codeBreaker.turtle.TurtleSummary$3@5972bfde]] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ], v2] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ], v2] --> [SITE_IN_NODE{<Code body of function Lscript indian-liver-disease-modeling.py>:NEW <PythonLoader,Llist>@54 in CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@174 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@174 ], v2] --> [[ConstantKey:10:<PythonLoader,LRoot>]]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v246] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@174 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@174 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@174 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@273 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@273 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@273 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@273 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@273 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@273 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@273 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@244 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@244 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@244 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@244 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@244 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@244 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@244 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@288 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@288 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@288 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@288 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@288 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@288 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@288 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@260 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@260 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@260 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@260 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@260 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@260 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@260 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@156 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@156 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@156 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@156 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@156 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@156 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@156 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@108 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@108 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@108 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@108 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@108 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@108 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@108 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@108 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@52 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@52 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@52 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@52 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@52 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@52 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@52 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@52 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@41 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@41 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@41 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@41 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@41 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@41 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@41 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@174 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@174 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@174 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@174 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@174 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@174 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@174 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@115 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ]}]
[Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ], v172] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@115 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@115 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@115 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ], v1] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ]}]
[Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]}]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>], [ConstantKey:Text:<PythonLoader,Lstring>], [ConstantKey:Percent:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@115 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@115 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@115 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@115 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@115 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@115 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@115 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@115 ], v12] --> []
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ], v10] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]}]
[SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]},com.ibm.wala.codeBreaker.turtle.TurtleSummary$2@64920478] --> [SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]}]
[catalog of SITE_IN_NODE{synthetic < PythonLoader, Lturtle, turtle()LRoot; >:NEW <PythonLoader,Lturtle>@0 in CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]}] --> [[ConstantKey:turtle:<PythonLoader,Lstring>], [ConstantKey:Percent:<PythonLoader,Lstring>]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ], v2] --> []
[Exc-Ret-V:Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]] --> [[Core[Exception]]]
[Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ], v12] --> []
Node: synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeRootMethod()V > Context: Everywhere
 - invokestatic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeWorldClinit()V >@0
     -> Node: synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeWorldClinit()V > Context: Everywhere
 - JSCall@2
     -> Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]
 - JSCall@6
     -> Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]

Node: synthetic < PythonLoader, Lcom/ibm/wala/FakeRootClass, fakeWorldClinit()V > Context: Everywhere

Node: <Code body of function Lscript indian-liver-disease-modeling.py> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@2 ]
 - invokestatic < PythonLoader, L__name__, import()L__name__; >@13
     -> Node: synthetic < PythonLoader, L__name__, import()L__name__; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@13 ]
 - invokestatic < PythonLoader, Lprint, import()Lprint; >@14
     -> Node: synthetic < PythonLoader, Lprint, import()Lprint; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]
 - invokestatic < PythonLoader, Lsuper, import()Lsuper; >@15
     -> Node: synthetic < PythonLoader, Lsuper, import()Lsuper; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@15 ]
 - invokestatic < PythonLoader, Lopen, import()Lopen; >@16
     -> Node: synthetic < PythonLoader, Lopen, import()Lopen; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@16 ]
 - invokestatic < PythonLoader, Lhasattr, import()Lhasattr; >@17
     -> Node: synthetic < PythonLoader, Lhasattr, import()Lhasattr; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@17 ]
 - invokestatic < PythonLoader, LBaseException, import()LBaseException; >@18
     -> Node: synthetic < PythonLoader, LBaseException, import()LBaseException; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@18 ]
 - invokestatic < PythonLoader, Labs, import()Labs; >@19
     -> Node: synthetic < PythonLoader, Labs, import()Labs; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@19 ]
 - invokestatic < PythonLoader, Ldel, import()Ldel; >@20
     -> Node: synthetic < PythonLoader, Ldel, import()Ldel; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@20 ]
 - invokestatic < PythonLoader, LIPython, import()LIPython; >@21
     -> Node: synthetic < PythonLoader, LIPython, import()LIPython; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@21 ]
 - JSCall@24
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@24 ]
 - invokestatic < PythonLoader, Lpandas, import()Lpandas; >@25
     -> Node: synthetic < PythonLoader, Lpandas, import()Lpandas; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]
 - invokestatic < PythonLoader, Lmatplotlib, import()Lmatplotlib; >@27
     -> Node: synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]
 - invokestatic < PythonLoader, Lseaborn, import()Lseaborn; >@29
     -> Node: synthetic < PythonLoader, Lseaborn, import()Lseaborn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]
 - JSCall@34
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@34 ]
 - JSCall@38
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]
 - JSCall@41
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@41 ]
 - JSCall@45
     -> Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]
 - JSCall@49
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ]
 - JSCall@52
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@52 ]
 - JSCall@56
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ]
 - JSCall@58
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ]
 - JSCall@61
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]
 - JSCall@65
     -> Node: synthetic < PythonLoader, Lwala/builtin/sum, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@65 ]
 - JSCall@72
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ]
 - JSCall@74
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ]
 - JSCall@77
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]
 - JSCall@81
     -> Node: synthetic < PythonLoader, Lwala/builtin/sum, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@81 ]
 - JSCall@98
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ]
 - JSCall@102
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@102 ]
 - JSCall@106
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ]
 - JSCall@108
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@108 ]
 - JSCall@110
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]
 - JSCall@113
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ]
 - JSCall@115
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@115 ]
 - invokestatic < PythonLoader, Lsklearn, import()Lsklearn; >@116
     -> Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@116 ]
 - JSCall@121
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ]
 - JSCall@124
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ]
 - JSCall@128
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ]
 - JSCall@132
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ]
 - JSCall@141
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ]
 - JSCall@153
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]
 - JSCall@156
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@156 ]
 - JSCall@161
     -> Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@161 ]
 - JSCall@163
     -> Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@163 ]
 - JSCall@166
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ]
 - JSCall@169
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@169 ]
 - JSCall@171
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ]
 - JSCall@174
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@174 ]
 - JSCall@176
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@176 ]
 - invokestatic < PythonLoader, Lsklearn, import()Lsklearn; >@177
     -> Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ]
 - invokestatic < PythonLoader, Lsklearn, import()Lsklearn; >@181
     -> Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@181 ]
 - invokestatic < PythonLoader, Lsklearn, import()Lsklearn; >@183
     -> Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@183 ]
 - invokestatic < PythonLoader, Lsklearn, import()Lsklearn; >@186
     -> Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@186 ]
 - invokestatic < PythonLoader, Lsklearn, import()Lsklearn; >@189
     -> Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@189 ]
 - invokestatic < PythonLoader, Lsklearn, import()Lsklearn; >@192
     -> Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]
 - JSCall@198
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]
 - JSCall@206
     -> Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@206 ]
 - JSCall@208
     -> Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@208 ]
 - JSCall@214
     -> Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@214 ]
 - JSCall@216
     -> Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@216 ]
 - JSCall@241
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ]
 - JSCall@244
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@244 ]
 - JSCall@246
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ]
 - JSCall@250
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@250 ]
 - JSCall@251
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@251 ]
 - JSCall@254
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@254 ]
 - JSCall@255
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@255 ]
 - JSCall@257
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ]
 - JSCall@260
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@260 ]
 - JSCall@262
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ]
 - JSCall@265
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@265 ]
 - JSCall@266
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@266 ]
 - JSCall@268
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@268 ]
 - JSCall@269
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@269 ]
 - JSCall@270
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ]
 - JSCall@273
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@273 ]
 - JSCall@275
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ]
 - JSCall@278
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@278 ]
 - JSCall@279
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@279 ]
 - JSCall@281
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@281 ]
 - JSCall@282
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@282 ]
 - JSCall@285
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]
 - JSCall@288
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@288 ]
 - JSCall@290
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ]
 - JSCall@293
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@293 ]
 - JSCall@294
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@294 ]
 - JSCall@296
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@296 ]
 - JSCall@297
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@297 ]
 - JSCall@303
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ]
 - JSCall@306
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ]
 - JSCall@307
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@307 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@74 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@113 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@121 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@58 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@77 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@115 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@61 ]

Node: synthetic < PythonLoader, L__name__, import()L__name__; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@13 ]

Node: synthetic < PythonLoader, Lprint, import()Lprint; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@14 ]

Node: synthetic < PythonLoader, Lsuper, import()Lsuper; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@15 ]

Node: synthetic < PythonLoader, Lopen, import()Lopen; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@16 ]

Node: synthetic < PythonLoader, Lhasattr, import()Lhasattr; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@17 ]

Node: synthetic < PythonLoader, LBaseException, import()LBaseException; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@18 ]

Node: synthetic < PythonLoader, Labs, import()Labs; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@19 ]

Node: synthetic < PythonLoader, Ldel, import()Ldel; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@20 ]

Node: synthetic < PythonLoader, LIPython, import()LIPython; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@21 ]

Node: synthetic < PythonLoader, Lpandas, import()Lpandas; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@25 ]

Node: synthetic < PythonLoader, Lmatplotlib, import()Lmatplotlib; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@27 ]

Node: synthetic < PythonLoader, Lseaborn, import()Lseaborn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@29 ]

Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@45 ]
 - JSCall@1
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]
 - JSCall@3
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]
 - JSCall@6
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]
 - JSCall@8
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]
 - JSCall@11
     -> Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@11 ]
 - JSCall@20
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]
 - JSCall@27
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]

Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@11 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]

Node: synthetic < PythonLoader, Lwala/builtin/sum, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@65 ]

Node: synthetic < PythonLoader, Lwala/builtin/sum, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@81 ]

Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@116 ]

Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@161 ]

Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@163 ]

Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@177 ]

Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@181 ]

Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@183 ]

Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@186 ]

Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@189 ]

Node: synthetic < PythonLoader, Lsklearn, import()Lsklearn; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@192 ]

Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@206 ]

Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@208 ]

Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@214 ]

Node: synthetic < PythonLoader, Lwala/builtin/slice, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@216 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@296 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@268 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@250 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@293 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@281 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@278 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@265 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@254 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@270 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@198 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@241 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@257 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@285 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@124 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@176 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@171 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@24 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@141 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@153 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@132 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@106 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@303 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@38 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@307 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@297 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@294 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@282 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@279 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@269 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@266 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@255 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@251 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@169 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@102 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@34 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@275 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@273 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@246 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@244 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@128 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@288 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@290 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@262 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@260 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@156 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@306 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@108 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@52 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@49 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@41 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@72 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@110 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@56 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@174 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@166 ]

Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.do()LRoot;@98 ]

Node: <Code body of function Lscript indian-liver-disease-modeling.py/missing_values_table> Context: CallStringContext: [ com.ibm.wala.FakeRootClass.fakeRootMethod()V@6 ]
 - JSCall@1
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@1 ]
 - JSCall@3
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@3 ]
 - JSCall@6
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@6 ]
 - JSCall@8
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@8 ]
 - JSCall@11
     -> Node: synthetic < PythonLoader, Lwala/builtin/len, do()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@11 ]
 - JSCall@20
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@20 ]
 - JSCall@27
     -> Node: synthetic < PythonLoader, Lturtle, turtle()LRoot; > Context: CallStringContext: [ script indian-liver-disease-modeling.py.missing_values_table.do()LRoot;@27 ]


writing to /tmp/json/test_indian-liver-disease-modeling
[{"is_import":false,"args":[[["IPython"]]],"path":["display","IPython"],"node":2,"named":{},"vn":41,"reads":{"display":[1]},"edges":{"DATA":[[[2],0]],"CONTROL":[2]},"nodeNumber":0,"expr":"indian-liver-disease-modeling.py [22:13] -> [22:20]","source":"display","writes":{}},{"is_import":true,"args":[],"path":["IPython"],"node":2,"named":{},"vn":43,"reads":{},"edges":{"DATA":[[[0],0]],"CONTROL":[0]},"nodeNumber":1,"expr":"indian-liver-disease-modeling.py [22:5] -> [22:12]","source":"IPython","writes":{}},{"is_import":false,"args":[[["IPython"]]],"path":["HTML","display","IPython"],"node":2,"named":{},"vn":45,"reads":{"HTML":[1]},"edges":{"DATA":[[[3],0]],"CONTROL":[3]},"nodeNumber":2,"expr":"indian-liver-disease-modeling.py [1:0] -> [1:0]","source":"#!/usr/bin/env python\n# coding: utf-8","writes":{}},{"is_import":false,"args":[[["IPython"]],"<script>\ncode_show=true;\nfunction code_toggle() {\n if (code_show){\n $('div.input').hide();\n } else {\n $('div.input').show();\n }\n code_show = !code_show\n}\n$( document ).ready(code_toggle);\n<\/script>\n<form action=\"javascript:code_toggle()\"><input type=\"submit\" value=\"Toggle on/off the raw code.\"><\/form>"],"path":["HTML","display","IPython"],"node":2,"named":{},"vn":46,"reads":{},"edges":{"CONTROL":[4,15,173,175,176,178,179,185]},"nodeNumber":3,"expr":"indian-liver-disease-modeling.py [24:0] -> [36:108]","source":"\n\nHTML('''<script>\ncode_show=true;\nfunction code_toggle() {\n if (code_show){\n $('div.input').hide();\n } else {\n $('div.input').show();\n }\n code_show = !code_show\n}\n$( document ).ready(code_toggle);\n<\/script>\n<form action=\"javascript:code_toggle()\"><input type=\"submit\" value=\"Toggle on/off the raw code.\"><\/form>''')","writes":{}},{"is_import":true,"args":[],"path":["pandas"],"node":2,"named":{},"vn":50,"reads":{},"edges":{"CONTROL":[6]},"nodeNumber":4,"expr":"indian-liver-disease-modeling.py [38:7] -> [38:13]","source":"pandas","writes":{}},{"is_import":false,"args":[[["matplotlib"]]],"path":["pyplot","matplotlib"],"node":2,"named":{},"vn":52,"reads":{"pyplot":[6]},"edges":{"DATA":[[[93,97],0]],"CONTROL":[7]},"nodeNumber":5,"expr":"indian-liver-disease-modeling.py [39:18] -> [39:24]","source":"pyplot","writes":{}},{"is_import":true,"args":[],"path":["matplotlib"],"node":2,"named":{},"vn":54,"reads":{},"edges":{"DATA":[[[5],0]],"CONTROL":[5]},"nodeNumber":6,"expr":"indian-liver-disease-modeling.py [39:7] -> [39:17]","source":"matplotlib","writes":{}},{"is_import":true,"args":[],"path":["seaborn"],"node":2,"named":{},"vn":57,"reads":{},"edges":{"DATA":[[[9,51,85],0]],"CONTROL":[9]},"nodeNumber":7,"expr":"indian-liver-disease-modeling.py [41:7] -> [41:14]","source":"seaborn","writes":{}},{"is_import":false,"args":[[["seaborn"]],"white","muted",[]],"path":["set","seaborn"],"node":2,"named":{"style":"white","palette":"muted","color_codes":[]},"vn":59,"reads":{},"edges":{"CONTROL":[11,15,173,175,176,178,179,185]},"nodeNumber":8,"expr":"indian-liver-disease-modeling.py [43:0] -> [43:57]","source":"\n\nsns.set(style=\"white\", palette=\"muted\", color_codes=True)","writes":{}},{"is_import":false,"args":[[["seaborn"]]],"path":["set","seaborn"],"node":2,"named":{},"vn":60,"reads":{"set":[7]},"edges":{"DATA":[[[8],0]],"CONTROL":[8]},"nodeNumber":9,"expr":"indian-liver-disease-modeling.py [43:0] -> [43:7]","source":"\n\nsns.set","writes":{}},{"is_import":false,"args":[[["pandas"]],"../input/indian_liver_patient.csv",[]],"path":["read_csv","pandas"],"node":2,"named":{"low_memory":[]},"vn":69,"reads":{},"edges":{"DATA":[[[13,15,18,20,26,36,48,49,53,57],0],[[54],1]],"CONTROL":[13,15,173,175,176,178,179,185]},"nodeNumber":10,"expr":"indian-liver-disease-modeling.py [52:7] -> [52:73]","source":"pd.read_csv(\"../input/indian_liver_patient.csv\", low_memory=False)","writes":{}},{"is_import":false,"args":[[["pandas"]]],"path":["read_csv","pandas"],"node":2,"named":{},"vn":70,"reads":{"read_csv":[4]},"edges":{"DATA":[[[10],0]],"CONTROL":[10]},"nodeNumber":11,"expr":"indian-liver-disease-modeling.py [52:7] -> [52:18]","source":"pd.read_csv","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]],2],"path":["head","read_csv","pandas"],"node":2,"named":{},"vn":77,"reads":{},"edges":{"CONTROL":[15,173,174,175,176,178,179,185]},"nodeNumber":12,"expr":"indian-liver-disease-modeling.py [53:0] -> [53:12]","source":"\n\ndata.head(2)","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["head","read_csv","pandas"],"node":2,"named":{},"vn":78,"reads":{"head":[10]},"edges":{"DATA":[[[12],0]],"CONTROL":[12]},"nodeNumber":13,"expr":"indian-liver-disease-modeling.py [53:0] -> [53:9]","source":"\n\ndata.head","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]],[["isnull","Albumin_and_Globulin_Ratio","read_csv","pandas"]]],"path":["loc","read_csv","pandas"],"node":2,"named":{},"vn":87,"reads":{},"edges":{},"nodeNumber":14,"expr":"indian-liver-disease-modeling.py [77:9] -> [77:43]","source":"data['Albumin_and_Globulin_Ratio']","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["loc","read_csv","pandas"],"node":2,"named":{},"vn":88,"reads":{"loc":[10]},"edges":{"DATA":[[[14],0]],"CONTROL":[18]},"nodeNumber":15,"expr":"indian-liver-disease-modeling.py [77:0] -> [77:8]","source":"\n\ndata.loc","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["isnull","Albumin_and_Globulin_Ratio","read_csv","pandas"],"node":2,"named":{},"vn":89,"reads":{},"edges":{"DATA":[[[14],1]],"CONTROL":[15,20,173,175,176,178,179,185]},"nodeNumber":16,"expr":"indian-liver-disease-modeling.py [77:9] -> [77:52]","source":"data['Albumin_and_Globulin_Ratio'].isnull()","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["isnull","Albumin_and_Globulin_Ratio","read_csv","pandas"],"node":2,"named":{},"vn":90,"reads":{"isnull":[10]},"edges":{"DATA":[[[16],0]],"CONTROL":[16]},"nodeNumber":17,"expr":"indian-liver-disease-modeling.py [77:9] -> [77:50]","source":"data['Albumin_and_Globulin_Ratio'].isnull","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["Albumin_and_Globulin_Ratio","read_csv","pandas"],"node":2,"named":{},"vn":91,"reads":{"Albumin_and_Globulin_Ratio":[10]},"edges":{"DATA":[[[17],0]],"CONTROL":[17]},"nodeNumber":18,"expr":"indian-liver-disease-modeling.py [77:9] -> [77:43]","source":"data['Albumin_and_Globulin_Ratio']","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["describe","read_csv","pandas"],"node":2,"named":{},"vn":93,"reads":{},"edges":{"CONTROL":[15,26,173,175,176,178,179,185]},"nodeNumber":19,"expr":"indian-liver-disease-modeling.py [84:0] -> [84:15]","source":"\n\ndata.describe()","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["describe","read_csv","pandas"],"node":2,"named":{},"vn":94,"reads":{"describe":[10]},"edges":{"DATA":[[[19],0]],"CONTROL":[19]},"nodeNumber":20,"expr":"indian-liver-disease-modeling.py [84:0] -> [84:13]","source":"\n\ndata.describe","writes":{}},{"is_import":false,"args":[[["size","groupby","read_csv","pandas"]],"Counts"],"path":["reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{"name":"Counts"},"vn":96,"reads":{},"edges":{"DATA":[[[29,30],0]],"CONTROL":[15,29,173,175,176,178,179,185]},"nodeNumber":21,"expr":"indian-liver-disease-modeling.py [91:9] -> [91:68]","source":"data.groupby(['Dataset']).size().reset_index(name='Counts')","writes":{}},{"is_import":false,"args":[[["size","groupby","read_csv","pandas"]]],"path":["reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":97,"reads":{"reset_index":[23]},"edges":{"DATA":[[[21],0]],"CONTROL":[21]},"nodeNumber":22,"expr":"indian-liver-disease-modeling.py [91:9] -> [91:53]","source":"data.groupby(['Dataset']).size().reset_index","writes":{}},{"is_import":false,"args":[[["groupby","read_csv","pandas"]]],"path":["size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":98,"reads":{},"edges":{"DATA":[[[22],0]],"CONTROL":[15,22,173,175,176,178,179,185]},"nodeNumber":23,"expr":"indian-liver-disease-modeling.py [91:9] -> [91:13]","source":"data","writes":{}},{"is_import":false,"args":[[["groupby","read_csv","pandas"]]],"path":["size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":99,"reads":{"size":[25]},"edges":{"DATA":[[[23],0]],"CONTROL":[23]},"nodeNumber":24,"expr":"indian-liver-disease-modeling.py [91:9] -> [91:39]","source":"data.groupby(['Dataset']).size","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]],{"0":"Dataset"}],"path":["groupby","read_csv","pandas"],"node":2,"named":{},"vn":100,"reads":{},"edges":{"DATA":[[[24],0]],"CONTROL":[15,24,173,175,176,178,179,185]},"nodeNumber":25,"expr":"indian-liver-disease-modeling.py [91:9] -> [91:13]","source":"data","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["groupby","read_csv","pandas"],"node":2,"named":{},"vn":101,"reads":{"groupby":[10]},"edges":{"DATA":[[[25],0],[[25],1]],"CONTROL":[25]},"nodeNumber":26,"expr":"indian-liver-disease-modeling.py [91:9] -> [91:21]","source":"data.groupby","writes":{}},{"is_import":false,"args":[[["reset_index","size","groupby","read_csv","pandas"]],100],"path":["Counts","reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":110,"reads":{},"edges":{"CONTROL":[36]},"nodeNumber":27,"expr":"indian-liver-disease-modeling.py [92:61] -> [92:107]","source":"sizing['Counts'] / sum(sizing['Counts']) * 100","writes":{"Percent":[21]}},{"is_import":false,"args":[[["reset_index","size","groupby","read_csv","pandas"]],[]],"path":["Counts","reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":111,"reads":{},"edges":{"DATA":[[[27],0]],"CONTROL":[27]},"nodeNumber":28,"expr":"indian-liver-disease-modeling.py [92:20] -> [92:26]","source":"sizing","writes":{}},{"is_import":false,"args":[[["reset_index","size","groupby","read_csv","pandas"]]],"path":["Counts","reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":112,"reads":{"Counts":[21]},"edges":{"DATA":[[[28],0]],"CONTROL":[30]},"nodeNumber":29,"expr":"indian-liver-disease-modeling.py [92:20] -> [92:36]","source":"sizing['Counts']","writes":{}},{"is_import":false,"args":[[["reset_index","size","groupby","read_csv","pandas"]]],"path":["Counts","reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":114,"reads":{"Counts":[21]},"edges":{"CONTROL":[15,28,173,175,176,178,179,185]},"nodeNumber":30,"expr":"indian-liver-disease-modeling.py [92:43] -> [92:59]","source":"sizing['Counts']","writes":{}},{"is_import":false,"args":[[["size","groupby","read_csv","pandas"]],"Counts"],"path":["reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{"name":"Counts"},"vn":117,"reads":{},"edges":{"DATA":[[[39,40,44,45],0]],"CONTROL":[15,39,173,175,176,178,179,185]},"nodeNumber":31,"expr":"indian-liver-disease-modeling.py [103:16] -> [103:74]","source":"data.groupby(['Gender']).size().reset_index(name='Counts')","writes":{}},{"is_import":false,"args":[[["size","groupby","read_csv","pandas"]]],"path":["reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":118,"reads":{"reset_index":[33]},"edges":{"DATA":[[[31],0]],"CONTROL":[31]},"nodeNumber":32,"expr":"indian-liver-disease-modeling.py [103:16] -> [103:59]","source":"data.groupby(['Gender']).size().reset_index","writes":{}},{"is_import":false,"args":[[["groupby","read_csv","pandas"]]],"path":["size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":119,"reads":{},"edges":{"DATA":[[[32],0]],"CONTROL":[15,32,173,175,176,178,179,185]},"nodeNumber":33,"expr":"indian-liver-disease-modeling.py [103:16] -> [103:20]","source":"data","writes":{}},{"is_import":false,"args":[[["groupby","read_csv","pandas"]]],"path":["size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":120,"reads":{"size":[35]},"edges":{"DATA":[[[33],0]],"CONTROL":[33]},"nodeNumber":34,"expr":"indian-liver-disease-modeling.py [103:16] -> [103:45]","source":"data.groupby(['Gender']).size","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]],{"0":"Gender"}],"path":["groupby","read_csv","pandas"],"node":2,"named":{},"vn":121,"reads":{},"edges":{"DATA":[[[34],0]],"CONTROL":[15,34,173,175,176,178,179,185]},"nodeNumber":35,"expr":"indian-liver-disease-modeling.py [103:16] -> [103:20]","source":"data","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["groupby","read_csv","pandas"],"node":2,"named":{},"vn":122,"reads":{"groupby":[10]},"edges":{"DATA":[[[35],0],[[35],1]],"CONTROL":[35]},"nodeNumber":36,"expr":"indian-liver-disease-modeling.py [103:16] -> [103:28]","source":"data.groupby","writes":{}},{"is_import":false,"args":[[["reset_index","size","groupby","read_csv","pandas"]],100],"path":["Counts","reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":129,"reads":{},"edges":{"CONTROL":[44]},"nodeNumber":37,"expr":"indian-liver-disease-modeling.py [104:82] -> [104:142]","source":"gender_sizing['Counts'] / sum(gender_sizing['Counts']) * 100","writes":{"Percent":[31]}},{"is_import":false,"args":[[["reset_index","size","groupby","read_csv","pandas"]],[]],"path":["Counts","reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":130,"reads":{},"edges":{"DATA":[[[37],0]],"CONTROL":[37]},"nodeNumber":38,"expr":"indian-liver-disease-modeling.py [104:27] -> [104:40]","source":"gender_sizing","writes":{}},{"is_import":false,"args":[[["reset_index","size","groupby","read_csv","pandas"]]],"path":["Counts","reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":131,"reads":{"Counts":[31]},"edges":{"DATA":[[[38],0]],"CONTROL":[40]},"nodeNumber":39,"expr":"indian-liver-disease-modeling.py [104:27] -> [104:50]","source":"gender_sizing['Counts']","writes":{}},{"is_import":false,"args":[[["reset_index","size","groupby","read_csv","pandas"]]],"path":["Counts","reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":133,"reads":{"Counts":[31]},"edges":{"CONTROL":[15,38,173,175,176,178,179,185]},"nodeNumber":40,"expr":"indian-liver-disease-modeling.py [104:57] -> [104:80]","source":"gender_sizing['Counts']","writes":{}},{"is_import":false,"args":[[["reset_index","size","groupby","read_csv","pandas"]],"%"],"path":["Gender","reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":135,"reads":{},"edges":{"CONTROL":[49]},"nodeNumber":41,"expr":"indian-liver-disease-modeling.py [105:104] -> [105:189]","source":"gender_sizing['Gender'] + \": \" + round(gender_sizing['Percent'], 1).astype(str) + \"%\"","writes":{"Text":[31]}},{"is_import":false,"args":[[["reset_index","size","groupby","read_csv","pandas"]],[]],"path":["Gender","reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":136,"reads":{},"edges":{"DATA":[[[41],0]],"CONTROL":[41]},"nodeNumber":42,"expr":"indian-liver-disease-modeling.py [105:55] -> [105:56]","source":"+","writes":{}},{"is_import":false,"args":[[["reset_index","size","groupby","read_csv","pandas"]],": "],"path":["Gender","reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":137,"reads":{},"edges":{"DATA":[[[42],0]],"CONTROL":[45]},"nodeNumber":43,"expr":"indian-liver-disease-modeling.py [105:24] -> [105:37]","source":"gender_sizing","writes":{}},{"is_import":false,"args":[[["reset_index","size","groupby","read_csv","pandas"]]],"path":["Gender","reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":138,"reads":{"Gender":[31]},"edges":{"DATA":[[[43],0]],"CONTROL":[43]},"nodeNumber":44,"expr":"indian-liver-disease-modeling.py [105:24] -> [105:47]","source":"gender_sizing['Gender']","writes":{}},{"is_import":false,"args":[[["reset_index","size","groupby","read_csv","pandas"]]],"path":["Percent","reset_index","size","groupby","read_csv","pandas"],"node":2,"named":{},"vn":145,"reads":{"Percent":[31]},"edges":{"CONTROL":[15,42,173,175,176,178,179,185]},"nodeNumber":45,"expr":"indian-liver-disease-modeling.py [105:63] -> [105:87]","source":"gender_sizing['Percent']","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["corr","read_csv","pandas"],"node":2,"named":{},"vn":150,"reads":{},"edges":{"DATA":[[[50],1]],"CONTROL":[15,51,173,175,176,178,179,185]},"nodeNumber":46,"expr":"indian-liver-disease-modeling.py [115:7] -> [115:32]","source":"data[data.columns].corr()","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["corr","read_csv","pandas"],"node":2,"named":{},"vn":151,"reads":{"corr":[10]},"edges":{"DATA":[[[46],0]],"CONTROL":[46]},"nodeNumber":47,"expr":"indian-liver-disease-modeling.py [115:7] -> [115:30]","source":"data[data.columns].corr","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]],[["read_csv","pandas"]]],"path":["read_csv","pandas"],"node":2,"named":{},"vn":152,"reads":{},"edges":{"DATA":[[[47],0]]},"nodeNumber":48,"expr":"indian-liver-disease-modeling.py [115:12] -> [115:24]","source":"data.columns","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["columns","read_csv","pandas"],"node":2,"named":{},"vn":153,"reads":{"columns":[10]},"edges":{"DATA":[[[48],1]],"CONTROL":[47]},"nodeNumber":49,"expr":"indian-liver-disease-modeling.py [115:12] -> [115:24]","source":"data.columns","writes":{}},{"is_import":false,"args":[[["seaborn"]],[["corr","turtle","read_csv","pandas"]],[]],"path":["heatmap","seaborn"],"node":2,"named":{"annot":[]},"vn":156,"reads":{},"edges":{"CONTROL":[15,53,173,175,176,178,179,185]},"nodeNumber":50,"expr":"indian-liver-disease-modeling.py [120:0] -> [120:29]","source":"\n\nsns.heatmap(corr, annot=True)","writes":{}},{"is_import":false,"args":[[["seaborn"]]],"path":["heatmap","seaborn"],"node":2,"named":{},"vn":157,"reads":{"heatmap":[7]},"edges":{"DATA":[[[50],0]],"CONTROL":[50]},"nodeNumber":51,"expr":"indian-liver-disease-modeling.py [120:0] -> [120:11]","source":"\n\nsns.heatmap","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]],[["notnull","pandas"]],[["median","read_csv","pandas"]],"columns"],"path":["where","read_csv","pandas"],"node":2,"named":{"axis":"columns"},"vn":160,"reads":{},"edges":{"DATA":[[[61,67,72,75,80,81],0]],"CONTROL":[15,61,173,175,176,178,179,185]},"nodeNumber":52,"expr":"indian-liver-disease-modeling.py [133:7] -> [133:66]","source":"data.where(pd.notnull(data), data.median(), axis='columns')","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["where","read_csv","pandas"],"node":2,"named":{},"vn":161,"reads":{"where":[10]},"edges":{"DATA":[[[52],0]],"CONTROL":[55]},"nodeNumber":53,"expr":"indian-liver-disease-modeling.py [133:7] -> [133:17]","source":"data.where","writes":{}},{"is_import":false,"args":[[["pandas"]],[["read_csv","pandas"]]],"path":["notnull","pandas"],"node":2,"named":{},"vn":162,"reads":{},"edges":{"DATA":[[[52],1]],"CONTROL":[15,57,173,175,176,178,179,185]},"nodeNumber":54,"expr":"indian-liver-disease-modeling.py [133:18] -> [133:34]","source":"pd.notnull(data)","writes":{}},{"is_import":false,"args":[[["pandas"]]],"path":["notnull","pandas"],"node":2,"named":{},"vn":163,"reads":{"notnull":[4]},"edges":{"DATA":[[[54],0]],"CONTROL":[54]},"nodeNumber":55,"expr":"indian-liver-disease-modeling.py [133:18] -> [133:28]","source":"pd.notnull","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["median","read_csv","pandas"],"node":2,"named":{},"vn":166,"reads":{},"edges":{"DATA":[[[52],2]],"CONTROL":[15,52,173,175,176,178,179,185]},"nodeNumber":56,"expr":"indian-liver-disease-modeling.py [133:36] -> [133:49]","source":"data.median()","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["median","read_csv","pandas"],"node":2,"named":{},"vn":167,"reads":{"median":[10]},"edges":{"DATA":[[[56],0]],"CONTROL":[56]},"nodeNumber":57,"expr":"indian-liver-disease-modeling.py [133:36] -> [133:47]","source":"data.median","writes":{}},{"is_import":false,"args":[[["isnull","where","read_csv","pandas"]]],"path":["sum","isnull","where","read_csv","pandas"],"node":2,"named":{},"vn":172,"reads":{},"edges":{"CONTROL":[15,62,173,175,176,178,179,185]},"nodeNumber":58,"expr":"indian-liver-disease-modeling.py [134:0] -> [134:19]","source":"\n\ndata.isnull().sum()","writes":{}},{"is_import":false,"args":[[["isnull","where","read_csv","pandas"]]],"path":["sum","isnull","where","read_csv","pandas"],"node":2,"named":{},"vn":173,"reads":{"sum":[60]},"edges":{"DATA":[[[58],0]],"CONTROL":[58]},"nodeNumber":59,"expr":"indian-liver-disease-modeling.py [134:0] -> [134:17]","source":"\n\ndata.isnull().sum","writes":{}},{"is_import":false,"args":[[["where","read_csv","pandas"]]],"path":["isnull","where","read_csv","pandas"],"node":2,"named":{},"vn":174,"reads":{},"edges":{"DATA":[[[59],0]],"CONTROL":[15,59,173,175,176,178,179,185]},"nodeNumber":60,"expr":"indian-liver-disease-modeling.py [134:0] -> [134:4]","source":"\n\ndata","writes":{}},{"is_import":false,"args":[[["where","read_csv","pandas"]]],"path":["isnull","where","read_csv","pandas"],"node":2,"named":{},"vn":175,"reads":{"isnull":[52]},"edges":{"DATA":[[[60],0]],"CONTROL":[60]},"nodeNumber":61,"expr":"indian-liver-disease-modeling.py [134:0] -> [134:11]","source":"\n\ndata.isnull","writes":{}},{"is_import":true,"args":[],"path":["sklearn"],"node":2,"named":{},"vn":179,"reads":{},"edges":{"DATA":[[[63],0]],"CONTROL":[63]},"nodeNumber":62,"expr":"indian-liver-disease-modeling.py [143:5] -> [143:12]","source":"sklearn","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["preprocessing","sklearn"],"node":2,"named":{},"vn":181,"reads":{"preprocessing":[62]},"edges":{"DATA":[[[69],0]],"CONTROL":[67]},"nodeNumber":63,"expr":"indian-liver-disease-modeling.py [1:0] -> [1:0]","source":"#!/usr/bin/env python\n# coding: utf-8","writes":{}},{"is_import":false,"args":[[["where","read_csv","pandas"]]],"path":["tolist","columns","iloc","where","read_csv","pandas"],"node":2,"named":{},"vn":182,"reads":{},"edges":{"CONTROL":[15,69,173,175,176,178,179,185]},"nodeNumber":64,"expr":"indian-liver-disease-modeling.py [145:11] -> [145:65]","source":"data.iloc[:, 2:len(data.columns) - 1].columns.tolist()","writes":{"columns":[73]}},{"is_import":false,"args":[[["where","read_csv","pandas"]]],"path":["tolist","columns","iloc","where","read_csv","pandas"],"node":2,"named":{},"vn":183,"reads":{"tolist":[52]},"edges":{"DATA":[[[64],0]],"CONTROL":[64]},"nodeNumber":65,"expr":"indian-liver-disease-modeling.py [145:11] -> [145:63]","source":"data.iloc[:, 2:len(data.columns) - 1].columns.tolist","writes":{}},{"is_import":false,"args":[[["where","read_csv","pandas"]]],"path":["columns","iloc","where","read_csv","pandas"],"node":2,"named":{},"vn":184,"reads":{"columns":[52]},"edges":{"DATA":[[[65],0]],"CONTROL":[65]},"nodeNumber":66,"expr":"indian-liver-disease-modeling.py [145:11] -> [145:56]","source":"data.iloc[:, 2:len(data.columns) - 1].columns","writes":{}},{"is_import":false,"args":[[["where","read_csv","pandas"]]],"path":["iloc","where","read_csv","pandas"],"node":2,"named":{},"vn":185,"reads":{"iloc":[52]},"edges":{"DATA":[[[66],0]],"CONTROL":[66]},"nodeNumber":67,"expr":"indian-liver-disease-modeling.py [145:11] -> [145:20]","source":"data.iloc","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["MinMaxScaler","preprocessing","sklearn"],"node":2,"named":{},"vn":188,"reads":{},"edges":{"DATA":[[[71],0]],"CONTROL":[15,71,173,175,176,178,179,185]},"nodeNumber":68,"expr":"indian-liver-disease-modeling.py [146:17] -> [146:45]","source":"preprocessing.MinMaxScaler()","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["MinMaxScaler","preprocessing","sklearn"],"node":2,"named":{},"vn":189,"reads":{"MinMaxScaler":[62]},"edges":{"DATA":[[[68],0]],"CONTROL":[68]},"nodeNumber":69,"expr":"indian-liver-disease-modeling.py [146:17] -> [146:43]","source":"preprocessing.MinMaxScaler","writes":{}},{"is_import":false,"args":[[["MinMaxScaler","preprocessing","sklearn"]],[["where","read_csv","pandas"]]],"path":["fit_transform","MinMaxScaler","preprocessing","sklearn"],"node":2,"named":{},"vn":192,"reads":{},"edges":{"DATA":[[[73],1]],"CONTROL":[15,74,173,175,176,178,179,185]},"nodeNumber":70,"expr":"indian-liver-disease-modeling.py [147:12] -> [147:79]","source":"min_max_scaler.fit_transform(data.iloc[:, 2:len(data.columns) - 1])","writes":{}},{"is_import":false,"args":[[["MinMaxScaler","preprocessing","sklearn"]]],"path":["fit_transform","MinMaxScaler","preprocessing","sklearn"],"node":2,"named":{},"vn":193,"reads":{"fit_transform":[68]},"edges":{"DATA":[[[70],0]],"CONTROL":[72]},"nodeNumber":71,"expr":"indian-liver-disease-modeling.py [147:12] -> [147:40]","source":"min_max_scaler.fit_transform","writes":{}},{"is_import":false,"args":[[["where","read_csv","pandas"]]],"path":["iloc","where","read_csv","pandas"],"node":2,"named":{},"vn":194,"reads":{"iloc":[52]},"edges":{"DATA":[[[70],1]],"CONTROL":[70]},"nodeNumber":72,"expr":"indian-liver-disease-modeling.py [147:41] -> [147:50]","source":"data.iloc","writes":{}},{"is_import":false,"args":[[["pandas"]],[["fit_transform","MinMaxScaler","preprocessing","sklearn"]]],"path":["DataFrame","pandas"],"node":2,"named":{},"vn":197,"reads":{},"edges":{"DATA":[[[78],1]],"CONTROL":[15,75,173,175,176,178,179,185]},"nodeNumber":73,"expr":"indian-liver-disease-modeling.py [148:16] -> [148:39]","source":"pd.DataFrame(np_scaled)","writes":{}},{"is_import":false,"args":[[["pandas"]]],"path":["DataFrame","pandas"],"node":2,"named":{},"vn":198,"reads":{"DataFrame":[4]},"edges":{"DATA":[[[73],0]],"CONTROL":[73]},"nodeNumber":74,"expr":"indian-liver-disease-modeling.py [148:16] -> [148:28]","source":"pd.DataFrame","writes":{}},{"is_import":false,"args":[[["where","read_csv","pandas"]]],"path":["iloc","where","read_csv","pandas"],"node":2,"named":{},"vn":202,"reads":{"iloc":[52]},"edges":{"DATA":[[[76],1]],"CONTROL":[77]},"nodeNumber":75,"expr":"indian-liver-disease-modeling.py [152:12] -> [152:21]","source":"data.iloc","writes":{}},{"is_import":false,"args":[[["pandas"]],[["where","read_csv","pandas"]],"Gender",[]],"path":["get_dummies","pandas"],"node":2,"named":{"drop_first":[],"prefix":"Gender"},"vn":204,"reads":{},"edges":{"DATA":[[[78],1]],"CONTROL":[15,79,173,175,176,178,179,185]},"nodeNumber":76,"expr":"indian-liver-disease-modeling.py [153:12] -> [153:71]","source":"pd.get_dummies(gender_df, prefix='Gender', drop_first=True)","writes":{}},{"is_import":false,"args":[[["pandas"]]],"path":["get_dummies","pandas"],"node":2,"named":{},"vn":205,"reads":{"get_dummies":[4]},"edges":{"DATA":[[[76],0]],"CONTROL":[76]},"nodeNumber":77,"expr":"indian-liver-disease-modeling.py [153:12] -> [153:26]","source":"pd.get_dummies","writes":{}},{"is_import":false,"args":[[["pandas"]],[["get_dummies","pandas"],["where","read_csv","pandas"],["DataFrame","pandas"]],1],"path":["concat","pandas"],"node":2,"named":{"axis":1},"vn":210,"reads":{},"edges":{"DATA":[[[83,88,90,91,116],0],[[115],1]],"CONTROL":[15,83,173,175,176,178,179,185]},"nodeNumber":78,"expr":"indian-liver-disease-modeling.py [160:8] -> [160:107]","source":"pd.concat([gender_df, data.iloc[:, 0], df_normalized, data.iloc[:, len(data.columns) - 1]], axis=1)","writes":{}},{"is_import":false,"args":[[["pandas"]]],"path":["concat","pandas"],"node":2,"named":{},"vn":211,"reads":{"concat":[4]},"edges":{"DATA":[[[78],0],[[78],1]],"CONTROL":[80]},"nodeNumber":79,"expr":"indian-liver-disease-modeling.py [160:8] -> [160:17]","source":"pd.concat","writes":{}},{"is_import":false,"args":[[["where","read_csv","pandas"]]],"path":["iloc","where","read_csv","pandas"],"node":2,"named":{},"vn":215,"reads":{"iloc":[52]},"edges":{"DATA":[[[78],1]],"CONTROL":[81]},"nodeNumber":80,"expr":"indian-liver-disease-modeling.py [160:30] -> [160:39]","source":"data.iloc","writes":{}},{"is_import":false,"args":[[["where","read_csv","pandas"]]],"path":["iloc","where","read_csv","pandas"],"node":2,"named":{},"vn":218,"reads":{"iloc":[52]},"edges":{"DATA":[[[78],1]],"CONTROL":[78]},"nodeNumber":81,"expr":"indian-liver-disease-modeling.py [160:62] -> [160:71]","source":"data.iloc","writes":{}},{"is_import":false,"args":[[["concat","pandas"]],2],"path":["head","concat","pandas"],"node":2,"named":{},"vn":221,"reads":{},"edges":{"CONTROL":[15,85,173,175,176,178,179,185]},"nodeNumber":82,"expr":"indian-liver-disease-modeling.py [171:0] -> [171:13]","source":"\n\nmy_df.head(2)","writes":{}},{"is_import":false,"args":[[["concat","pandas"]]],"path":["head","concat","pandas"],"node":2,"named":{},"vn":222,"reads":{"head":[78]},"edges":{"DATA":[[[82],0]],"CONTROL":[82]},"nodeNumber":83,"expr":"indian-liver-disease-modeling.py [171:0] -> [171:10]","source":"\n\nmy_df.head","writes":{}},{"is_import":false,"args":[[["seaborn"]],[["corr","turtle","concat","pandas"]],[],"RdYlGn"],"path":["heatmap","seaborn"],"node":2,"named":{"cmap":"RdYlGn","annot":[]},"vn":224,"reads":{},"edges":{"CONTROL":[15,93,173,175,176,178,179,185]},"nodeNumber":84,"expr":"indian-liver-disease-modeling.py [178:0] -> [178:92]","source":"\n\nsns.heatmap(my_df[my_df.columns[:len(my_df.columns) - 1]].corr(), annot=True, cmap='RdYlGn')","writes":{}},{"is_import":false,"args":[[["seaborn"]]],"path":["heatmap","seaborn"],"node":2,"named":{},"vn":225,"reads":{"heatmap":[7]},"edges":{"DATA":[[[84],0]],"CONTROL":[90]},"nodeNumber":85,"expr":"indian-liver-disease-modeling.py [178:0] -> [178:11]","source":"\n\nsns.heatmap","writes":{}},{"is_import":false,"args":[[["concat","pandas"]]],"path":["corr","concat","pandas"],"node":2,"named":{},"vn":226,"reads":{},"edges":{"DATA":[[[84],1]],"CONTROL":[15,84,173,175,176,178,179,185]},"nodeNumber":86,"expr":"indian-liver-disease-modeling.py [178:12] -> [178:64]","source":"my_df[my_df.columns[:len(my_df.columns) - 1]].corr()","writes":{}},{"is_import":false,"args":[[["concat","pandas"]]],"path":["corr","concat","pandas"],"node":2,"named":{},"vn":227,"reads":{"corr":[78]},"edges":{"DATA":[[[86],0]],"CONTROL":[86]},"nodeNumber":87,"expr":"indian-liver-disease-modeling.py [178:12] -> [178:62]","source":"my_df[my_df.columns[:len(my_df.columns) - 1]].corr","writes":{}},{"is_import":false,"args":[[["concat","pandas"]],[["concat","pandas"]]],"path":["concat","pandas"],"node":2,"named":{},"vn":228,"reads":{},"edges":{"DATA":[[[87],0]]},"nodeNumber":88,"expr":"indian-liver-disease-modeling.py [178:18] -> [178:31]","source":"my_df.columns","writes":{}},{"is_import":false,"args":[[],[["concat","pandas"]],[],[],[]],"path":["columns","concat","pandas"],"node":2,"named":{},"vn":229,"reads":{},"edges":{"DATA":[[[88],1]],"CONTROL":[15,87,173,175,176,178,179,185]},"nodeNumber":89,"expr":"indian-liver-disease-modeling.py [178:18] -> [178:56]","source":"my_df.columns[:len(my_df.columns) - 1]","writes":{}},{"is_import":false,"args":[[["concat","pandas"]]],"path":["columns","concat","pandas"],"node":2,"named":{},"vn":230,"reads":{"columns":[78]},"edges":{"DATA":[[[89,120,124],0],[[89],1]],"CONTROL":[91]},"nodeNumber":90,"expr":"indian-liver-disease-modeling.py [178:18] -> [178:31]","source":"my_df.columns","writes":{}},{"is_import":false,"args":[[["concat","pandas"]]],"path":["columns","concat","pandas"],"node":2,"named":{},"vn":235,"reads":{"columns":[78]},"edges":{"CONTROL":[15,89,173,175,176,178,179,185]},"nodeNumber":91,"expr":"indian-liver-disease-modeling.py [178:37] -> [178:50]","source":"my_df.columns","writes":{}},{"is_import":false,"args":[[["matplotlib"]]],"path":["gcf","pyplot","matplotlib"],"node":2,"named":{},"vn":242,"reads":{},"edges":{"DATA":[[[95],0]],"CONTROL":[15,95,173,175,176,178,179,185]},"nodeNumber":92,"expr":"indian-liver-disease-modeling.py [179:6] -> [179:15]","source":"plt.gcf()","writes":{}},{"is_import":false,"args":[[["matplotlib"]]],"path":["gcf","pyplot","matplotlib"],"node":2,"named":{},"vn":243,"reads":{"gcf":[6]},"edges":{"DATA":[[[92],0]],"CONTROL":[92]},"nodeNumber":93,"expr":"indian-liver-disease-modeling.py [179:6] -> [179:13]","source":"plt.gcf","writes":{}},{"is_import":false,"args":[[["gcf","pyplot","matplotlib"]],10,8],"path":["set_size_inches","gcf","pyplot","matplotlib"],"node":2,"named":{},"vn":246,"reads":{},"edges":{"CONTROL":[15,97,173,175,176,178,179,185]},"nodeNumber":94,"expr":"indian-liver-disease-modeling.py [180:0] -> [180:26]","source":"\n\nfig.set_size_inches(10, 8)","writes":{}},{"is_import":false,"args":[[["gcf","pyplot","matplotlib"]]],"path":["set_size_inches","gcf","pyplot","matplotlib"],"node":2,"named":{},"vn":247,"reads":{"set_size_inches":[92]},"edges":{"DATA":[[[94],0]],"CONTROL":[94]},"nodeNumber":95,"expr":"indian-liver-disease-modeling.py [180:0] -> [180:19]","source":"\n\nfig.set_size_inches","writes":{}},{"is_import":false,"args":[[["matplotlib"]]],"path":["show","pyplot","matplotlib"],"node":2,"named":{},"vn":251,"reads":{},"edges":{"CONTROL":[15,99,173,175,176,178,179,185]},"nodeNumber":96,"expr":"indian-liver-disease-modeling.py [181:0] -> [181:10]","source":"\n\nplt.show()","writes":{}},{"is_import":false,"args":[[["matplotlib"]]],"path":["show","pyplot","matplotlib"],"node":2,"named":{},"vn":252,"reads":{"show":[6]},"edges":{"DATA":[[[96],0]],"CONTROL":[96]},"nodeNumber":97,"expr":"indian-liver-disease-modeling.py [181:0] -> [181:8]","source":"\n\nplt.show","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["model_selection","sklearn"],"node":2,"named":{},"vn":254,"reads":{"model_selection":[99]},"edges":{"DATA":[[[100,101],0]],"CONTROL":[100]},"nodeNumber":98,"expr":"indian-liver-disease-modeling.py [191:13] -> [191:28]","source":"model_selection","writes":{}},{"is_import":true,"args":[],"path":["sklearn"],"node":2,"named":{},"vn":255,"reads":{},"edges":{"DATA":[[[98],0]],"CONTROL":[98]},"nodeNumber":99,"expr":"indian-liver-disease-modeling.py [191:5] -> [191:12]","source":"sklearn","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["train_test_split","model_selection","sklearn"],"node":2,"named":{},"vn":257,"reads":{"train_test_split":[99]},"edges":{"DATA":[[[115],0]],"CONTROL":[101]},"nodeNumber":100,"expr":"indian-liver-disease-modeling.py [1:0] -> [1:0]","source":"#!/usr/bin/env python\n# coding: utf-8","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["KFold","model_selection","sklearn"],"node":2,"named":{},"vn":258,"reads":{"KFold":[99]},"edges":{"CONTROL":[102]},"nodeNumber":101,"expr":"indian-liver-disease-modeling.py [1:0] -> [1:0]","source":"#!/usr/bin/env python\n# coding: utf-8","writes":{}},{"is_import":true,"args":[],"path":["sklearn"],"node":2,"named":{},"vn":259,"reads":{},"edges":{"DATA":[[[103],0]],"CONTROL":[103]},"nodeNumber":102,"expr":"indian-liver-disease-modeling.py [192:5] -> [192:12]","source":"sklearn","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["svm","sklearn"],"node":2,"named":{},"vn":261,"reads":{"svm":[102]},"edges":{"DATA":[[[130],0]],"CONTROL":[105]},"nodeNumber":103,"expr":"indian-liver-disease-modeling.py [1:0] -> [1:0]","source":"#!/usr/bin/env python\n# coding: utf-8","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["tree","sklearn"],"node":2,"named":{},"vn":262,"reads":{"tree":[105]},"edges":{"DATA":[[[106],0]],"CONTROL":[106]},"nodeNumber":104,"expr":"indian-liver-disease-modeling.py [193:13] -> [193:17]","source":"tree","writes":{}},{"is_import":true,"args":[],"path":["sklearn"],"node":2,"named":{},"vn":263,"reads":{},"edges":{"DATA":[[[104],0]],"CONTROL":[104]},"nodeNumber":105,"expr":"indian-liver-disease-modeling.py [193:5] -> [193:12]","source":"sklearn","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["DecisionTreeClassifier","tree","sklearn"],"node":2,"named":{},"vn":265,"reads":{"DecisionTreeClassifier":[105]},"edges":{"DATA":[[[148],0]],"CONTROL":[108]},"nodeNumber":106,"expr":"indian-liver-disease-modeling.py [1:0] -> [1:0]","source":"#!/usr/bin/env python\n# coding: utf-8","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["linear_model","sklearn"],"node":2,"named":{},"vn":266,"reads":{"linear_model":[108]},"edges":{"DATA":[[[109],0]],"CONTROL":[109]},"nodeNumber":107,"expr":"indian-liver-disease-modeling.py [194:13] -> [194:25]","source":"linear_model","writes":{}},{"is_import":true,"args":[],"path":["sklearn"],"node":2,"named":{},"vn":267,"reads":{},"edges":{"DATA":[[[107],0]],"CONTROL":[107]},"nodeNumber":108,"expr":"indian-liver-disease-modeling.py [194:5] -> [194:12]","source":"sklearn","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["LogisticRegression","linear_model","sklearn"],"node":2,"named":{},"vn":269,"reads":{"LogisticRegression":[108]},"edges":{"DATA":[[[139],0]],"CONTROL":[111]},"nodeNumber":109,"expr":"indian-liver-disease-modeling.py [1:0] -> [1:0]","source":"#!/usr/bin/env python\n# coding: utf-8","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["ensemble","sklearn"],"node":2,"named":{},"vn":270,"reads":{"ensemble":[111]},"edges":{"DATA":[[[112],0]],"CONTROL":[112]},"nodeNumber":110,"expr":"indian-liver-disease-modeling.py [195:13] -> [195:21]","source":"ensemble","writes":{}},{"is_import":true,"args":[],"path":["sklearn"],"node":2,"named":{},"vn":271,"reads":{},"edges":{"DATA":[[[110],0]],"CONTROL":[110]},"nodeNumber":111,"expr":"indian-liver-disease-modeling.py [195:5] -> [195:12]","source":"sklearn","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["RandomForestClassifier","ensemble","sklearn"],"node":2,"named":{},"vn":273,"reads":{"RandomForestClassifier":[111]},"edges":{"DATA":[[[157],0]],"CONTROL":[113]},"nodeNumber":112,"expr":"indian-liver-disease-modeling.py [1:0] -> [1:0]","source":"#!/usr/bin/env python\n# coding: utf-8","writes":{}},{"is_import":true,"args":[],"path":["sklearn"],"node":2,"named":{},"vn":274,"reads":{},"edges":{"DATA":[[[114],0]],"CONTROL":[114]},"nodeNumber":113,"expr":"indian-liver-disease-modeling.py [196:5] -> [196:12]","source":"sklearn","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["metrics","sklearn"],"node":2,"named":{},"vn":276,"reads":{"metrics":[113]},"edges":{"DATA":[[[136,138,145,147,154,156,163,165],0]],"CONTROL":[116]},"nodeNumber":114,"expr":"indian-liver-disease-modeling.py [1:0] -> [1:0]","source":"#!/usr/bin/env python\n# coding: utf-8","writes":{}},{"is_import":false,"args":[[["sklearn"]],[["concat","pandas"]],0.3,0,[["concat","pandas"]]],"path":["train_test_split","model_selection","sklearn"],"node":2,"named":{"test_size":0.3,"stratify":[["concat","pandas"]],"random_state":0},"vn":277,"reads":{},"edges":{"DATA":[[[117,118],0]],"CONTROL":[15,117,173,175,176,178,179,185]},"nodeNumber":115,"expr":"indian-liver-disease-modeling.py [201:14] -> [204:57]","source":"train_test_split(my_df,\n                               test_size=0.3,\n                               random_state=0,\n                               stratify=my_df['Dataset'])","writes":{}},{"is_import":false,"args":[[["concat","pandas"]]],"path":["Dataset","concat","pandas"],"node":2,"named":{},"vn":283,"reads":{"Dataset":[78]},"edges":{"DATA":[[[115],4]],"CONTROL":[115]},"nodeNumber":116,"expr":"indian-liver-disease-modeling.py [204:40] -> [204:56]","source":"my_df['Dataset']","writes":{}},{"is_import":false,"args":[[["train_test_split","model_selection","sklearn"]],0],"path":["train_test_split","model_selection","sklearn"],"node":2,"named":{},"vn":286,"reads":{},"edges":{"DATA":[[[119,121,122,127],0]],"CONTROL":[118]},"nodeNumber":117,"expr":"indian-liver-disease-modeling.py [201:0] -> [201:5]","source":"\n\ntrain","writes":{}},{"is_import":false,"args":[[["train_test_split","model_selection","sklearn"]],1],"path":["train_test_split","model_selection","sklearn"],"node":2,"named":{},"vn":288,"reads":{},"edges":{"DATA":[[[123,125,126,128],0]],"CONTROL":[121]},"nodeNumber":118,"expr":"indian-liver-disease-modeling.py [201:0] -> [201:5]","source":"\n\ntrain","writes":{}},{"is_import":false,"args":[[["train_test_split","model_selection","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["train_test_split","model_selection","sklearn"],"node":2,"named":{},"vn":289,"reads":{},"edges":{"DATA":[[[131,140,149,158],1],[[171],0]]},"nodeNumber":119,"expr":"indian-liver-disease-modeling.py [205:16] -> [205:29]","source":"train.columns","writes":{}},{"is_import":false,"args":[[],[["train_test_split","model_selection","sklearn"]],[],[],[]],"path":["columns","train_test_split","model_selection","sklearn"],"node":2,"named":{},"vn":290,"reads":{},"edges":{"DATA":[[[119],1]],"CONTROL":[15,125,173,175,176,178,179,185]},"nodeNumber":120,"expr":"indian-liver-disease-modeling.py [205:16] -> [205:54]","source":"train.columns[:len(train.columns) - 1]","writes":{}},{"is_import":false,"args":[[["train_test_split","model_selection","sklearn"]]],"path":["columns","train_test_split","model_selection","sklearn"],"node":2,"named":{},"vn":291,"reads":{"columns":[115]},"edges":{"DATA":[[[89,120,124],0],[[120],1]],"CONTROL":[122]},"nodeNumber":121,"expr":"indian-liver-disease-modeling.py [205:16] -> [205:29]","source":"train.columns","writes":{}},{"is_import":false,"args":[[["train_test_split","model_selection","sklearn"]]],"path":["columns","train_test_split","model_selection","sklearn"],"node":2,"named":{},"vn":295,"reads":{"columns":[115]},"edges":{"CONTROL":[15,120,173,175,176,178,179,185]},"nodeNumber":122,"expr":"indian-liver-disease-modeling.py [205:35] -> [205:48]","source":"train.columns","writes":{}},{"is_import":false,"args":[[["train_test_split","model_selection","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["train_test_split","model_selection","sklearn"],"node":2,"named":{},"vn":299,"reads":{},"edges":{"DATA":[[[133,142,151,160],1]]},"nodeNumber":123,"expr":"indian-liver-disease-modeling.py [206:14] -> [206:26]","source":"test.columns","writes":{}},{"is_import":false,"args":[[],[["train_test_split","model_selection","sklearn"]],[],[],[]],"path":["columns","train_test_split","model_selection","sklearn"],"node":2,"named":{},"vn":300,"reads":{},"edges":{"DATA":[[[123],1]],"CONTROL":[15,127,173,175,176,178,179,185]},"nodeNumber":124,"expr":"indian-liver-disease-modeling.py [206:14] -> [206:50]","source":"test.columns[:len(test.columns) - 1]","writes":{}},{"is_import":false,"args":[[["train_test_split","model_selection","sklearn"]]],"path":["columns","train_test_split","model_selection","sklearn"],"node":2,"named":{},"vn":301,"reads":{"columns":[115]},"edges":{"DATA":[[[89,120,124],0],[[124],1]],"CONTROL":[126]},"nodeNumber":125,"expr":"indian-liver-disease-modeling.py [206:14] -> [206:26]","source":"test.columns","writes":{}},{"is_import":false,"args":[[["train_test_split","model_selection","sklearn"]]],"path":["columns","train_test_split","model_selection","sklearn"],"node":2,"named":{},"vn":305,"reads":{"columns":[115]},"edges":{"CONTROL":[15,124,173,175,176,178,179,185]},"nodeNumber":126,"expr":"indian-liver-disease-modeling.py [206:32] -> [206:44]","source":"test.columns","writes":{}},{"is_import":false,"args":[[["train_test_split","model_selection","sklearn"]]],"path":["Dataset","train_test_split","model_selection","sklearn"],"node":2,"named":{},"vn":309,"reads":{"Dataset":[115]},"edges":{"DATA":[[[131,140,149,158],2]],"CONTROL":[128]},"nodeNumber":127,"expr":"indian-liver-disease-modeling.py [207:10] -> [207:26]","source":"train['Dataset']","writes":{}},{"is_import":false,"args":[[["train_test_split","model_selection","sklearn"]]],"path":["Dataset","train_test_split","model_selection","sklearn"],"node":2,"named":{},"vn":311,"reads":{"Dataset":[115]},"edges":{"DATA":[[[135,137,144,146,153,155,162,164],2]],"CONTROL":[130,139]},"nodeNumber":128,"expr":"indian-liver-disease-modeling.py [208:9] -> [208:24]","source":"test['Dataset']","writes":{}},{"is_import":false,"args":[[["sklearn"]],[],0],"path":["SVC","svm","sklearn"],"node":2,"named":{"kernel":[],"random_state":0},"vn":325,"reads":{},"edges":{"DATA":[[[132,134],0]],"CONTROL":[15,132,173,175,176,178,179,185]},"nodeNumber":129,"expr":"indian-liver-disease-modeling.py [215:12] -> [215:45]","source":"svm.SVC(kernel=i, random_state=0)","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["SVC","svm","sklearn"],"node":2,"named":{},"vn":326,"reads":{"SVC":[102]},"edges":{"DATA":[[[129],0]],"CONTROL":[129]},"nodeNumber":130,"expr":"indian-liver-disease-modeling.py [215:12] -> [215:19]","source":"svm.SVC","writes":{}},{"is_import":false,"args":[[["SVC","svm","sklearn"]],[["train_test_split","model_selection","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["fit","SVC","svm","sklearn"],"node":2,"named":{},"vn":331,"reads":{},"edges":{"CONTROL":[15,134,173,175,176,178,179,185]},"nodeNumber":131,"expr":"indian-liver-disease-modeling.py [216:4] -> [216:31]","source":"model.fit(train_X, train_Y)","writes":{}},{"is_import":false,"args":[[["SVC","svm","sklearn"]]],"path":["fit","SVC","svm","sklearn"],"node":2,"named":{},"vn":332,"reads":{"fit":[129]},"edges":{"DATA":[[[131],0]],"CONTROL":[131]},"nodeNumber":132,"expr":"indian-liver-disease-modeling.py [216:4] -> [216:13]","source":"model.fit","writes":{}},{"is_import":false,"args":[[["SVC","svm","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["predict","SVC","svm","sklearn"],"node":2,"named":{},"vn":334,"reads":{},"edges":{"DATA":[[[135,137],1]],"CONTROL":[15,136,173,175,176,178,179,185]},"nodeNumber":133,"expr":"indian-liver-disease-modeling.py [217:17] -> [217:38]","source":"model.predict(test_X)","writes":{}},{"is_import":false,"args":[[["SVC","svm","sklearn"]]],"path":["predict","SVC","svm","sklearn"],"node":2,"named":{},"vn":335,"reads":{"predict":[129]},"edges":{"DATA":[[[133],0]],"CONTROL":[133]},"nodeNumber":134,"expr":"indian-liver-disease-modeling.py [217:17] -> [217:30]","source":"model.predict","writes":{}},{"is_import":false,"args":[[["sklearn"]],[["predict","SVC","svm","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["accuracy_score","metrics","sklearn"],"node":2,"named":{},"vn":342,"reads":{},"edges":{"CONTROL":[15,138,173,175,176,178,179,185]},"nodeNumber":135,"expr":"indian-liver-disease-modeling.py [218:48] -> [218:90]","source":"metrics.accuracy_score(prediction, test_Y)","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["accuracy_score","metrics","sklearn"],"node":2,"named":{},"vn":343,"reads":{"accuracy_score":[113]},"edges":{"DATA":[[[135],0]],"CONTROL":[135]},"nodeNumber":136,"expr":"indian-liver-disease-modeling.py [218:48] -> [218:70]","source":"metrics.accuracy_score","writes":{}},{"is_import":false,"args":[[["sklearn"]],[["predict","SVC","svm","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["f1_score","metrics","sklearn"],"node":2,"named":{},"vn":350,"reads":{},"edges":{"CONTROL":[15,130,139,173,175,176,178,179,185]},"nodeNumber":137,"expr":"indian-liver-disease-modeling.py [219:50] -> [219:86]","source":"metrics.f1_score(prediction, test_Y)","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["f1_score","metrics","sklearn"],"node":2,"named":{},"vn":351,"reads":{"f1_score":[113]},"edges":{"DATA":[[[137],0]],"CONTROL":[137]},"nodeNumber":138,"expr":"indian-liver-disease-modeling.py [219:50] -> [219:66]","source":"metrics.f1_score","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["LogisticRegression","linear_model","sklearn"],"node":2,"named":{},"vn":356,"reads":{},"edges":{"DATA":[[[141,143],0]],"CONTROL":[15,141,173,175,176,178,179,185]},"nodeNumber":139,"expr":"indian-liver-disease-modeling.py [224:8] -> [224:28]","source":"LogisticRegression()","writes":{}},{"is_import":false,"args":[[["LogisticRegression","linear_model","sklearn"]],[["train_test_split","model_selection","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["fit","LogisticRegression","linear_model","sklearn"],"node":2,"named":{},"vn":358,"reads":{},"edges":{"CONTROL":[15,143,173,175,176,178,179,185]},"nodeNumber":140,"expr":"indian-liver-disease-modeling.py [225:0] -> [225:27]","source":"\n\nmodel.fit(train_X, train_Y)","writes":{}},{"is_import":false,"args":[[["LogisticRegression","linear_model","sklearn"]]],"path":["fit","LogisticRegression","linear_model","sklearn"],"node":2,"named":{},"vn":359,"reads":{"fit":[139]},"edges":{"DATA":[[[140],0]],"CONTROL":[140]},"nodeNumber":141,"expr":"indian-liver-disease-modeling.py [225:0] -> [225:9]","source":"\n\nmodel.fit","writes":{}},{"is_import":false,"args":[[["LogisticRegression","linear_model","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["predict","LogisticRegression","linear_model","sklearn"],"node":2,"named":{},"vn":361,"reads":{},"edges":{"DATA":[[[144,146],1]],"CONTROL":[15,145,173,175,176,178,179,185]},"nodeNumber":142,"expr":"indian-liver-disease-modeling.py [226:13] -> [226:34]","source":"model.predict(test_X)","writes":{}},{"is_import":false,"args":[[["LogisticRegression","linear_model","sklearn"]]],"path":["predict","LogisticRegression","linear_model","sklearn"],"node":2,"named":{},"vn":362,"reads":{"predict":[139]},"edges":{"DATA":[[[142],0]],"CONTROL":[142]},"nodeNumber":143,"expr":"indian-liver-disease-modeling.py [226:13] -> [226:26]","source":"model.predict","writes":{}},{"is_import":false,"args":[[["sklearn"]],[["predict","LogisticRegression","linear_model","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["accuracy_score","metrics","sklearn"],"node":2,"named":{},"vn":366,"reads":{},"edges":{"CONTROL":[15,147,173,175,176,178,179,185]},"nodeNumber":144,"expr":"indian-liver-disease-modeling.py [227:52] -> [227:94]","source":"metrics.accuracy_score(prediction, test_Y)","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["accuracy_score","metrics","sklearn"],"node":2,"named":{},"vn":367,"reads":{"accuracy_score":[113]},"edges":{"DATA":[[[144],0]],"CONTROL":[144]},"nodeNumber":145,"expr":"indian-liver-disease-modeling.py [227:52] -> [227:74]","source":"metrics.accuracy_score","writes":{}},{"is_import":false,"args":[[["sklearn"]],[["predict","LogisticRegression","linear_model","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["f1_score","metrics","sklearn"],"node":2,"named":{},"vn":372,"reads":{},"edges":{"CONTROL":[15,148,173,175,176,178,179,185]},"nodeNumber":146,"expr":"indian-liver-disease-modeling.py [228:52] -> [228:88]","source":"metrics.f1_score(prediction, test_Y)","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["f1_score","metrics","sklearn"],"node":2,"named":{},"vn":373,"reads":{"f1_score":[113]},"edges":{"DATA":[[[146],0]],"CONTROL":[146]},"nodeNumber":147,"expr":"indian-liver-disease-modeling.py [228:52] -> [228:68]","source":"metrics.f1_score","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["DecisionTreeClassifier","tree","sklearn"],"node":2,"named":{},"vn":376,"reads":{},"edges":{"DATA":[[[150,152],0]],"CONTROL":[15,150,173,175,176,178,179,185]},"nodeNumber":148,"expr":"indian-liver-disease-modeling.py [233:8] -> [233:32]","source":"DecisionTreeClassifier()","writes":{}},{"is_import":false,"args":[[["DecisionTreeClassifier","tree","sklearn"]],[["train_test_split","model_selection","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["fit","DecisionTreeClassifier","tree","sklearn"],"node":2,"named":{},"vn":378,"reads":{},"edges":{"CONTROL":[15,152,173,175,176,178,179,185]},"nodeNumber":149,"expr":"indian-liver-disease-modeling.py [234:0] -> [234:27]","source":"\n\nmodel.fit(train_X, train_Y)","writes":{}},{"is_import":false,"args":[[["DecisionTreeClassifier","tree","sklearn"]]],"path":["fit","DecisionTreeClassifier","tree","sklearn"],"node":2,"named":{},"vn":379,"reads":{"fit":[148]},"edges":{"DATA":[[[149],0]],"CONTROL":[149]},"nodeNumber":150,"expr":"indian-liver-disease-modeling.py [234:0] -> [234:9]","source":"\n\nmodel.fit","writes":{}},{"is_import":false,"args":[[["DecisionTreeClassifier","tree","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["predict","DecisionTreeClassifier","tree","sklearn"],"node":2,"named":{},"vn":381,"reads":{},"edges":{"DATA":[[[153,155],1]],"CONTROL":[15,154,173,175,176,178,179,185]},"nodeNumber":151,"expr":"indian-liver-disease-modeling.py [235:13] -> [235:34]","source":"model.predict(test_X)","writes":{}},{"is_import":false,"args":[[["DecisionTreeClassifier","tree","sklearn"]]],"path":["predict","DecisionTreeClassifier","tree","sklearn"],"node":2,"named":{},"vn":382,"reads":{"predict":[148]},"edges":{"DATA":[[[151],0]],"CONTROL":[151]},"nodeNumber":152,"expr":"indian-liver-disease-modeling.py [235:13] -> [235:26]","source":"model.predict","writes":{}},{"is_import":false,"args":[[["sklearn"]],[["predict","DecisionTreeClassifier","tree","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["accuracy_score","metrics","sklearn"],"node":2,"named":{},"vn":386,"reads":{},"edges":{"CONTROL":[15,156,173,175,176,178,179,185]},"nodeNumber":153,"expr":"indian-liver-disease-modeling.py [236:46] -> [236:88]","source":"metrics.accuracy_score(prediction, test_Y)","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["accuracy_score","metrics","sklearn"],"node":2,"named":{},"vn":387,"reads":{"accuracy_score":[113]},"edges":{"DATA":[[[153],0]],"CONTROL":[153]},"nodeNumber":154,"expr":"indian-liver-disease-modeling.py [236:46] -> [236:68]","source":"metrics.accuracy_score","writes":{}},{"is_import":false,"args":[[["sklearn"]],[["predict","DecisionTreeClassifier","tree","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["f1_score","metrics","sklearn"],"node":2,"named":{},"vn":392,"reads":{},"edges":{"CONTROL":[15,157,173,175,176,178,179,185]},"nodeNumber":155,"expr":"indian-liver-disease-modeling.py [237:46] -> [237:82]","source":"metrics.f1_score(prediction, test_Y)","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["f1_score","metrics","sklearn"],"node":2,"named":{},"vn":393,"reads":{"f1_score":[113]},"edges":{"DATA":[[[155],0]],"CONTROL":[155]},"nodeNumber":156,"expr":"indian-liver-disease-modeling.py [237:46] -> [237:62]","source":"metrics.f1_score","writes":{}},{"is_import":false,"args":[[["sklearn"]],100,0],"path":["RandomForestClassifier","ensemble","sklearn"],"node":2,"named":{"n_estimators":100,"random_state":0},"vn":396,"reads":{},"edges":{"DATA":[[[159,161,170],0]],"CONTROL":[15,159,173,175,176,178,179,185]},"nodeNumber":157,"expr":"indian-liver-disease-modeling.py [242:8] -> [242:64]","source":"RandomForestClassifier(n_estimators=100, random_state=0)","writes":{}},{"is_import":false,"args":[[["RandomForestClassifier","ensemble","sklearn"]],[["train_test_split","model_selection","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["fit","RandomForestClassifier","ensemble","sklearn"],"node":2,"named":{},"vn":399,"reads":{},"edges":{"CONTROL":[15,161,173,175,176,178,179,185]},"nodeNumber":158,"expr":"indian-liver-disease-modeling.py [243:0] -> [243:27]","source":"\n\nmodel.fit(train_X, train_Y)","writes":{}},{"is_import":false,"args":[[["RandomForestClassifier","ensemble","sklearn"]]],"path":["fit","RandomForestClassifier","ensemble","sklearn"],"node":2,"named":{},"vn":400,"reads":{"fit":[157]},"edges":{"DATA":[[[158],0]],"CONTROL":[158]},"nodeNumber":159,"expr":"indian-liver-disease-modeling.py [243:0] -> [243:9]","source":"\n\nmodel.fit","writes":{}},{"is_import":false,"args":[[["RandomForestClassifier","ensemble","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["predict","RandomForestClassifier","ensemble","sklearn"],"node":2,"named":{},"vn":402,"reads":{},"edges":{"DATA":[[[162,164],1]],"CONTROL":[15,163,173,175,176,178,179,185]},"nodeNumber":160,"expr":"indian-liver-disease-modeling.py [244:13] -> [244:34]","source":"model.predict(test_X)","writes":{}},{"is_import":false,"args":[[["RandomForestClassifier","ensemble","sklearn"]]],"path":["predict","RandomForestClassifier","ensemble","sklearn"],"node":2,"named":{},"vn":403,"reads":{"predict":[157]},"edges":{"DATA":[[[160],0]],"CONTROL":[160]},"nodeNumber":161,"expr":"indian-liver-disease-modeling.py [244:13] -> [244:26]","source":"model.predict","writes":{}},{"is_import":false,"args":[[["sklearn"]],[["predict","RandomForestClassifier","ensemble","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["accuracy_score","metrics","sklearn"],"node":2,"named":{},"vn":407,"reads":{},"edges":{"CONTROL":[15,165,173,175,176,178,179,185]},"nodeNumber":162,"expr":"indian-liver-disease-modeling.py [245:46] -> [245:88]","source":"metrics.accuracy_score(prediction, test_Y)","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["accuracy_score","metrics","sklearn"],"node":2,"named":{},"vn":408,"reads":{"accuracy_score":[113]},"edges":{"DATA":[[[162],0]],"CONTROL":[162]},"nodeNumber":163,"expr":"indian-liver-disease-modeling.py [245:46] -> [245:68]","source":"metrics.accuracy_score","writes":{}},{"is_import":false,"args":[[["sklearn"]],[["predict","RandomForestClassifier","ensemble","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["f1_score","metrics","sklearn"],"node":2,"named":{},"vn":413,"reads":{},"edges":{"CONTROL":[15,169,173,175,176,178,179,185]},"nodeNumber":164,"expr":"indian-liver-disease-modeling.py [246:46] -> [246:82]","source":"metrics.f1_score(prediction, test_Y)","writes":{}},{"is_import":false,"args":[[["sklearn"]]],"path":["f1_score","metrics","sklearn"],"node":2,"named":{},"vn":414,"reads":{"f1_score":[113]},"edges":{"DATA":[[[164],0]],"CONTROL":[164]},"nodeNumber":165,"expr":"indian-liver-disease-modeling.py [246:46] -> [246:62]","source":"metrics.f1_score","writes":{}},{"is_import":false,"args":[[["Series","pandas"]],[]],"path":["sort_values","Series","pandas"],"node":2,"named":{"ascending":[]},"vn":418,"reads":{},"edges":{"CONTROL":[15,173,175,176,178,179,185]},"nodeNumber":166,"expr":"indian-liver-disease-modeling.py [248:6] -> [248:95]","source":"pd.Series(model.feature_importances_, index=train_X.columns).sort_values(ascending=False)","writes":{}},{"is_import":false,"args":[[["Series","pandas"]]],"path":["sort_values","Series","pandas"],"node":2,"named":{},"vn":419,"reads":{"sort_values":[168]},"edges":{"DATA":[[[166],0]],"CONTROL":[166]},"nodeNumber":167,"expr":"indian-liver-disease-modeling.py [248:6] -> [248:78]","source":"pd.Series(model.feature_importances_, index=train_X.columns).sort_values","writes":{}},{"is_import":false,"args":[[["pandas"]],[["RandomForestClassifier","ensemble","sklearn"]],[["train_test_split","model_selection","sklearn"]]],"path":["Series","pandas"],"node":2,"named":{"index":[["train_test_split","model_selection","sklearn"]]},"vn":420,"reads":{},"edges":{"DATA":[[[167],0]],"CONTROL":[15,167,173,175,176,178,179,185]},"nodeNumber":168,"expr":"indian-liver-disease-modeling.py [248:6] -> [248:8]","source":"pd","writes":{}},{"is_import":false,"args":[[["pandas"]]],"path":["Series","pandas"],"node":2,"named":{},"vn":421,"reads":{"Series":[4]},"edges":{"DATA":[[[168],0]],"CONTROL":[170]},"nodeNumber":169,"expr":"indian-liver-disease-modeling.py [248:6] -> [248:15]","source":"pd.Series","writes":{}},{"is_import":false,"args":[[["RandomForestClassifier","ensemble","sklearn"]]],"path":["feature_importances_","RandomForestClassifier","ensemble","sklearn"],"node":2,"named":{},"vn":423,"reads":{"feature_importances_":[157]},"edges":{"DATA":[[[168],1]],"CONTROL":[171]},"nodeNumber":170,"expr":"indian-liver-disease-modeling.py [248:16] -> [248:42]","source":"model.feature_importances_","writes":{}},{"is_import":false,"args":[[["train_test_split","model_selection","sklearn"]]],"path":["columns","train_test_split","model_selection","sklearn"],"node":2,"named":{},"vn":425,"reads":{"columns":[115]},"edges":{"DATA":[[[168],2]],"CONTROL":[168]},"nodeNumber":171,"expr":"indian-liver-disease-modeling.py [248:50] -> [248:65]","source":"train_X.columns","writes":{}},{"is_import":false,"args":[[["isnull","read_csv","pandas"],["isnull","read_csv","pandas"]]],"path":["sum","isnull","read_csv","pandas"],"node":15,"named":{},"vn":3,"reads":{},"edges":{"DATA":[[[180],1]],"CONTROL":[15,173,175,176,178,179,185]},"nodeNumber":172,"expr":"indian-liver-disease-modeling.py [62:14] -> [62:31]","source":"df.isnull().sum()","writes":{}},{"is_import":false,"args":[[["isnull","read_csv","pandas"],["isnull","read_csv","pandas"]]],"path":["sum","isnull","read_csv","pandas"],"node":15,"named":{},"vn":4,"reads":{"sum":[174]},"edges":{"DATA":[[[172],0]],"CONTROL":[172]},"nodeNumber":173,"expr":"indian-liver-disease-modeling.py [62:14] -> [62:29]","source":"df.isnull().sum","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["isnull","read_csv","pandas"],"node":15,"named":{},"vn":5,"reads":{},"edges":{"DATA":[[[173],0]],"CONTROL":[15,173,175,176,178,179,185]},"nodeNumber":174,"expr":"indian-liver-disease-modeling.py [62:14] -> [62:16]","source":"df","writes":{}},{"is_import":false,"args":[[["sum","isnull","read_csv","pandas"],["sum","isnull","read_csv","pandas"]],[]],"path":["sum","isnull","read_csv","pandas"],"node":15,"named":{},"vn":10,"reads":{},"edges":{"DATA":[[[180],1]],"CONTROL":[181]},"nodeNumber":175,"expr":"indian-liver-disease-modeling.py [63:46] -> [63:79]","source":"100 * df.isnull().sum() / len(df)","writes":{}},{"is_import":false,"args":[100,[["sum","isnull","read_csv","pandas"],["sum","isnull","read_csv","pandas"]]],"path":["sum","isnull","read_csv","pandas"],"node":15,"named":{},"vn":11,"reads":{},"edges":{"DATA":[[[175],0]],"CONTROL":[15,173,175,176,178,179,185]},"nodeNumber":176,"expr":"indian-liver-disease-modeling.py [63:22] -> [63:25]","source":"100","writes":{}},{"is_import":false,"args":[[["isnull","read_csv","pandas"],["isnull","read_csv","pandas"]]],"path":["sum","isnull","read_csv","pandas"],"node":15,"named":{},"vn":13,"reads":{},"edges":{"DATA":[[[176],1]],"CONTROL":[15,173,175,176,178,179,185]},"nodeNumber":177,"expr":"indian-liver-disease-modeling.py [63:28] -> [63:45]","source":"df.isnull().sum()","writes":{}},{"is_import":false,"args":[[["isnull","read_csv","pandas"],["isnull","read_csv","pandas"]]],"path":["sum","isnull","read_csv","pandas"],"node":15,"named":{},"vn":14,"reads":{"sum":[179]},"edges":{"DATA":[[[177],0]],"CONTROL":[177]},"nodeNumber":178,"expr":"indian-liver-disease-modeling.py [63:28] -> [63:43]","source":"df.isnull().sum","writes":{}},{"is_import":false,"args":[[["read_csv","pandas"]]],"path":["isnull","read_csv","pandas"],"node":15,"named":{},"vn":15,"reads":{},"edges":{"DATA":[[[178],0]],"CONTROL":[15,173,175,176,178,179,185]},"nodeNumber":179,"expr":"indian-liver-disease-modeling.py [63:28] -> [63:30]","source":"df","writes":{}},{"is_import":false,"args":[[["pandas"]],[["sum","isnull","read_csv","pandas"],["sum","isnull","read_csv","pandas"],["sum","isnull","read_csv","pandas"],["sum","isnull","read_csv","pandas"]],1],"path":["concat","pandas"],"node":15,"named":{"axis":1},"vn":24,"reads":{},"edges":{"DATA":[[[183],0]],"CONTROL":[15,173,175,176,178,179,183,185,187]},"nodeNumber":180,"expr":"indian-liver-disease-modeling.py [64:20] -> [64:65]","source":"pd.concat([mis_val, mis_val_percent], axis=1)","writes":{}},{"is_import":false,"args":[[["pandas"]]],"path":["concat","pandas"],"node":15,"named":{},"vn":25,"reads":{"concat":[4]},"edges":{"DATA":[[[180],0],[[180],1]],"CONTROL":[180]},"nodeNumber":181,"expr":"indian-liver-disease-modeling.py [64:20] -> [64:29]","source":"pd.concat","writes":{}},{"is_import":false,"args":[[["concat","pandas"],["concat","pandas"]],{"0":"Missing Values","1":"% of Total Values"}],"path":["rename","concat","pandas"],"node":15,"named":{"columns":{"0":"Missing Values","1":"% of Total Values"}},"vn":35,"reads":{},"edges":{"CONTROL":[15,173,175,176,178,179,185]},"nodeNumber":182,"expr":"indian-liver-disease-modeling.py [65:32] -> [65:107]","source":"mis_val_table.rename(columns={0: 'Missing Values', 1: '% of Total Values'})","writes":{}},{"is_import":false,"args":[[["concat","pandas"],["concat","pandas"]]],"path":["rename","concat","pandas"],"node":15,"named":{},"vn":36,"reads":{"rename":[180,184]},"edges":{"DATA":[[[182],0],[[182],1]],"CONTROL":[182]},"nodeNumber":183,"expr":"indian-liver-disease-modeling.py [65:32] -> [65:52]","source":"mis_val_table.rename","writes":{}},{"is_import":false,"args":[[["pandas"]],[["sum","isnull","read_csv","pandas"],["sum","isnull","read_csv","pandas"],["sum","isnull","read_csv","pandas"],["sum","isnull","read_csv","pandas"]],1],"path":["concat","pandas"],"node":68,"named":{"axis":1},"vn":24,"reads":{},"edges":{"DATA":[[[187],0]],"CONTROL":[15,173,175,176,178,179,183,185,187]},"nodeNumber":184,"expr":"indian-liver-disease-modeling.py [64:20] -> [64:65]","source":"pd.concat([mis_val, mis_val_percent], axis=1)","writes":{}},{"is_import":false,"args":[[["pandas"]]],"path":["concat","pandas"],"node":68,"named":{},"vn":25,"reads":{"concat":[4]},"edges":{"DATA":[[[184],0],[[184],1]],"CONTROL":[184]},"nodeNumber":185,"expr":"indian-liver-disease-modeling.py [64:20] -> [64:29]","source":"pd.concat","writes":{}},{"is_import":false,"args":[[["concat","pandas"],["concat","pandas"]],{"0":"Missing Values","1":"% of Total Values"}],"path":["rename","concat","pandas"],"node":68,"named":{"columns":{"0":"Missing Values","1":"% of Total Values"}},"vn":35,"reads":{},"edges":{"CONTROL":[15,173,175,176,178,179,185]},"nodeNumber":186,"expr":"indian-liver-disease-modeling.py [65:32] -> [65:107]","source":"mis_val_table.rename(columns={0: 'Missing Values', 1: '% of Total Values'})","writes":{}},{"is_import":false,"args":[[["concat","pandas"],["concat","pandas"]]],"path":["rename","concat","pandas"],"node":68,"named":{},"vn":36,"reads":{"rename":[180,184]},"edges":{"DATA":[[[186],0],[[186],1]],"CONTROL":[186]},"nodeNumber":187,"expr":"indian-liver-disease-modeling.py [65:32] -> [65:52]","source":"mis_val_table.rename","writes":{}}]
success: /Users/dolby/PycharmProjects/TurtleTest/indian-liver-disease-modeling.py has 188 turtles
